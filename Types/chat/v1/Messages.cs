// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: chat/v1/messages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Harmony.Chat.V1 {

  /// <summary>Holder for reflection information generated from chat/v1/messages.proto</summary>
  public static partial class MessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for chat/v1/messages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZjaGF0L3YxL21lc3NhZ2VzLnByb3RvEhBwcm90b2NvbC5jaGF0LnYxGhto",
            "YXJtb255dHlwZXMvdjEvdHlwZXMucHJvdG8aFGVtb3RlL3YxL3R5cGVzLnBy",
            "b3RvItACCglPdmVycmlkZXMSFQoIdXNlcm5hbWUYASABKAlIAYgBARITCgZh",
            "dmF0YXIYAiABKAlIAogBARIWCgx1c2VyX2RlZmluZWQYAyABKAlIABIyCgd3",
            "ZWJob29rGAQgASgLMh8ucHJvdG9jb2wuaGFybW9ueXR5cGVzLnYxLkVtcHR5",
            "SAASOwoQc3lzdGVtX3BsdXJhbGl0eRgFIAEoCzIfLnByb3RvY29sLmhhcm1v",
            "bnl0eXBlcy52MS5FbXB0eUgAEjkKDnN5c3RlbV9tZXNzYWdlGAYgASgLMh8u",
            "cHJvdG9jb2wuaGFybW9ueXR5cGVzLnYxLkVtcHR5SAASMQoGYnJpZGdlGAcg",
            "ASgLMh8ucHJvdG9jb2wuaGFybW9ueXR5cGVzLnYxLkVtcHR5SABCCAoGcmVh",
            "c29uQgsKCV91c2VybmFtZUIJCgdfYXZhdGFyIqQCCg1BY3Rpb25QYXlsb2Fk",
            "EjgKBmJ1dHRvbhgBIAEoCzImLnByb3RvY29sLmNoYXQudjEuQWN0aW9uUGF5",
            "bG9hZC5CdXR0b25IABI8Cghkcm9wZG93bhgCIAEoCzIoLnByb3RvY29sLmNo",
            "YXQudjEuQWN0aW9uUGF5bG9hZC5Ecm9wZG93bkgAEjYKBWlucHV0GAMgASgL",
            "MiUucHJvdG9jb2wuY2hhdC52MS5BY3Rpb25QYXlsb2FkLklucHV0SAAaFgoG",
            "QnV0dG9uEgwKBGRhdGEYASABKAwaGgoIRHJvcGRvd24SDgoGY2hvaWNlGAEg",
            "ASgMGiQKBUlucHV0Eg0KBWlucHV0GAEgASgJEgwKBGRhdGEYAiABKAxCCQoH",
            "cGF5bG9hZCKgBAoGQWN0aW9uEjIKC2FjdGlvbl90eXBlGAEgASgOMh0ucHJv",
            "dG9jb2wuY2hhdC52MS5BY3Rpb24uVHlwZRIxCgZidXR0b24YAiABKAsyHy5w",
            "cm90b2NvbC5jaGF0LnYxLkFjdGlvbi5CdXR0b25IABI1Cghkcm9wZG93bhgD",
            "IAEoCzIhLnByb3RvY29sLmNoYXQudjEuQWN0aW9uLkRyb3Bkb3duSAASLwoF",
            "aW5wdXQYBCABKAsyHi5wcm90b2NvbC5jaGF0LnYxLkFjdGlvbi5JbnB1dEgA",
            "Gj4KBkJ1dHRvbhIMCgR0ZXh0GAEgASgJEgwKBGRhdGEYAiABKAwSEAoDdXJs",
            "GAMgASgJSACIAQFCBgoEX3VybBp5CghEcm9wZG93bhINCgVsYWJlbBgBIAEo",
            "CRI4CgdlbnRyaWVzGAIgAygLMicucHJvdG9jb2wuY2hhdC52MS5BY3Rpb24u",
            "RHJvcGRvd24uRW50cnkaJAoFRW50cnkSDQoFbGFiZWwYASABKAkSDAoEZGF0",
            "YRgCIAEoDBo3CgVJbnB1dBINCgVsYWJlbBgBIAEoCRIRCgltdWx0aWxpbmUY",
            "AiABKAgSDAoEZGF0YRgDIAEoDCJLCgRUeXBlEhsKF1RZUEVfTk9STUFMX1VO",
            "U1BFQ0lGSUVEEAASEAoMVFlQRV9QUklNQVJZEAESFAoQVFlQRV9ERVNUUlVD",
            "VElWRRACQgYKBGtpbmQiqQYKBUVtYmVkEg0KBXRpdGxlGAEgASgJEjIKBGJv",
            "ZHkYAiABKAsyHy5wcm90b2NvbC5jaGF0LnYxLkZvcm1hdHRlZFRleHRIAIgB",
            "ARISCgVjb2xvchgDIAEoBUgBiAEBEjkKBmhlYWRlchgEIAEoCzIkLnByb3Rv",
            "Y29sLmNoYXQudjEuRW1iZWQuRW1iZWRIZWFkaW5nSAKIAQESOQoGZm9vdGVy",
            "GAUgASgLMiQucHJvdG9jb2wuY2hhdC52MS5FbWJlZC5FbWJlZEhlYWRpbmdI",
            "A4gBARIyCgZmaWVsZHMYBiADKAsyIi5wcm90b2NvbC5jaGF0LnYxLkVtYmVk",
            "LkVtYmVkRmllbGQadAoMRW1iZWRIZWFkaW5nEgwKBHRleHQYASABKAkSFAoH",
            "c3VidGV4dBgCIAEoCUgAiAEBEhAKA3VybBgDIAEoCUgBiAEBEhEKBGljb24Y",
            "BCABKAlIAogBAUIKCghfc3VidGV4dEIGCgRfdXJsQgcKBV9pY29uGv8CCgpF",
            "bWJlZEZpZWxkEg0KBXRpdGxlGAEgASgJEhUKCHN1YnRpdGxlGAIgASgJSACI",
            "AQESMgoEYm9keRgDIAEoCzIfLnByb3RvY29sLmNoYXQudjEuRm9ybWF0dGVk",
            "VGV4dEgBiAEBEhYKCWltYWdlX3VybBgEIAEoCUgCiAEBEkUKDHByZXNlbnRh",
            "dGlvbhgFIAEoDjIvLnByb3RvY29sLmNoYXQudjEuRW1iZWQuRW1iZWRGaWVs",
            "ZC5QcmVzZW50YXRpb24SKQoHYWN0aW9ucxgGIAMoCzIYLnByb3RvY29sLmNo",
            "YXQudjEuQWN0aW9uImkKDFByZXNlbnRhdGlvbhIhCh1QUkVTRU5UQVRJT05f",
            "REFUQV9VTlNQRUNJRklFRBAAEiAKHFBSRVNFTlRBVElPTl9DQVBUSU9ORURf",
            "SU1BR0UQARIUChBQUkVTRU5UQVRJT05fUk9XEAJCCwoJX3N1YnRpdGxlQgcK",
            "BV9ib2R5QgwKCl9pbWFnZV91cmxCBwoFX2JvZHlCCAoGX2NvbG9yQgkKB19o",
            "ZWFkZXJCCQoHX2Zvb3RlciI8Cg1NaW5pdGh1bWJuYWlsEg0KBXdpZHRoGAEg",
            "ASgNEg4KBmhlaWdodBgCIAEoDRIMCgRkYXRhGAMgASgMIr4BCgVQaG90bxIL",
            "CgNobWMYASABKAkSDAoEbmFtZRgCIAEoCRIRCglmaWxlX3NpemUYAyABKA0S",
            "DgoGaGVpZ2h0GAQgASgNEg0KBXdpZHRoGAUgASgNEjAKB2NhcHRpb24YBiAB",
            "KAsyHy5wcm90b2NvbC5jaGF0LnYxLkZvcm1hdHRlZFRleHQSNgoNbWluaXRo",
            "dW1ibmFpbBgHIAEoCzIfLnByb3RvY29sLmNoYXQudjEuTWluaXRodW1ibmFp",
            "bCKJAQoKQXR0YWNobWVudBIKCgJpZBgBIAEoCRIMCgRuYW1lGAIgASgJEhAK",
            "CG1pbWV0eXBlGAMgASgJEgwKBHNpemUYBCABKA0SNQoHY2FwdGlvbhgFIAEo",
            "CzIfLnByb3RvY29sLmNoYXQudjEuRm9ybWF0dGVkVGV4dEgAiAEBQgoKCF9j",
            "YXB0aW9uIpAHCgdDb250ZW50Ej0KDHRleHRfbWVzc2FnZRgBIAEoCzIlLnBy",
            "b3RvY29sLmNoYXQudjEuQ29udGVudC5UZXh0Q29udGVudEgAEj8KDWVtYmVk",
            "X21lc3NhZ2UYAiABKAsyJi5wcm90b2NvbC5jaGF0LnYxLkNvbnRlbnQuRW1i",
            "ZWRDb250ZW50SAASSQoSYXR0YWNobWVudF9tZXNzYWdlGAMgASgLMisucHJv",
            "dG9jb2wuY2hhdC52MS5Db250ZW50LkF0dGFjaG1lbnRDb250ZW50SAASPwoN",
            "cGhvdG9fbWVzc2FnZRgEIAEoCzImLnByb3RvY29sLmNoYXQudjEuQ29udGVu",
            "dC5QaG90b0NvbnRlbnRIABJDCg9pbnZpdGVfcmVqZWN0ZWQYBSABKAsyKC5w",
            "cm90b2NvbC5jaGF0LnYxLkNvbnRlbnQuSW52aXRlUmVqZWN0ZWRIABJDCg9p",
            "bnZpdGVfYWNjZXB0ZWQYBiABKAsyKC5wcm90b2NvbC5jaGF0LnYxLkNvbnRl",
            "bnQuSW52aXRlQWNjZXB0ZWRIABJPChZyb29tX3VwZ3JhZGVkX3RvX2d1aWxk",
            "GAcgASgLMi0ucHJvdG9jb2wuY2hhdC52MS5Db250ZW50LlJvb21VcGdyYWRl",
            "ZFRvR3VpbGRIABo/CgtUZXh0Q29udGVudBIwCgdjb250ZW50GAEgASgLMh8u",
            "cHJvdG9jb2wuY2hhdC52MS5Gb3JtYXR0ZWRUZXh0GjcKDEVtYmVkQ29udGVu",
            "dBInCgZlbWJlZHMYASADKAsyFy5wcm90b2NvbC5jaGF0LnYxLkVtYmVkGkAK",
            "EUF0dGFjaG1lbnRDb250ZW50EisKBWZpbGVzGAEgAygLMhwucHJvdG9jb2wu",
            "Y2hhdC52MS5BdHRhY2htZW50GjcKDFBob3RvQ29udGVudBInCgZwaG90b3MY",
            "ASADKAsyFy5wcm90b2NvbC5jaGF0LnYxLlBob3RvGjgKDkludml0ZVJlamVj",
            "dGVkEhIKCmludml0ZWVfaWQYASABKAQSEgoKaW52aXRlcl9pZBgCIAEoBBo4",
            "Cg5JbnZpdGVBY2NlcHRlZBISCgppbnZpdGVlX2lkGAEgASgEEhIKCmludml0",
            "ZXJfaWQYAiABKAQaKgoTUm9vbVVwZ3JhZGVkVG9HdWlsZBITCgt1cGdyYWRl",
            "ZF9ieRgBIAEoBEIJCgdjb250ZW50IkIKCFJlYWN0aW9uEicKBWVtb3RlGAEg",
            "ASgLMhgucHJvdG9jb2wuZW1vdGUudjEuRW1vdGUSDQoFY291bnQYAiABKA0i",
            "4AoKBkZvcm1hdBINCgVzdGFydBgBIAEoDRIOCgZsZW5ndGgYAiABKA0SLQoE",
            "Ym9sZBgDIAEoCzIdLnByb3RvY29sLmNoYXQudjEuRm9ybWF0LkJvbGRIABIx",
            "CgZpdGFsaWMYBCABKAsyHy5wcm90b2NvbC5jaGF0LnYxLkZvcm1hdC5JdGFs",
            "aWNIABI3Cgl1bmRlcmxpbmUYBSABKAsyIi5wcm90b2NvbC5jaGF0LnYxLkZv",
            "cm1hdC5VbmRlcmxpbmVIABI3Cgltb25vc3BhY2UYBiABKAsyIi5wcm90b2Nv",
            "bC5jaGF0LnYxLkZvcm1hdC5Nb25vc3BhY2VIABI7CgtzdXBlcnNjcmlwdBgH",
            "IAEoCzIkLnByb3RvY29sLmNoYXQudjEuRm9ybWF0LlN1cGVyc2NyaXB0SAAS",
            "NwoJc3Vic2NyaXB0GAggASgLMiIucHJvdG9jb2wuY2hhdC52MS5Gb3JtYXQu",
            "U3Vic2NyaXB0SAASOAoKY29kZV9ibG9jaxgJIAEoCzIiLnByb3RvY29sLmNo",
            "YXQudjEuRm9ybWF0LkNvZGVCbG9ja0gAEjwKDHVzZXJfbWVudGlvbhgKIAEo",
            "CzIkLnByb3RvY29sLmNoYXQudjEuRm9ybWF0LlVzZXJNZW50aW9uSAASPAoM",
            "cm9sZV9tZW50aW9uGAsgASgLMiQucHJvdG9jb2wuY2hhdC52MS5Gb3JtYXQu",
            "Um9sZU1lbnRpb25IABJCCg9jaGFubmVsX21lbnRpb24YDCABKAsyJy5wcm90",
            "b2NvbC5jaGF0LnYxLkZvcm1hdC5DaGFubmVsTWVudGlvbkgAEj4KDWd1aWxk",
            "X21lbnRpb24YDSABKAsyJS5wcm90b2NvbC5jaGF0LnYxLkZvcm1hdC5HdWls",
            "ZE1lbnRpb25IABIvCgVlbW9qaRgOIAEoCzIeLnByb3RvY29sLmNoYXQudjEu",
            "Rm9ybWF0LkVtb2ppSAASLwoFY29sb3IYDyABKAsyHi5wcm90b2NvbC5jaGF0",
            "LnYxLkZvcm1hdC5Db2xvckgAEj0KDGxvY2FsaXphdGlvbhgQIAEoCzIlLnBy",
            "b3RvY29sLmNoYXQudjEuRm9ybWF0LkxvY2FsaXphdGlvbkgAGgYKBEJvbGQa",
            "CAoGSXRhbGljGgsKCVVuZGVybGluZRoLCglNb25vc3BhY2UaDQoLU3VwZXJz",
            "Y3JpcHQaCwoJU3Vic2NyaXB0Gh0KCUNvZGVCbG9jaxIQCghsYW5ndWFnZRgB",
            "IAEoCRoeCgtVc2VyTWVudGlvbhIPCgd1c2VyX2lkGAEgASgEGh4KC1JvbGVN",
            "ZW50aW9uEg8KB3JvbGVfaWQYASABKAQaJAoOQ2hhbm5lbE1lbnRpb24SEgoK",
            "Y2hhbm5lbF9pZBgBIAEoBBo0CgxHdWlsZE1lbnRpb24SEAoIZ3VpbGRfaWQY",
            "ASABKAQSEgoKaG9tZXNlcnZlchgCIAEoCRorCgVFbW9qaRIRCglpbWFnZV9o",
            "bWMYASABKAkSDwoHcGFja19pZBgCIAEoBBq0AQoFQ29sb3ISMQoEa2luZBgB",
            "IAEoDjIjLnByb3RvY29sLmNoYXQudjEuRm9ybWF0LkNvbG9yLktpbmQieAoE",
            "S2luZBIYChRLSU5EX0RJTV9VTlNQRUNJRklFRBAAEg8KC0tJTkRfQlJJR0hU",
            "EAESEQoNS0lORF9ORUdBVElWRRACEhEKDUtJTkRfUE9TSVRJVkUQAxINCglL",
            "SU5EX0lORk8QBBIQCgxLSU5EX1dBUk5JTkcQBRohCgxMb2NhbGl6YXRpb24S",
            "EQoJaTE4bl9jb2RlGAEgASgJQggKBmZvcm1hdCJHCg1Gb3JtYXR0ZWRUZXh0",
            "EgwKBHRleHQYASABKAkSKAoGZm9ybWF0GAIgAygLMhgucHJvdG9jb2wuY2hh",
            "dC52MS5Gb3JtYXQi0wIKB01lc3NhZ2USOQoIbWV0YWRhdGEYASABKAsyIi5w",
            "cm90b2NvbC5oYXJtb255dHlwZXMudjEuTWV0YWRhdGFIAIgBARIuCglvdmVy",
            "cmlkZXMYAiABKAsyGy5wcm90b2NvbC5jaGF0LnYxLk92ZXJyaWRlcxIRCglh",
            "dXRob3JfaWQYAyABKAQSEgoKY3JlYXRlZF9hdBgEIAEoBBIWCgllZGl0ZWRf",
            "YXQYBSABKARIAYgBARIYCgtpbl9yZXBseV90bxgGIAEoBEgCiAEBEioKB2Nv",
            "bnRlbnQYByABKAsyGS5wcm90b2NvbC5jaGF0LnYxLkNvbnRlbnQSLQoJcmVh",
            "Y3Rpb25zGAggAygLMhoucHJvdG9jb2wuY2hhdC52MS5SZWFjdGlvbkILCglf",
            "bWV0YWRhdGFCDAoKX2VkaXRlZF9hdEIOCgxfaW5fcmVwbHlfdG8iTwoNTWVz",
            "c2FnZVdpdGhJZBISCgptZXNzYWdlX2lkGAEgASgEEioKB21lc3NhZ2UYAiAB",
            "KAsyGS5wcm90b2NvbC5jaGF0LnYxLk1lc3NhZ2UivgIKGUdldENoYW5uZWxN",
            "ZXNzYWdlc1JlcXVlc3QSEAoIZ3VpbGRfaWQYASABKAQSEgoKY2hhbm5lbF9p",
            "ZBgCIAEoBBIXCgptZXNzYWdlX2lkGAMgASgESACIAQESTQoJZGlyZWN0aW9u",
            "GAQgASgOMjUucHJvdG9jb2wuY2hhdC52MS5HZXRDaGFubmVsTWVzc2FnZXNS",
            "ZXF1ZXN0LkRpcmVjdGlvbkgBiAEBEhIKBWNvdW50GAUgASgNSAKIAQEiWAoJ",
            "RGlyZWN0aW9uEiAKHERJUkVDVElPTl9CRUZPUkVfVU5TUEVDSUZJRUQQABIU",
            "ChBESVJFQ1RJT05fQVJPVU5EEAESEwoPRElSRUNUSU9OX0FGVEVSEAJCDQoL",
            "X21lc3NhZ2VfaWRCDAoKX2RpcmVjdGlvbkIICgZfY291bnQifAoaR2V0Q2hh",
            "bm5lbE1lc3NhZ2VzUmVzcG9uc2USEwoLcmVhY2hlZF90b3AYASABKAgSFgoO",
            "cmVhY2hlZF9ib3R0b20YAiABKAgSMQoIbWVzc2FnZXMYAyADKAsyHy5wcm90",
            "b2NvbC5jaGF0LnYxLk1lc3NhZ2VXaXRoSWQiTQoRR2V0TWVzc2FnZVJlcXVl",
            "c3QSEAoIZ3VpbGRfaWQYASABKAQSEgoKY2hhbm5lbF9pZBgCIAEoBBISCgpt",
            "ZXNzYWdlX2lkGAMgASgEIkAKEkdldE1lc3NhZ2VSZXNwb25zZRIqCgdtZXNz",
            "YWdlGAEgASgLMhkucHJvdG9jb2wuY2hhdC52MS5NZXNzYWdlIlAKFERlbGV0",
            "ZU1lc3NhZ2VSZXF1ZXN0EhAKCGd1aWxkX2lkGAEgASgEEhIKCmNoYW5uZWxf",
            "aWQYAiABKAQSEgoKbWVzc2FnZV9pZBgDIAEoBCIXChVEZWxldGVNZXNzYWdl",
            "UmVzcG9uc2UiggEKFFRyaWdnZXJBY3Rpb25SZXF1ZXN0EhAKCGd1aWxkX2lk",
            "GAEgASgEEhIKCmNoYW5uZWxfaWQYAiABKAQSEgoKbWVzc2FnZV9pZBgDIAEo",
            "BBIwCgdwYXlsb2FkGAQgASgLMh8ucHJvdG9jb2wuY2hhdC52MS5BY3Rpb25Q",
            "YXlsb2FkIhcKFVRyaWdnZXJBY3Rpb25SZXNwb25zZSK9AgoSU2VuZE1lc3Nh",
            "Z2VSZXF1ZXN0EhAKCGd1aWxkX2lkGAEgASgEEhIKCmNoYW5uZWxfaWQYAiAB",
            "KAQSKgoHY29udGVudBgDIAEoCzIZLnByb3RvY29sLmNoYXQudjEuQ29udGVu",
            "dBIUCgdlY2hvX2lkGAQgASgESACIAQESMwoJb3ZlcnJpZGVzGAYgASgLMhsu",
            "cHJvdG9jb2wuY2hhdC52MS5PdmVycmlkZXNIAYgBARIYCgtpbl9yZXBseV90",
            "bxgHIAEoBEgCiAEBEjkKCG1ldGFkYXRhGAUgASgLMiIucHJvdG9jb2wuaGFy",
            "bW9ueXR5cGVzLnYxLk1ldGFkYXRhSAOIAQFCCgoIX2VjaG9faWRCDAoKX292",
            "ZXJyaWRlc0IOCgxfaW5fcmVwbHlfdG9CCwoJX21ldGFkYXRhIikKE1NlbmRN",
            "ZXNzYWdlUmVzcG9uc2USEgoKbWVzc2FnZV9pZBgBIAEoBCKKAQoYVXBkYXRl",
            "TWVzc2FnZVRleHRSZXF1ZXN0EhAKCGd1aWxkX2lkGAEgASgEEhIKCmNoYW5u",
            "ZWxfaWQYAiABKAQSEgoKbWVzc2FnZV9pZBgDIAEoBBI0CgtuZXdfY29udGVu",
            "dBgEIAEoCzIfLnByb3RvY29sLmNoYXQudjEuRm9ybWF0dGVkVGV4dCIbChlV",
            "cGRhdGVNZXNzYWdlVGV4dFJlc3BvbnNlIk0KEVBpbk1lc3NhZ2VSZXF1ZXN0",
            "EhAKCGd1aWxkX2lkGAEgASgEEhIKCmNoYW5uZWxfaWQYAiABKAQSEgoKbWVz",
            "c2FnZV9pZBgDIAEoBCIUChJQaW5NZXNzYWdlUmVzcG9uc2UiTwoTVW5waW5N",
            "ZXNzYWdlUmVxdWVzdBIQCghndWlsZF9pZBgBIAEoBBISCgpjaGFubmVsX2lk",
            "GAIgASgEEhIKCm1lc3NhZ2VfaWQYAyABKAQiFgoUVW5waW5NZXNzYWdlUmVz",
            "cG9uc2UiQAoYR2V0UGlubmVkTWVzc2FnZXNSZXF1ZXN0EhAKCGd1aWxkX2lk",
            "GAEgASgEEhIKCmNoYW5uZWxfaWQYAiABKAQiNwoZR2V0UGlubmVkTWVzc2Fn",
            "ZXNSZXNwb25zZRIaChJwaW5uZWRfbWVzc2FnZV9pZHMYASADKAQidwoSQWRk",
            "UmVhY3Rpb25SZXF1ZXN0EhAKCGd1aWxkX2lkGAEgASgEEhIKCmNoYW5uZWxf",
            "aWQYAiABKAQSEgoKbWVzc2FnZV9pZBgDIAEoBBInCgVlbW90ZRgEIAEoCzIY",
            "LnByb3RvY29sLmVtb3RlLnYxLkVtb3RlIhUKE0FkZFJlYWN0aW9uUmVzcG9u",
            "c2UiegoVUmVtb3ZlUmVhY3Rpb25SZXF1ZXN0EhAKCGd1aWxkX2lkGAEgASgE",
            "EhIKCmNoYW5uZWxfaWQYAiABKAQSEgoKbWVzc2FnZV9pZBgDIAEoBBInCgVl",
            "bW90ZRgEIAEoCzIYLnByb3RvY29sLmVtb3RlLnYxLkVtb3RlIhgKFlJlbW92",
            "ZVJlYWN0aW9uUmVzcG9uc2VCM1oxZ2l0aHViLmNvbS9oYXJtb255LWRldmVs",
            "b3BtZW50L2xlZ2F0by9nZW4vY2hhdC92MWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Harmony.Harmonytypes.V1.TypesReflection.Descriptor, global::Harmony.Emote.V1.TypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Overrides), global::Harmony.Chat.V1.Overrides.Parser, new[]{ "Username", "Avatar", "UserDefined", "Webhook", "SystemPlurality", "SystemMessage", "Bridge" }, new[]{ "Reason", "Username", "Avatar" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.ActionPayload), global::Harmony.Chat.V1.ActionPayload.Parser, new[]{ "Button", "Dropdown", "Input" }, new[]{ "Payload" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.ActionPayload.Types.Button), global::Harmony.Chat.V1.ActionPayload.Types.Button.Parser, new[]{ "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.ActionPayload.Types.Dropdown), global::Harmony.Chat.V1.ActionPayload.Types.Dropdown.Parser, new[]{ "Choice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.ActionPayload.Types.Input), global::Harmony.Chat.V1.ActionPayload.Types.Input.Parser, new[]{ "Input_", "Data" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Action), global::Harmony.Chat.V1.Action.Parser, new[]{ "ActionType", "Button", "Dropdown", "Input" }, new[]{ "Kind" }, new[]{ typeof(global::Harmony.Chat.V1.Action.Types.Type) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Action.Types.Button), global::Harmony.Chat.V1.Action.Types.Button.Parser, new[]{ "Text", "Data", "Url" }, new[]{ "Url" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Action.Types.Dropdown), global::Harmony.Chat.V1.Action.Types.Dropdown.Parser, new[]{ "Label", "Entries" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Action.Types.Dropdown.Types.Entry), global::Harmony.Chat.V1.Action.Types.Dropdown.Types.Entry.Parser, new[]{ "Label", "Data" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Action.Types.Input), global::Harmony.Chat.V1.Action.Types.Input.Parser, new[]{ "Label", "Multiline", "Data" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Embed), global::Harmony.Chat.V1.Embed.Parser, new[]{ "Title", "Body", "Color", "Header", "Footer", "Fields" }, new[]{ "Body", "Color", "Header", "Footer" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Embed.Types.EmbedHeading), global::Harmony.Chat.V1.Embed.Types.EmbedHeading.Parser, new[]{ "Text", "Subtext", "Url", "Icon" }, new[]{ "Subtext", "Url", "Icon" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Embed.Types.EmbedField), global::Harmony.Chat.V1.Embed.Types.EmbedField.Parser, new[]{ "Title", "Subtitle", "Body", "ImageUrl", "Presentation", "Actions" }, new[]{ "Subtitle", "Body", "ImageUrl" }, new[]{ typeof(global::Harmony.Chat.V1.Embed.Types.EmbedField.Types.Presentation) }, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Minithumbnail), global::Harmony.Chat.V1.Minithumbnail.Parser, new[]{ "Width", "Height", "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Photo), global::Harmony.Chat.V1.Photo.Parser, new[]{ "Hmc", "Name", "FileSize", "Height", "Width", "Caption", "Minithumbnail" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Attachment), global::Harmony.Chat.V1.Attachment.Parser, new[]{ "Id", "Name", "Mimetype", "Size", "Caption" }, new[]{ "Caption" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Content), global::Harmony.Chat.V1.Content.Parser, new[]{ "TextMessage", "EmbedMessage", "AttachmentMessage", "PhotoMessage", "InviteRejected", "InviteAccepted", "RoomUpgradedToGuild" }, new[]{ "Content" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Content.Types.TextContent), global::Harmony.Chat.V1.Content.Types.TextContent.Parser, new[]{ "Content" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Content.Types.EmbedContent), global::Harmony.Chat.V1.Content.Types.EmbedContent.Parser, new[]{ "Embeds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Content.Types.AttachmentContent), global::Harmony.Chat.V1.Content.Types.AttachmentContent.Parser, new[]{ "Files" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Content.Types.PhotoContent), global::Harmony.Chat.V1.Content.Types.PhotoContent.Parser, new[]{ "Photos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Content.Types.InviteRejected), global::Harmony.Chat.V1.Content.Types.InviteRejected.Parser, new[]{ "InviteeId", "InviterId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Content.Types.InviteAccepted), global::Harmony.Chat.V1.Content.Types.InviteAccepted.Parser, new[]{ "InviteeId", "InviterId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Content.Types.RoomUpgradedToGuild), global::Harmony.Chat.V1.Content.Types.RoomUpgradedToGuild.Parser, new[]{ "UpgradedBy" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Reaction), global::Harmony.Chat.V1.Reaction.Parser, new[]{ "Emote", "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Format), global::Harmony.Chat.V1.Format.Parser, new[]{ "Start", "Length", "Bold", "Italic", "Underline", "Monospace", "Superscript", "Subscript", "CodeBlock", "UserMention", "RoleMention", "ChannelMention", "GuildMention", "Emoji", "Color", "Localization" }, new[]{ "Format" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Format.Types.Bold), global::Harmony.Chat.V1.Format.Types.Bold.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Format.Types.Italic), global::Harmony.Chat.V1.Format.Types.Italic.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Format.Types.Underline), global::Harmony.Chat.V1.Format.Types.Underline.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Format.Types.Monospace), global::Harmony.Chat.V1.Format.Types.Monospace.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Format.Types.Superscript), global::Harmony.Chat.V1.Format.Types.Superscript.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Format.Types.Subscript), global::Harmony.Chat.V1.Format.Types.Subscript.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Format.Types.CodeBlock), global::Harmony.Chat.V1.Format.Types.CodeBlock.Parser, new[]{ "Language" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Format.Types.UserMention), global::Harmony.Chat.V1.Format.Types.UserMention.Parser, new[]{ "UserId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Format.Types.RoleMention), global::Harmony.Chat.V1.Format.Types.RoleMention.Parser, new[]{ "RoleId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Format.Types.ChannelMention), global::Harmony.Chat.V1.Format.Types.ChannelMention.Parser, new[]{ "ChannelId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Format.Types.GuildMention), global::Harmony.Chat.V1.Format.Types.GuildMention.Parser, new[]{ "GuildId", "Homeserver" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Format.Types.Emoji), global::Harmony.Chat.V1.Format.Types.Emoji.Parser, new[]{ "ImageHmc", "PackId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Format.Types.Color), global::Harmony.Chat.V1.Format.Types.Color.Parser, new[]{ "Kind" }, null, new[]{ typeof(global::Harmony.Chat.V1.Format.Types.Color.Types.Kind) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Format.Types.Localization), global::Harmony.Chat.V1.Format.Types.Localization.Parser, new[]{ "I18NCode" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.FormattedText), global::Harmony.Chat.V1.FormattedText.Parser, new[]{ "Text", "Format" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.Message), global::Harmony.Chat.V1.Message.Parser, new[]{ "Metadata", "Overrides", "AuthorId", "CreatedAt", "EditedAt", "InReplyTo", "Content", "Reactions" }, new[]{ "Metadata", "EditedAt", "InReplyTo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.MessageWithId), global::Harmony.Chat.V1.MessageWithId.Parser, new[]{ "MessageId", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.GetChannelMessagesRequest), global::Harmony.Chat.V1.GetChannelMessagesRequest.Parser, new[]{ "GuildId", "ChannelId", "MessageId", "Direction", "Count" }, new[]{ "MessageId", "Direction", "Count" }, new[]{ typeof(global::Harmony.Chat.V1.GetChannelMessagesRequest.Types.Direction) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.GetChannelMessagesResponse), global::Harmony.Chat.V1.GetChannelMessagesResponse.Parser, new[]{ "ReachedTop", "ReachedBottom", "Messages" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.GetMessageRequest), global::Harmony.Chat.V1.GetMessageRequest.Parser, new[]{ "GuildId", "ChannelId", "MessageId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.GetMessageResponse), global::Harmony.Chat.V1.GetMessageResponse.Parser, new[]{ "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.DeleteMessageRequest), global::Harmony.Chat.V1.DeleteMessageRequest.Parser, new[]{ "GuildId", "ChannelId", "MessageId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.DeleteMessageResponse), global::Harmony.Chat.V1.DeleteMessageResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.TriggerActionRequest), global::Harmony.Chat.V1.TriggerActionRequest.Parser, new[]{ "GuildId", "ChannelId", "MessageId", "Payload" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.TriggerActionResponse), global::Harmony.Chat.V1.TriggerActionResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.SendMessageRequest), global::Harmony.Chat.V1.SendMessageRequest.Parser, new[]{ "GuildId", "ChannelId", "Content", "EchoId", "Overrides", "InReplyTo", "Metadata" }, new[]{ "EchoId", "Overrides", "InReplyTo", "Metadata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.SendMessageResponse), global::Harmony.Chat.V1.SendMessageResponse.Parser, new[]{ "MessageId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.UpdateMessageTextRequest), global::Harmony.Chat.V1.UpdateMessageTextRequest.Parser, new[]{ "GuildId", "ChannelId", "MessageId", "NewContent" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.UpdateMessageTextResponse), global::Harmony.Chat.V1.UpdateMessageTextResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.PinMessageRequest), global::Harmony.Chat.V1.PinMessageRequest.Parser, new[]{ "GuildId", "ChannelId", "MessageId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.PinMessageResponse), global::Harmony.Chat.V1.PinMessageResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.UnpinMessageRequest), global::Harmony.Chat.V1.UnpinMessageRequest.Parser, new[]{ "GuildId", "ChannelId", "MessageId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.UnpinMessageResponse), global::Harmony.Chat.V1.UnpinMessageResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.GetPinnedMessagesRequest), global::Harmony.Chat.V1.GetPinnedMessagesRequest.Parser, new[]{ "GuildId", "ChannelId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.GetPinnedMessagesResponse), global::Harmony.Chat.V1.GetPinnedMessagesResponse.Parser, new[]{ "PinnedMessageIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.AddReactionRequest), global::Harmony.Chat.V1.AddReactionRequest.Parser, new[]{ "GuildId", "ChannelId", "MessageId", "Emote" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.AddReactionResponse), global::Harmony.Chat.V1.AddReactionResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.RemoveReactionRequest), global::Harmony.Chat.V1.RemoveReactionRequest.Parser, new[]{ "GuildId", "ChannelId", "MessageId", "Emote" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Harmony.Chat.V1.RemoveReactionResponse), global::Harmony.Chat.V1.RemoveReactionResponse.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Overrides provide a way to override the name and avatar of a message.
  /// </summary>
  public sealed partial class Overrides : pb::IMessage<Overrides>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Overrides> _parser = new pb::MessageParser<Overrides>(() => new Overrides());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Overrides> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Overrides() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Overrides(Overrides other) : this() {
      username_ = other.username_;
      avatar_ = other.avatar_;
      switch (other.ReasonCase) {
        case ReasonOneofCase.UserDefined:
          UserDefined = other.UserDefined;
          break;
        case ReasonOneofCase.Webhook:
          Webhook = other.Webhook.Clone();
          break;
        case ReasonOneofCase.SystemPlurality:
          SystemPlurality = other.SystemPlurality.Clone();
          break;
        case ReasonOneofCase.SystemMessage:
          SystemMessage = other.SystemMessage.Clone();
          break;
        case ReasonOneofCase.Bridge:
          Bridge = other.Bridge.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Overrides Clone() {
      return new Overrides(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_;
    /// <summary>
    /// the overridden username.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_ ?? ""; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "username" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUsername {
      get { return username_ != null; }
    }
    /// <summary>Clears the value of the "username" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUsername() {
      username_ = null;
    }

    /// <summary>Field number for the "avatar" field.</summary>
    public const int AvatarFieldNumber = 2;
    private string avatar_;
    /// <summary>
    /// the overridden avatar.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Avatar {
      get { return avatar_ ?? ""; }
      set {
        avatar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "avatar" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAvatar {
      get { return avatar_ != null; }
    }
    /// <summary>Clears the value of the "avatar" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAvatar() {
      avatar_ = null;
    }

    /// <summary>Field number for the "user_defined" field.</summary>
    public const int UserDefinedFieldNumber = 3;
    /// <summary>
    /// a custom reason in case the builtin ones don't fit
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserDefined {
      get { return reasonCase_ == ReasonOneofCase.UserDefined ? (string) reason_ : ""; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        reasonCase_ = ReasonOneofCase.UserDefined;
      }
    }

    /// <summary>Field number for the "webhook" field.</summary>
    public const int WebhookFieldNumber = 4;
    /// <summary>
    /// the override occured because of a webhook
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Harmonytypes.V1.Empty Webhook {
      get { return reasonCase_ == ReasonOneofCase.Webhook ? (global::Harmony.Harmonytypes.V1.Empty) reason_ : null; }
      set {
        reason_ = value;
        reasonCase_ = value == null ? ReasonOneofCase.None : ReasonOneofCase.Webhook;
      }
    }

    /// <summary>Field number for the "system_plurality" field.</summary>
    public const int SystemPluralityFieldNumber = 5;
    /// <summary>
    /// plurality, not system as in computer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Harmonytypes.V1.Empty SystemPlurality {
      get { return reasonCase_ == ReasonOneofCase.SystemPlurality ? (global::Harmony.Harmonytypes.V1.Empty) reason_ : null; }
      set {
        reason_ = value;
        reasonCase_ = value == null ? ReasonOneofCase.None : ReasonOneofCase.SystemPlurality;
      }
    }

    /// <summary>Field number for the "system_message" field.</summary>
    public const int SystemMessageFieldNumber = 6;
    /// <summary>
    /// the override occured because it was made by the server
    ///
    /// Servers should reject messages sent by users with this override.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Harmonytypes.V1.Empty SystemMessage {
      get { return reasonCase_ == ReasonOneofCase.SystemMessage ? (global::Harmony.Harmonytypes.V1.Empty) reason_ : null; }
      set {
        reason_ = value;
        reasonCase_ = value == null ? ReasonOneofCase.None : ReasonOneofCase.SystemMessage;
      }
    }

    /// <summary>Field number for the "bridge" field.</summary>
    public const int BridgeFieldNumber = 7;
    /// <summary>
    /// the override occured because of bridging
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Harmonytypes.V1.Empty Bridge {
      get { return reasonCase_ == ReasonOneofCase.Bridge ? (global::Harmony.Harmonytypes.V1.Empty) reason_ : null; }
      set {
        reason_ = value;
        reasonCase_ = value == null ? ReasonOneofCase.None : ReasonOneofCase.Bridge;
      }
    }

    private object reason_;
    /// <summary>Enum of possible cases for the "reason" oneof.</summary>
    public enum ReasonOneofCase {
      None = 0,
      UserDefined = 3,
      Webhook = 4,
      SystemPlurality = 5,
      SystemMessage = 6,
      Bridge = 7,
    }
    private ReasonOneofCase reasonCase_ = ReasonOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReasonOneofCase ReasonCase {
      get { return reasonCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      reasonCase_ = ReasonOneofCase.None;
      reason_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Overrides);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Overrides other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Avatar != other.Avatar) return false;
      if (UserDefined != other.UserDefined) return false;
      if (!object.Equals(Webhook, other.Webhook)) return false;
      if (!object.Equals(SystemPlurality, other.SystemPlurality)) return false;
      if (!object.Equals(SystemMessage, other.SystemMessage)) return false;
      if (!object.Equals(Bridge, other.Bridge)) return false;
      if (ReasonCase != other.ReasonCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUsername) hash ^= Username.GetHashCode();
      if (HasAvatar) hash ^= Avatar.GetHashCode();
      if (reasonCase_ == ReasonOneofCase.UserDefined) hash ^= UserDefined.GetHashCode();
      if (reasonCase_ == ReasonOneofCase.Webhook) hash ^= Webhook.GetHashCode();
      if (reasonCase_ == ReasonOneofCase.SystemPlurality) hash ^= SystemPlurality.GetHashCode();
      if (reasonCase_ == ReasonOneofCase.SystemMessage) hash ^= SystemMessage.GetHashCode();
      if (reasonCase_ == ReasonOneofCase.Bridge) hash ^= Bridge.GetHashCode();
      hash ^= (int) reasonCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUsername) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (HasAvatar) {
        output.WriteRawTag(18);
        output.WriteString(Avatar);
      }
      if (reasonCase_ == ReasonOneofCase.UserDefined) {
        output.WriteRawTag(26);
        output.WriteString(UserDefined);
      }
      if (reasonCase_ == ReasonOneofCase.Webhook) {
        output.WriteRawTag(34);
        output.WriteMessage(Webhook);
      }
      if (reasonCase_ == ReasonOneofCase.SystemPlurality) {
        output.WriteRawTag(42);
        output.WriteMessage(SystemPlurality);
      }
      if (reasonCase_ == ReasonOneofCase.SystemMessage) {
        output.WriteRawTag(50);
        output.WriteMessage(SystemMessage);
      }
      if (reasonCase_ == ReasonOneofCase.Bridge) {
        output.WriteRawTag(58);
        output.WriteMessage(Bridge);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUsername) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (HasAvatar) {
        output.WriteRawTag(18);
        output.WriteString(Avatar);
      }
      if (reasonCase_ == ReasonOneofCase.UserDefined) {
        output.WriteRawTag(26);
        output.WriteString(UserDefined);
      }
      if (reasonCase_ == ReasonOneofCase.Webhook) {
        output.WriteRawTag(34);
        output.WriteMessage(Webhook);
      }
      if (reasonCase_ == ReasonOneofCase.SystemPlurality) {
        output.WriteRawTag(42);
        output.WriteMessage(SystemPlurality);
      }
      if (reasonCase_ == ReasonOneofCase.SystemMessage) {
        output.WriteRawTag(50);
        output.WriteMessage(SystemMessage);
      }
      if (reasonCase_ == ReasonOneofCase.Bridge) {
        output.WriteRawTag(58);
        output.WriteMessage(Bridge);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUsername) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (HasAvatar) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Avatar);
      }
      if (reasonCase_ == ReasonOneofCase.UserDefined) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserDefined);
      }
      if (reasonCase_ == ReasonOneofCase.Webhook) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Webhook);
      }
      if (reasonCase_ == ReasonOneofCase.SystemPlurality) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SystemPlurality);
      }
      if (reasonCase_ == ReasonOneofCase.SystemMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SystemMessage);
      }
      if (reasonCase_ == ReasonOneofCase.Bridge) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bridge);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Overrides other) {
      if (other == null) {
        return;
      }
      if (other.HasUsername) {
        Username = other.Username;
      }
      if (other.HasAvatar) {
        Avatar = other.Avatar;
      }
      switch (other.ReasonCase) {
        case ReasonOneofCase.UserDefined:
          UserDefined = other.UserDefined;
          break;
        case ReasonOneofCase.Webhook:
          if (Webhook == null) {
            Webhook = new global::Harmony.Harmonytypes.V1.Empty();
          }
          Webhook.MergeFrom(other.Webhook);
          break;
        case ReasonOneofCase.SystemPlurality:
          if (SystemPlurality == null) {
            SystemPlurality = new global::Harmony.Harmonytypes.V1.Empty();
          }
          SystemPlurality.MergeFrom(other.SystemPlurality);
          break;
        case ReasonOneofCase.SystemMessage:
          if (SystemMessage == null) {
            SystemMessage = new global::Harmony.Harmonytypes.V1.Empty();
          }
          SystemMessage.MergeFrom(other.SystemMessage);
          break;
        case ReasonOneofCase.Bridge:
          if (Bridge == null) {
            Bridge = new global::Harmony.Harmonytypes.V1.Empty();
          }
          Bridge.MergeFrom(other.Bridge);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Avatar = input.ReadString();
            break;
          }
          case 26: {
            UserDefined = input.ReadString();
            break;
          }
          case 34: {
            global::Harmony.Harmonytypes.V1.Empty subBuilder = new global::Harmony.Harmonytypes.V1.Empty();
            if (reasonCase_ == ReasonOneofCase.Webhook) {
              subBuilder.MergeFrom(Webhook);
            }
            input.ReadMessage(subBuilder);
            Webhook = subBuilder;
            break;
          }
          case 42: {
            global::Harmony.Harmonytypes.V1.Empty subBuilder = new global::Harmony.Harmonytypes.V1.Empty();
            if (reasonCase_ == ReasonOneofCase.SystemPlurality) {
              subBuilder.MergeFrom(SystemPlurality);
            }
            input.ReadMessage(subBuilder);
            SystemPlurality = subBuilder;
            break;
          }
          case 50: {
            global::Harmony.Harmonytypes.V1.Empty subBuilder = new global::Harmony.Harmonytypes.V1.Empty();
            if (reasonCase_ == ReasonOneofCase.SystemMessage) {
              subBuilder.MergeFrom(SystemMessage);
            }
            input.ReadMessage(subBuilder);
            SystemMessage = subBuilder;
            break;
          }
          case 58: {
            global::Harmony.Harmonytypes.V1.Empty subBuilder = new global::Harmony.Harmonytypes.V1.Empty();
            if (reasonCase_ == ReasonOneofCase.Bridge) {
              subBuilder.MergeFrom(Bridge);
            }
            input.ReadMessage(subBuilder);
            Bridge = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Avatar = input.ReadString();
            break;
          }
          case 26: {
            UserDefined = input.ReadString();
            break;
          }
          case 34: {
            global::Harmony.Harmonytypes.V1.Empty subBuilder = new global::Harmony.Harmonytypes.V1.Empty();
            if (reasonCase_ == ReasonOneofCase.Webhook) {
              subBuilder.MergeFrom(Webhook);
            }
            input.ReadMessage(subBuilder);
            Webhook = subBuilder;
            break;
          }
          case 42: {
            global::Harmony.Harmonytypes.V1.Empty subBuilder = new global::Harmony.Harmonytypes.V1.Empty();
            if (reasonCase_ == ReasonOneofCase.SystemPlurality) {
              subBuilder.MergeFrom(SystemPlurality);
            }
            input.ReadMessage(subBuilder);
            SystemPlurality = subBuilder;
            break;
          }
          case 50: {
            global::Harmony.Harmonytypes.V1.Empty subBuilder = new global::Harmony.Harmonytypes.V1.Empty();
            if (reasonCase_ == ReasonOneofCase.SystemMessage) {
              subBuilder.MergeFrom(SystemMessage);
            }
            input.ReadMessage(subBuilder);
            SystemMessage = subBuilder;
            break;
          }
          case 58: {
            global::Harmony.Harmonytypes.V1.Empty subBuilder = new global::Harmony.Harmonytypes.V1.Empty();
            if (reasonCase_ == ReasonOneofCase.Bridge) {
              subBuilder.MergeFrom(Bridge);
            }
            input.ReadMessage(subBuilder);
            Bridge = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The payload sent to the bot when an action is triggered.
  /// </summary>
  public sealed partial class ActionPayload : pb::IMessage<ActionPayload>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActionPayload> _parser = new pb::MessageParser<ActionPayload>(() => new ActionPayload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActionPayload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionPayload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionPayload(ActionPayload other) : this() {
      switch (other.PayloadCase) {
        case PayloadOneofCase.Button:
          Button = other.Button.Clone();
          break;
        case PayloadOneofCase.Dropdown:
          Dropdown = other.Dropdown.Clone();
          break;
        case PayloadOneofCase.Input:
          Input = other.Input.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionPayload Clone() {
      return new ActionPayload(this);
    }

    /// <summary>Field number for the "button" field.</summary>
    public const int ButtonFieldNumber = 1;
    /// <summary>
    /// Payload for a button
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.ActionPayload.Types.Button Button {
      get { return payloadCase_ == PayloadOneofCase.Button ? (global::Harmony.Chat.V1.ActionPayload.Types.Button) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Button;
      }
    }

    /// <summary>Field number for the "dropdown" field.</summary>
    public const int DropdownFieldNumber = 2;
    /// <summary>
    /// Payload for a dropdown
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.ActionPayload.Types.Dropdown Dropdown {
      get { return payloadCase_ == PayloadOneofCase.Dropdown ? (global::Harmony.Chat.V1.ActionPayload.Types.Dropdown) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Dropdown;
      }
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 3;
    /// <summary>
    /// Payload for a text input
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.ActionPayload.Types.Input Input {
      get { return payloadCase_ == PayloadOneofCase.Input ? (global::Harmony.Chat.V1.ActionPayload.Types.Input) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Input;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      Button = 1,
      Dropdown = 2,
      Input = 3,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActionPayload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActionPayload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Button, other.Button)) return false;
      if (!object.Equals(Dropdown, other.Dropdown)) return false;
      if (!object.Equals(Input, other.Input)) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (payloadCase_ == PayloadOneofCase.Button) hash ^= Button.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Dropdown) hash ^= Dropdown.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Input) hash ^= Input.GetHashCode();
      hash ^= (int) payloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (payloadCase_ == PayloadOneofCase.Button) {
        output.WriteRawTag(10);
        output.WriteMessage(Button);
      }
      if (payloadCase_ == PayloadOneofCase.Dropdown) {
        output.WriteRawTag(18);
        output.WriteMessage(Dropdown);
      }
      if (payloadCase_ == PayloadOneofCase.Input) {
        output.WriteRawTag(26);
        output.WriteMessage(Input);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (payloadCase_ == PayloadOneofCase.Button) {
        output.WriteRawTag(10);
        output.WriteMessage(Button);
      }
      if (payloadCase_ == PayloadOneofCase.Dropdown) {
        output.WriteRawTag(18);
        output.WriteMessage(Dropdown);
      }
      if (payloadCase_ == PayloadOneofCase.Input) {
        output.WriteRawTag(26);
        output.WriteMessage(Input);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (payloadCase_ == PayloadOneofCase.Button) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Button);
      }
      if (payloadCase_ == PayloadOneofCase.Dropdown) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dropdown);
      }
      if (payloadCase_ == PayloadOneofCase.Input) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Input);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActionPayload other) {
      if (other == null) {
        return;
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.Button:
          if (Button == null) {
            Button = new global::Harmony.Chat.V1.ActionPayload.Types.Button();
          }
          Button.MergeFrom(other.Button);
          break;
        case PayloadOneofCase.Dropdown:
          if (Dropdown == null) {
            Dropdown = new global::Harmony.Chat.V1.ActionPayload.Types.Dropdown();
          }
          Dropdown.MergeFrom(other.Dropdown);
          break;
        case PayloadOneofCase.Input:
          if (Input == null) {
            Input = new global::Harmony.Chat.V1.ActionPayload.Types.Input();
          }
          Input.MergeFrom(other.Input);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Harmony.Chat.V1.ActionPayload.Types.Button subBuilder = new global::Harmony.Chat.V1.ActionPayload.Types.Button();
            if (payloadCase_ == PayloadOneofCase.Button) {
              subBuilder.MergeFrom(Button);
            }
            input.ReadMessage(subBuilder);
            Button = subBuilder;
            break;
          }
          case 18: {
            global::Harmony.Chat.V1.ActionPayload.Types.Dropdown subBuilder = new global::Harmony.Chat.V1.ActionPayload.Types.Dropdown();
            if (payloadCase_ == PayloadOneofCase.Dropdown) {
              subBuilder.MergeFrom(Dropdown);
            }
            input.ReadMessage(subBuilder);
            Dropdown = subBuilder;
            break;
          }
          case 26: {
            global::Harmony.Chat.V1.ActionPayload.Types.Input subBuilder = new global::Harmony.Chat.V1.ActionPayload.Types.Input();
            if (payloadCase_ == PayloadOneofCase.Input) {
              subBuilder.MergeFrom(Input);
            }
            input.ReadMessage(subBuilder);
            Input = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Harmony.Chat.V1.ActionPayload.Types.Button subBuilder = new global::Harmony.Chat.V1.ActionPayload.Types.Button();
            if (payloadCase_ == PayloadOneofCase.Button) {
              subBuilder.MergeFrom(Button);
            }
            input.ReadMessage(subBuilder);
            Button = subBuilder;
            break;
          }
          case 18: {
            global::Harmony.Chat.V1.ActionPayload.Types.Dropdown subBuilder = new global::Harmony.Chat.V1.ActionPayload.Types.Dropdown();
            if (payloadCase_ == PayloadOneofCase.Dropdown) {
              subBuilder.MergeFrom(Dropdown);
            }
            input.ReadMessage(subBuilder);
            Dropdown = subBuilder;
            break;
          }
          case 26: {
            global::Harmony.Chat.V1.ActionPayload.Types.Input subBuilder = new global::Harmony.Chat.V1.ActionPayload.Types.Input();
            if (payloadCase_ == PayloadOneofCase.Input) {
              subBuilder.MergeFrom(Input);
            }
            input.ReadMessage(subBuilder);
            Input = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ActionPayload message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The payload data for a button action
      /// </summary>
      public sealed partial class Button : pb::IMessage<Button>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Button> _parser = new pb::MessageParser<Button>(() => new Button());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Button> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Harmony.Chat.V1.ActionPayload.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Button() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Button(Button other) : this() {
          data_ = other.data_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Button Clone() {
          return new Button(this);
        }

        /// <summary>Field number for the "data" field.</summary>
        public const int DataFieldNumber = 1;
        private pb::ByteString data_ = pb::ByteString.Empty;
        /// <summary>
        /// The data from the Button action
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Data {
          get { return data_; }
          set {
            data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Button);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Button other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Data != other.Data) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Data.Length != 0) hash ^= Data.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Data.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(Data);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Data.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(Data);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Data.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Button other) {
          if (other == null) {
            return;
          }
          if (other.Data.Length != 0) {
            Data = other.Data;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Data = input.ReadBytes();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Data = input.ReadBytes();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// The payload for a dropdown action
      /// </summary>
      public sealed partial class Dropdown : pb::IMessage<Dropdown>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Dropdown> _parser = new pb::MessageParser<Dropdown>(() => new Dropdown());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Dropdown> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Harmony.Chat.V1.ActionPayload.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Dropdown() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Dropdown(Dropdown other) : this() {
          choice_ = other.choice_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Dropdown Clone() {
          return new Dropdown(this);
        }

        /// <summary>Field number for the "choice" field.</summary>
        public const int ChoiceFieldNumber = 1;
        private pb::ByteString choice_ = pb::ByteString.Empty;
        /// <summary>
        /// The user choice from the dropdown.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Choice {
          get { return choice_; }
          set {
            choice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Dropdown);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Dropdown other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Choice != other.Choice) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Choice.Length != 0) hash ^= Choice.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Choice.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(Choice);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Choice.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(Choice);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Choice.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Choice);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Dropdown other) {
          if (other == null) {
            return;
          }
          if (other.Choice.Length != 0) {
            Choice = other.Choice;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Choice = input.ReadBytes();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Choice = input.ReadBytes();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// The payload for a text input action
      /// </summary>
      public sealed partial class Input : pb::IMessage<Input>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Input> _parser = new pb::MessageParser<Input>(() => new Input());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Input> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Harmony.Chat.V1.ActionPayload.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Input() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Input(Input other) : this() {
          input_ = other.input_;
          data_ = other.data_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Input Clone() {
          return new Input(this);
        }

        /// <summary>Field number for the "input" field.</summary>
        public const int Input_FieldNumber = 1;
        private string input_ = "";
        /// <summary>
        /// The user input.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Input_ {
          get { return input_; }
          set {
            input_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "data" field.</summary>
        public const int DataFieldNumber = 2;
        private pb::ByteString data_ = pb::ByteString.Empty;
        /// <summary>
        /// The bot-provided data
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Data {
          get { return data_; }
          set {
            data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Input);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Input other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Input_ != other.Input_) return false;
          if (Data != other.Data) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Input_.Length != 0) hash ^= Input_.GetHashCode();
          if (Data.Length != 0) hash ^= Data.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Input_.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Input_);
          }
          if (Data.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(Data);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Input_.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Input_);
          }
          if (Data.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(Data);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Input_.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Input_);
          }
          if (Data.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Input other) {
          if (other == null) {
            return;
          }
          if (other.Input_.Length != 0) {
            Input_ = other.Input_;
          }
          if (other.Data.Length != 0) {
            Data = other.Data;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Input_ = input.ReadString();
                break;
              }
              case 18: {
                Data = input.ReadBytes();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Input_ = input.ReadString();
                break;
              }
              case 18: {
                Data = input.ReadBytes();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Actions are interactive elements that can exist within an embed.
  /// </summary>
  public sealed partial class Action : pb::IMessage<Action>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Action> _parser = new pb::MessageParser<Action>(() => new Action());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Action> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Action() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Action(Action other) : this() {
      actionType_ = other.actionType_;
      switch (other.KindCase) {
        case KindOneofCase.Button:
          Button = other.Button.Clone();
          break;
        case KindOneofCase.Dropdown:
          Dropdown = other.Dropdown.Clone();
          break;
        case KindOneofCase.Input:
          Input = other.Input.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Action Clone() {
      return new Action(this);
    }

    /// <summary>Field number for the "action_type" field.</summary>
    public const int ActionTypeFieldNumber = 1;
    private global::Harmony.Chat.V1.Action.Types.Type actionType_ = global::Harmony.Chat.V1.Action.Types.Type.NormalUnspecified;
    /// <summary>
    /// Type of the action.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Action.Types.Type ActionType {
      get { return actionType_; }
      set {
        actionType_ = value;
      }
    }

    /// <summary>Field number for the "button" field.</summary>
    public const int ButtonFieldNumber = 2;
    /// <summary>
    /// Button action.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Action.Types.Button Button {
      get { return kindCase_ == KindOneofCase.Button ? (global::Harmony.Chat.V1.Action.Types.Button) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.Button;
      }
    }

    /// <summary>Field number for the "dropdown" field.</summary>
    public const int DropdownFieldNumber = 3;
    /// <summary>
    /// Dropdown action.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Action.Types.Dropdown Dropdown {
      get { return kindCase_ == KindOneofCase.Dropdown ? (global::Harmony.Chat.V1.Action.Types.Dropdown) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.Dropdown;
      }
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 4;
    /// <summary>
    /// Input action.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Action.Types.Input Input {
      get { return kindCase_ == KindOneofCase.Input ? (global::Harmony.Chat.V1.Action.Types.Input) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.Input;
      }
    }

    private object kind_;
    /// <summary>Enum of possible cases for the "kind" oneof.</summary>
    public enum KindOneofCase {
      None = 0,
      Button = 2,
      Dropdown = 3,
      Input = 4,
    }
    private KindOneofCase kindCase_ = KindOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KindOneofCase KindCase {
      get { return kindCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearKind() {
      kindCase_ = KindOneofCase.None;
      kind_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Action);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Action other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActionType != other.ActionType) return false;
      if (!object.Equals(Button, other.Button)) return false;
      if (!object.Equals(Dropdown, other.Dropdown)) return false;
      if (!object.Equals(Input, other.Input)) return false;
      if (KindCase != other.KindCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActionType != global::Harmony.Chat.V1.Action.Types.Type.NormalUnspecified) hash ^= ActionType.GetHashCode();
      if (kindCase_ == KindOneofCase.Button) hash ^= Button.GetHashCode();
      if (kindCase_ == KindOneofCase.Dropdown) hash ^= Dropdown.GetHashCode();
      if (kindCase_ == KindOneofCase.Input) hash ^= Input.GetHashCode();
      hash ^= (int) kindCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ActionType != global::Harmony.Chat.V1.Action.Types.Type.NormalUnspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ActionType);
      }
      if (kindCase_ == KindOneofCase.Button) {
        output.WriteRawTag(18);
        output.WriteMessage(Button);
      }
      if (kindCase_ == KindOneofCase.Dropdown) {
        output.WriteRawTag(26);
        output.WriteMessage(Dropdown);
      }
      if (kindCase_ == KindOneofCase.Input) {
        output.WriteRawTag(34);
        output.WriteMessage(Input);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ActionType != global::Harmony.Chat.V1.Action.Types.Type.NormalUnspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ActionType);
      }
      if (kindCase_ == KindOneofCase.Button) {
        output.WriteRawTag(18);
        output.WriteMessage(Button);
      }
      if (kindCase_ == KindOneofCase.Dropdown) {
        output.WriteRawTag(26);
        output.WriteMessage(Dropdown);
      }
      if (kindCase_ == KindOneofCase.Input) {
        output.WriteRawTag(34);
        output.WriteMessage(Input);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActionType != global::Harmony.Chat.V1.Action.Types.Type.NormalUnspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ActionType);
      }
      if (kindCase_ == KindOneofCase.Button) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Button);
      }
      if (kindCase_ == KindOneofCase.Dropdown) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dropdown);
      }
      if (kindCase_ == KindOneofCase.Input) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Input);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Action other) {
      if (other == null) {
        return;
      }
      if (other.ActionType != global::Harmony.Chat.V1.Action.Types.Type.NormalUnspecified) {
        ActionType = other.ActionType;
      }
      switch (other.KindCase) {
        case KindOneofCase.Button:
          if (Button == null) {
            Button = new global::Harmony.Chat.V1.Action.Types.Button();
          }
          Button.MergeFrom(other.Button);
          break;
        case KindOneofCase.Dropdown:
          if (Dropdown == null) {
            Dropdown = new global::Harmony.Chat.V1.Action.Types.Dropdown();
          }
          Dropdown.MergeFrom(other.Dropdown);
          break;
        case KindOneofCase.Input:
          if (Input == null) {
            Input = new global::Harmony.Chat.V1.Action.Types.Input();
          }
          Input.MergeFrom(other.Input);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ActionType = (global::Harmony.Chat.V1.Action.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            global::Harmony.Chat.V1.Action.Types.Button subBuilder = new global::Harmony.Chat.V1.Action.Types.Button();
            if (kindCase_ == KindOneofCase.Button) {
              subBuilder.MergeFrom(Button);
            }
            input.ReadMessage(subBuilder);
            Button = subBuilder;
            break;
          }
          case 26: {
            global::Harmony.Chat.V1.Action.Types.Dropdown subBuilder = new global::Harmony.Chat.V1.Action.Types.Dropdown();
            if (kindCase_ == KindOneofCase.Dropdown) {
              subBuilder.MergeFrom(Dropdown);
            }
            input.ReadMessage(subBuilder);
            Dropdown = subBuilder;
            break;
          }
          case 34: {
            global::Harmony.Chat.V1.Action.Types.Input subBuilder = new global::Harmony.Chat.V1.Action.Types.Input();
            if (kindCase_ == KindOneofCase.Input) {
              subBuilder.MergeFrom(Input);
            }
            input.ReadMessage(subBuilder);
            Input = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ActionType = (global::Harmony.Chat.V1.Action.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            global::Harmony.Chat.V1.Action.Types.Button subBuilder = new global::Harmony.Chat.V1.Action.Types.Button();
            if (kindCase_ == KindOneofCase.Button) {
              subBuilder.MergeFrom(Button);
            }
            input.ReadMessage(subBuilder);
            Button = subBuilder;
            break;
          }
          case 26: {
            global::Harmony.Chat.V1.Action.Types.Dropdown subBuilder = new global::Harmony.Chat.V1.Action.Types.Dropdown();
            if (kindCase_ == KindOneofCase.Dropdown) {
              subBuilder.MergeFrom(Dropdown);
            }
            input.ReadMessage(subBuilder);
            Dropdown = subBuilder;
            break;
          }
          case 34: {
            global::Harmony.Chat.V1.Action.Types.Input subBuilder = new global::Harmony.Chat.V1.Action.Types.Input();
            if (kindCase_ == KindOneofCase.Input) {
              subBuilder.MergeFrom(Input);
            }
            input.ReadMessage(subBuilder);
            Input = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Action message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The action type. This is primarily used to change the look of the action to
      /// the user (example: Destructive actions will have a red background).
      /// </summary>
      public enum Type {
        /// <summary>
        /// a normal action.
        /// </summary>
        [pbr::OriginalName("TYPE_NORMAL_UNSPECIFIED")] NormalUnspecified = 0,
        /// <summary>
        /// a primary action.
        /// </summary>
        [pbr::OriginalName("TYPE_PRIMARY")] Primary = 1,
        /// <summary>
        /// A destructive / dangerous action.
        /// </summary>
        [pbr::OriginalName("TYPE_DESTRUCTIVE")] Destructive = 2,
      }

      /// <summary>
      /// A button that users can click on to trigger an action.
      /// </summary>
      public sealed partial class Button : pb::IMessage<Button>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Button> _parser = new pb::MessageParser<Button>(() => new Button());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Button> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Harmony.Chat.V1.Action.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Button() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Button(Button other) : this() {
          text_ = other.text_;
          data_ = other.data_;
          url_ = other.url_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Button Clone() {
          return new Button(this);
        }

        /// <summary>Field number for the "text" field.</summary>
        public const int TextFieldNumber = 1;
        private string text_ = "";
        /// <summary>
        /// The text to show on the button.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Text {
          get { return text_; }
          set {
            text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "data" field.</summary>
        public const int DataFieldNumber = 2;
        private pb::ByteString data_ = pb::ByteString.Empty;
        /// <summary>
        /// Action data, which should be used in the call to perform the action.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Data {
          get { return data_; }
          set {
            data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "url" field.</summary>
        public const int UrlFieldNumber = 3;
        private string url_;
        /// <summary>
        /// An external URL that the button links to.
        /// This makes it so that tapping this button will open said URL instead
        /// of triggering the action.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Url {
          get { return url_ ?? ""; }
          set {
            url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "url" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasUrl {
          get { return url_ != null; }
        }
        /// <summary>Clears the value of the "url" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearUrl() {
          url_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Button);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Button other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Text != other.Text) return false;
          if (Data != other.Data) return false;
          if (Url != other.Url) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Text.Length != 0) hash ^= Text.GetHashCode();
          if (Data.Length != 0) hash ^= Data.GetHashCode();
          if (HasUrl) hash ^= Url.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Text.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Text);
          }
          if (Data.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(Data);
          }
          if (HasUrl) {
            output.WriteRawTag(26);
            output.WriteString(Url);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Text.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Text);
          }
          if (Data.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(Data);
          }
          if (HasUrl) {
            output.WriteRawTag(26);
            output.WriteString(Url);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Text.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
          }
          if (Data.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
          }
          if (HasUrl) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Button other) {
          if (other == null) {
            return;
          }
          if (other.Text.Length != 0) {
            Text = other.Text;
          }
          if (other.Data.Length != 0) {
            Data = other.Data;
          }
          if (other.HasUrl) {
            Url = other.Url;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Text = input.ReadString();
                break;
              }
              case 18: {
                Data = input.ReadBytes();
                break;
              }
              case 26: {
                Url = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Text = input.ReadString();
                break;
              }
              case 18: {
                Data = input.ReadBytes();
                break;
              }
              case 26: {
                Url = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// A dropdown menu that users can click on to trigger an action.
      /// </summary>
      public sealed partial class Dropdown : pb::IMessage<Dropdown>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Dropdown> _parser = new pb::MessageParser<Dropdown>(() => new Dropdown());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Dropdown> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Harmony.Chat.V1.Action.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Dropdown() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Dropdown(Dropdown other) : this() {
          label_ = other.label_;
          entries_ = other.entries_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Dropdown Clone() {
          return new Dropdown(this);
        }

        /// <summary>Field number for the "label" field.</summary>
        public const int LabelFieldNumber = 1;
        private string label_ = "";
        /// <summary>
        /// The text describing the dropdown.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Label {
          get { return label_; }
          set {
            label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "entries" field.</summary>
        public const int EntriesFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Harmony.Chat.V1.Action.Types.Dropdown.Types.Entry> _repeated_entries_codec
            = pb::FieldCodec.ForMessage(18, global::Harmony.Chat.V1.Action.Types.Dropdown.Types.Entry.Parser);
        private readonly pbc::RepeatedField<global::Harmony.Chat.V1.Action.Types.Dropdown.Types.Entry> entries_ = new pbc::RepeatedField<global::Harmony.Chat.V1.Action.Types.Dropdown.Types.Entry>();
        /// <summary>
        /// The options in the dropdown.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Harmony.Chat.V1.Action.Types.Dropdown.Types.Entry> Entries {
          get { return entries_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Dropdown);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Dropdown other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Label != other.Label) return false;
          if(!entries_.Equals(other.entries_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Label.Length != 0) hash ^= Label.GetHashCode();
          hash ^= entries_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Label.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Label);
          }
          entries_.WriteTo(output, _repeated_entries_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Label.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Label);
          }
          entries_.WriteTo(ref output, _repeated_entries_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Label.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
          }
          size += entries_.CalculateSize(_repeated_entries_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Dropdown other) {
          if (other == null) {
            return;
          }
          if (other.Label.Length != 0) {
            Label = other.Label;
          }
          entries_.Add(other.entries_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Label = input.ReadString();
                break;
              }
              case 18: {
                entries_.AddEntriesFrom(input, _repeated_entries_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Label = input.ReadString();
                break;
              }
              case 18: {
                entries_.AddEntriesFrom(ref input, _repeated_entries_codec);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Dropdown message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// An entry in the dropdown
          /// </summary>
          public sealed partial class Entry : pb::IMessage<Entry>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Entry> _parser = new pb::MessageParser<Entry>(() => new Entry());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Entry> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Harmony.Chat.V1.Action.Types.Dropdown.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Entry() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Entry(Entry other) : this() {
              label_ = other.label_;
              data_ = other.data_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Entry Clone() {
              return new Entry(this);
            }

            /// <summary>Field number for the "label" field.</summary>
            public const int LabelFieldNumber = 1;
            private string label_ = "";
            /// <summary>
            /// The dropdown's UI label.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Label {
              get { return label_; }
              set {
                label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "data" field.</summary>
            public const int DataFieldNumber = 2;
            private pb::ByteString data_ = pb::ByteString.Empty;
            /// <summary>
            /// The dropdown's associated data.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pb::ByteString Data {
              get { return data_; }
              set {
                data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Entry);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Entry other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Label != other.Label) return false;
              if (Data != other.Data) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Label.Length != 0) hash ^= Label.GetHashCode();
              if (Data.Length != 0) hash ^= Data.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Label.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Label);
              }
              if (Data.Length != 0) {
                output.WriteRawTag(18);
                output.WriteBytes(Data);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Label.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Label);
              }
              if (Data.Length != 0) {
                output.WriteRawTag(18);
                output.WriteBytes(Data);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Label.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
              }
              if (Data.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Entry other) {
              if (other == null) {
                return;
              }
              if (other.Label.Length != 0) {
                Label = other.Label;
              }
              if (other.Data.Length != 0) {
                Data = other.Data;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Label = input.ReadString();
                    break;
                  }
                  case 18: {
                    Data = input.ReadBytes();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Label = input.ReadString();
                    break;
                  }
                  case 18: {
                    Data = input.ReadBytes();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      /// <summary>
      /// A text input that users can type in to trigger an action.
      /// </summary>
      public sealed partial class Input : pb::IMessage<Input>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Input> _parser = new pb::MessageParser<Input>(() => new Input());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Input> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Harmony.Chat.V1.Action.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Input() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Input(Input other) : this() {
          label_ = other.label_;
          multiline_ = other.multiline_;
          data_ = other.data_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Input Clone() {
          return new Input(this);
        }

        /// <summary>Field number for the "label" field.</summary>
        public const int LabelFieldNumber = 1;
        private string label_ = "";
        /// <summary>
        /// The label describing the input.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Label {
          get { return label_; }
          set {
            label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "multiline" field.</summary>
        public const int MultilineFieldNumber = 2;
        private bool multiline_;
        /// <summary>
        /// Whether this text input should be a multiline one or not.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Multiline {
          get { return multiline_; }
          set {
            multiline_ = value;
          }
        }

        /// <summary>Field number for the "data" field.</summary>
        public const int DataFieldNumber = 3;
        private pb::ByteString data_ = pb::ByteString.Empty;
        /// <summary>
        /// Contextual data allowing the bot to discern what the user input is for
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Data {
          get { return data_; }
          set {
            data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Input);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Input other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Label != other.Label) return false;
          if (Multiline != other.Multiline) return false;
          if (Data != other.Data) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Label.Length != 0) hash ^= Label.GetHashCode();
          if (Multiline != false) hash ^= Multiline.GetHashCode();
          if (Data.Length != 0) hash ^= Data.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Label.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Label);
          }
          if (Multiline != false) {
            output.WriteRawTag(16);
            output.WriteBool(Multiline);
          }
          if (Data.Length != 0) {
            output.WriteRawTag(26);
            output.WriteBytes(Data);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Label.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Label);
          }
          if (Multiline != false) {
            output.WriteRawTag(16);
            output.WriteBool(Multiline);
          }
          if (Data.Length != 0) {
            output.WriteRawTag(26);
            output.WriteBytes(Data);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Label.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
          }
          if (Multiline != false) {
            size += 1 + 1;
          }
          if (Data.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Input other) {
          if (other == null) {
            return;
          }
          if (other.Label.Length != 0) {
            Label = other.Label;
          }
          if (other.Multiline != false) {
            Multiline = other.Multiline;
          }
          if (other.Data.Length != 0) {
            Data = other.Data;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Label = input.ReadString();
                break;
              }
              case 16: {
                Multiline = input.ReadBool();
                break;
              }
              case 26: {
                Data = input.ReadBytes();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Label = input.ReadString();
                break;
              }
              case 16: {
                Multiline = input.ReadBool();
                break;
              }
              case 26: {
                Data = input.ReadBytes();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Object representing a message embed.
  /// </summary>
  public sealed partial class Embed : pb::IMessage<Embed>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Embed> _parser = new pb::MessageParser<Embed>(() => new Embed());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Embed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Embed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Embed(Embed other) : this() {
      _hasBits0 = other._hasBits0;
      title_ = other.title_;
      body_ = other.body_ != null ? other.body_.Clone() : null;
      color_ = other.color_;
      header_ = other.header_ != null ? other.header_.Clone() : null;
      footer_ = other.footer_ != null ? other.footer_.Clone() : null;
      fields_ = other.fields_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Embed Clone() {
      return new Embed(this);
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 1;
    private string title_ = "";
    /// <summary>
    /// Title of this embed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 2;
    private global::Harmony.Chat.V1.FormattedText body_;
    /// <summary>
    /// Body text of this embed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.FormattedText Body {
      get { return body_; }
      set {
        body_ = value;
      }
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 3;
    private int color_;
    /// <summary>
    /// Color of this embed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Color {
      get { if ((_hasBits0 & 1) != 0) { return color_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        color_ = value;
      }
    }
    /// <summary>Gets whether the "color" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasColor {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "color" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearColor() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 4;
    private global::Harmony.Chat.V1.Embed.Types.EmbedHeading header_;
    /// <summary>
    /// Embed heading for the header.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Embed.Types.EmbedHeading Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "footer" field.</summary>
    public const int FooterFieldNumber = 5;
    private global::Harmony.Chat.V1.Embed.Types.EmbedHeading footer_;
    /// <summary>
    /// Embed heading for the footer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Embed.Types.EmbedHeading Footer {
      get { return footer_; }
      set {
        footer_ = value;
      }
    }

    /// <summary>Field number for the "fields" field.</summary>
    public const int FieldsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Harmony.Chat.V1.Embed.Types.EmbedField> _repeated_fields_codec
        = pb::FieldCodec.ForMessage(50, global::Harmony.Chat.V1.Embed.Types.EmbedField.Parser);
    private readonly pbc::RepeatedField<global::Harmony.Chat.V1.Embed.Types.EmbedField> fields_ = new pbc::RepeatedField<global::Harmony.Chat.V1.Embed.Types.EmbedField>();
    /// <summary>
    /// Fields of this embed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Harmony.Chat.V1.Embed.Types.EmbedField> Fields {
      get { return fields_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Embed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Embed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Title != other.Title) return false;
      if (!object.Equals(Body, other.Body)) return false;
      if (Color != other.Color) return false;
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(Footer, other.Footer)) return false;
      if(!fields_.Equals(other.fields_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (body_ != null) hash ^= Body.GetHashCode();
      if (HasColor) hash ^= Color.GetHashCode();
      if (header_ != null) hash ^= Header.GetHashCode();
      if (footer_ != null) hash ^= Footer.GetHashCode();
      hash ^= fields_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Title.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      if (body_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Body);
      }
      if (HasColor) {
        output.WriteRawTag(24);
        output.WriteInt32(Color);
      }
      if (header_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Header);
      }
      if (footer_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Footer);
      }
      fields_.WriteTo(output, _repeated_fields_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Title.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      if (body_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Body);
      }
      if (HasColor) {
        output.WriteRawTag(24);
        output.WriteInt32(Color);
      }
      if (header_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Header);
      }
      if (footer_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Footer);
      }
      fields_.WriteTo(ref output, _repeated_fields_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (body_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Body);
      }
      if (HasColor) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Color);
      }
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (footer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Footer);
      }
      size += fields_.CalculateSize(_repeated_fields_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Embed other) {
      if (other == null) {
        return;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.body_ != null) {
        if (body_ == null) {
          Body = new global::Harmony.Chat.V1.FormattedText();
        }
        Body.MergeFrom(other.Body);
      }
      if (other.HasColor) {
        Color = other.Color;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Harmony.Chat.V1.Embed.Types.EmbedHeading();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.footer_ != null) {
        if (footer_ == null) {
          Footer = new global::Harmony.Chat.V1.Embed.Types.EmbedHeading();
        }
        Footer.MergeFrom(other.Footer);
      }
      fields_.Add(other.fields_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 18: {
            if (body_ == null) {
              Body = new global::Harmony.Chat.V1.FormattedText();
            }
            input.ReadMessage(Body);
            break;
          }
          case 24: {
            Color = input.ReadInt32();
            break;
          }
          case 34: {
            if (header_ == null) {
              Header = new global::Harmony.Chat.V1.Embed.Types.EmbedHeading();
            }
            input.ReadMessage(Header);
            break;
          }
          case 42: {
            if (footer_ == null) {
              Footer = new global::Harmony.Chat.V1.Embed.Types.EmbedHeading();
            }
            input.ReadMessage(Footer);
            break;
          }
          case 50: {
            fields_.AddEntriesFrom(input, _repeated_fields_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 18: {
            if (body_ == null) {
              Body = new global::Harmony.Chat.V1.FormattedText();
            }
            input.ReadMessage(Body);
            break;
          }
          case 24: {
            Color = input.ReadInt32();
            break;
          }
          case 34: {
            if (header_ == null) {
              Header = new global::Harmony.Chat.V1.Embed.Types.EmbedHeading();
            }
            input.ReadMessage(Header);
            break;
          }
          case 42: {
            if (footer_ == null) {
              Footer = new global::Harmony.Chat.V1.Embed.Types.EmbedHeading();
            }
            input.ReadMessage(Footer);
            break;
          }
          case 50: {
            fields_.AddEntriesFrom(ref input, _repeated_fields_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Embed message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Object representing an embed heading.
      /// </summary>
      public sealed partial class EmbedHeading : pb::IMessage<EmbedHeading>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<EmbedHeading> _parser = new pb::MessageParser<EmbedHeading>(() => new EmbedHeading());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EmbedHeading> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Harmony.Chat.V1.Embed.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EmbedHeading() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EmbedHeading(EmbedHeading other) : this() {
          text_ = other.text_;
          subtext_ = other.subtext_;
          url_ = other.url_;
          icon_ = other.icon_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EmbedHeading Clone() {
          return new EmbedHeading(this);
        }

        /// <summary>Field number for the "text" field.</summary>
        public const int TextFieldNumber = 1;
        private string text_ = "";
        /// <summary>
        /// Text of the heading.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Text {
          get { return text_; }
          set {
            text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "subtext" field.</summary>
        public const int SubtextFieldNumber = 2;
        private string subtext_;
        /// <summary>
        /// Subtext of the heading.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Subtext {
          get { return subtext_ ?? ""; }
          set {
            subtext_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "subtext" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasSubtext {
          get { return subtext_ != null; }
        }
        /// <summary>Clears the value of the "subtext" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearSubtext() {
          subtext_ = null;
        }

        /// <summary>Field number for the "url" field.</summary>
        public const int UrlFieldNumber = 3;
        private string url_;
        /// <summary>
        /// URL of the heading.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Url {
          get { return url_ ?? ""; }
          set {
            url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "url" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasUrl {
          get { return url_ != null; }
        }
        /// <summary>Clears the value of the "url" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearUrl() {
          url_ = null;
        }

        /// <summary>Field number for the "icon" field.</summary>
        public const int IconFieldNumber = 4;
        private string icon_;
        /// <summary>
        /// Icon of the heading.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Icon {
          get { return icon_ ?? ""; }
          set {
            icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "icon" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasIcon {
          get { return icon_ != null; }
        }
        /// <summary>Clears the value of the "icon" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearIcon() {
          icon_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as EmbedHeading);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EmbedHeading other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Text != other.Text) return false;
          if (Subtext != other.Subtext) return false;
          if (Url != other.Url) return false;
          if (Icon != other.Icon) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Text.Length != 0) hash ^= Text.GetHashCode();
          if (HasSubtext) hash ^= Subtext.GetHashCode();
          if (HasUrl) hash ^= Url.GetHashCode();
          if (HasIcon) hash ^= Icon.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Text.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Text);
          }
          if (HasSubtext) {
            output.WriteRawTag(18);
            output.WriteString(Subtext);
          }
          if (HasUrl) {
            output.WriteRawTag(26);
            output.WriteString(Url);
          }
          if (HasIcon) {
            output.WriteRawTag(34);
            output.WriteString(Icon);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Text.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Text);
          }
          if (HasSubtext) {
            output.WriteRawTag(18);
            output.WriteString(Subtext);
          }
          if (HasUrl) {
            output.WriteRawTag(26);
            output.WriteString(Url);
          }
          if (HasIcon) {
            output.WriteRawTag(34);
            output.WriteString(Icon);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Text.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
          }
          if (HasSubtext) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Subtext);
          }
          if (HasUrl) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
          }
          if (HasIcon) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EmbedHeading other) {
          if (other == null) {
            return;
          }
          if (other.Text.Length != 0) {
            Text = other.Text;
          }
          if (other.HasSubtext) {
            Subtext = other.Subtext;
          }
          if (other.HasUrl) {
            Url = other.Url;
          }
          if (other.HasIcon) {
            Icon = other.Icon;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Text = input.ReadString();
                break;
              }
              case 18: {
                Subtext = input.ReadString();
                break;
              }
              case 26: {
                Url = input.ReadString();
                break;
              }
              case 34: {
                Icon = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Text = input.ReadString();
                break;
              }
              case 18: {
                Subtext = input.ReadString();
                break;
              }
              case 26: {
                Url = input.ReadString();
                break;
              }
              case 34: {
                Icon = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Object representing an embed field.
      /// </summary>
      public sealed partial class EmbedField : pb::IMessage<EmbedField>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<EmbedField> _parser = new pb::MessageParser<EmbedField>(() => new EmbedField());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EmbedField> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Harmony.Chat.V1.Embed.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EmbedField() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EmbedField(EmbedField other) : this() {
          title_ = other.title_;
          subtitle_ = other.subtitle_;
          body_ = other.body_ != null ? other.body_.Clone() : null;
          imageUrl_ = other.imageUrl_;
          presentation_ = other.presentation_;
          actions_ = other.actions_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EmbedField Clone() {
          return new EmbedField(this);
        }

        /// <summary>Field number for the "title" field.</summary>
        public const int TitleFieldNumber = 1;
        private string title_ = "";
        /// <summary>
        /// Title of this field.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Title {
          get { return title_; }
          set {
            title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "subtitle" field.</summary>
        public const int SubtitleFieldNumber = 2;
        private string subtitle_;
        /// <summary>
        /// Subtitle of this field.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Subtitle {
          get { return subtitle_ ?? ""; }
          set {
            subtitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "subtitle" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasSubtitle {
          get { return subtitle_ != null; }
        }
        /// <summary>Clears the value of the "subtitle" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearSubtitle() {
          subtitle_ = null;
        }

        /// <summary>Field number for the "body" field.</summary>
        public const int BodyFieldNumber = 3;
        private global::Harmony.Chat.V1.FormattedText body_;
        /// <summary>
        /// Body text of this field (eg. a description).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Harmony.Chat.V1.FormattedText Body {
          get { return body_; }
          set {
            body_ = value;
          }
        }

        /// <summary>Field number for the "image_url" field.</summary>
        public const int ImageUrlFieldNumber = 4;
        private string imageUrl_;
        /// <summary>
        /// Image URL of this field.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ImageUrl {
          get { return imageUrl_ ?? ""; }
          set {
            imageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "image_url" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasImageUrl {
          get { return imageUrl_ != null; }
        }
        /// <summary>Clears the value of the "image_url" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearImageUrl() {
          imageUrl_ = null;
        }

        /// <summary>Field number for the "presentation" field.</summary>
        public const int PresentationFieldNumber = 5;
        private global::Harmony.Chat.V1.Embed.Types.EmbedField.Types.Presentation presentation_ = global::Harmony.Chat.V1.Embed.Types.EmbedField.Types.Presentation.DataUnspecified;
        /// <summary>
        /// How to present this field.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Harmony.Chat.V1.Embed.Types.EmbedField.Types.Presentation Presentation {
          get { return presentation_; }
          set {
            presentation_ = value;
          }
        }

        /// <summary>Field number for the "actions" field.</summary>
        public const int ActionsFieldNumber = 6;
        private static readonly pb::FieldCodec<global::Harmony.Chat.V1.Action> _repeated_actions_codec
            = pb::FieldCodec.ForMessage(50, global::Harmony.Chat.V1.Action.Parser);
        private readonly pbc::RepeatedField<global::Harmony.Chat.V1.Action> actions_ = new pbc::RepeatedField<global::Harmony.Chat.V1.Action>();
        /// <summary>
        /// Actions of this field.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Harmony.Chat.V1.Action> Actions {
          get { return actions_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as EmbedField);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EmbedField other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Title != other.Title) return false;
          if (Subtitle != other.Subtitle) return false;
          if (!object.Equals(Body, other.Body)) return false;
          if (ImageUrl != other.ImageUrl) return false;
          if (Presentation != other.Presentation) return false;
          if(!actions_.Equals(other.actions_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Title.Length != 0) hash ^= Title.GetHashCode();
          if (HasSubtitle) hash ^= Subtitle.GetHashCode();
          if (body_ != null) hash ^= Body.GetHashCode();
          if (HasImageUrl) hash ^= ImageUrl.GetHashCode();
          if (Presentation != global::Harmony.Chat.V1.Embed.Types.EmbedField.Types.Presentation.DataUnspecified) hash ^= Presentation.GetHashCode();
          hash ^= actions_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Title.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Title);
          }
          if (HasSubtitle) {
            output.WriteRawTag(18);
            output.WriteString(Subtitle);
          }
          if (body_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Body);
          }
          if (HasImageUrl) {
            output.WriteRawTag(34);
            output.WriteString(ImageUrl);
          }
          if (Presentation != global::Harmony.Chat.V1.Embed.Types.EmbedField.Types.Presentation.DataUnspecified) {
            output.WriteRawTag(40);
            output.WriteEnum((int) Presentation);
          }
          actions_.WriteTo(output, _repeated_actions_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Title.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Title);
          }
          if (HasSubtitle) {
            output.WriteRawTag(18);
            output.WriteString(Subtitle);
          }
          if (body_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Body);
          }
          if (HasImageUrl) {
            output.WriteRawTag(34);
            output.WriteString(ImageUrl);
          }
          if (Presentation != global::Harmony.Chat.V1.Embed.Types.EmbedField.Types.Presentation.DataUnspecified) {
            output.WriteRawTag(40);
            output.WriteEnum((int) Presentation);
          }
          actions_.WriteTo(ref output, _repeated_actions_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Title.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
          }
          if (HasSubtitle) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Subtitle);
          }
          if (body_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Body);
          }
          if (HasImageUrl) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageUrl);
          }
          if (Presentation != global::Harmony.Chat.V1.Embed.Types.EmbedField.Types.Presentation.DataUnspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Presentation);
          }
          size += actions_.CalculateSize(_repeated_actions_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EmbedField other) {
          if (other == null) {
            return;
          }
          if (other.Title.Length != 0) {
            Title = other.Title;
          }
          if (other.HasSubtitle) {
            Subtitle = other.Subtitle;
          }
          if (other.body_ != null) {
            if (body_ == null) {
              Body = new global::Harmony.Chat.V1.FormattedText();
            }
            Body.MergeFrom(other.Body);
          }
          if (other.HasImageUrl) {
            ImageUrl = other.ImageUrl;
          }
          if (other.Presentation != global::Harmony.Chat.V1.Embed.Types.EmbedField.Types.Presentation.DataUnspecified) {
            Presentation = other.Presentation;
          }
          actions_.Add(other.actions_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Title = input.ReadString();
                break;
              }
              case 18: {
                Subtitle = input.ReadString();
                break;
              }
              case 26: {
                if (body_ == null) {
                  Body = new global::Harmony.Chat.V1.FormattedText();
                }
                input.ReadMessage(Body);
                break;
              }
              case 34: {
                ImageUrl = input.ReadString();
                break;
              }
              case 40: {
                Presentation = (global::Harmony.Chat.V1.Embed.Types.EmbedField.Types.Presentation) input.ReadEnum();
                break;
              }
              case 50: {
                actions_.AddEntriesFrom(input, _repeated_actions_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Title = input.ReadString();
                break;
              }
              case 18: {
                Subtitle = input.ReadString();
                break;
              }
              case 26: {
                if (body_ == null) {
                  Body = new global::Harmony.Chat.V1.FormattedText();
                }
                input.ReadMessage(Body);
                break;
              }
              case 34: {
                ImageUrl = input.ReadString();
                break;
              }
              case 40: {
                Presentation = (global::Harmony.Chat.V1.Embed.Types.EmbedField.Types.Presentation) input.ReadEnum();
                break;
              }
              case 50: {
                actions_.AddEntriesFrom(ref input, _repeated_actions_codec);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the EmbedField message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// Type representing how to present an embed field.
          /// </summary>
          public enum Presentation {
            /// <summary>
            /// Show the field as data.
            /// </summary>
            [pbr::OriginalName("PRESENTATION_DATA_UNSPECIFIED")] DataUnspecified = 0,
            /// <summary>
            /// Show the field as a captioned image.
            /// </summary>
            [pbr::OriginalName("PRESENTATION_CAPTIONED_IMAGE")] CaptionedImage = 1,
            /// <summary>
            /// Show the field as a row.
            /// </summary>
            [pbr::OriginalName("PRESENTATION_ROW")] Row = 2,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  /// <summary>
  ///
  ///Minithumbnail is an extremely low-quality JPEG thumbnail.
  ///
  ///The resolution is usually no larger than 64x64.
  /// </summary>
  public sealed partial class Minithumbnail : pb::IMessage<Minithumbnail>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Minithumbnail> _parser = new pb::MessageParser<Minithumbnail>(() => new Minithumbnail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Minithumbnail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Minithumbnail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Minithumbnail(Minithumbnail other) : this() {
      width_ = other.width_;
      height_ = other.height_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Minithumbnail Clone() {
      return new Minithumbnail(this);
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 1;
    private uint width_;
    /// <summary>
    /// The width of the minithumbnail
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 2;
    private uint height_;
    /// <summary>
    /// The height of the minithumbnail
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 3;
    private pb::ByteString data_ = pb::ByteString.Empty;
    /// <summary>
    /// The JPEG data of the minithumbnail
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Minithumbnail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Minithumbnail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Width != 0) hash ^= Width.GetHashCode();
      if (Height != 0) hash ^= Height.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Width != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Width);
      }
      if (Height != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Height);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Width != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Width);
      }
      if (Height != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Height);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Width != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Width);
      }
      if (Height != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Height);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Minithumbnail other) {
      if (other == null) {
        return;
      }
      if (other.Width != 0) {
        Width = other.Width;
      }
      if (other.Height != 0) {
        Height = other.Height;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Width = input.ReadUInt32();
            break;
          }
          case 16: {
            Height = input.ReadUInt32();
            break;
          }
          case 26: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Width = input.ReadUInt32();
            break;
          }
          case 16: {
            Height = input.ReadUInt32();
            break;
          }
          case 26: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///Photo contains data about a photo.
  ///
  ///Photo are always JPEG, and are
  ///constrained to the following rules:
  ///
  ///- width+height &lt;= 10_000
  ///- width &lt;= height*20
  ///- height &lt;= width*20
  ///
  ///Photos are preferably no more than 10MB
  ///in size, and servers may compress as necessary.
  /// </summary>
  public sealed partial class Photo : pb::IMessage<Photo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Photo> _parser = new pb::MessageParser<Photo>(() => new Photo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Photo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Photo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Photo(Photo other) : this() {
      hmc_ = other.hmc_;
      name_ = other.name_;
      fileSize_ = other.fileSize_;
      height_ = other.height_;
      width_ = other.width_;
      caption_ = other.caption_ != null ? other.caption_.Clone() : null;
      minithumbnail_ = other.minithumbnail_ != null ? other.minithumbnail_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Photo Clone() {
      return new Photo(this);
    }

    /// <summary>Field number for the "hmc" field.</summary>
    public const int HmcFieldNumber = 1;
    private string hmc_ = "";
    /// <summary>
    /// The HMC URL of the photo.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Hmc {
      get { return hmc_; }
      set {
        hmc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// The filename of the photo.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "file_size" field.</summary>
    public const int FileSizeFieldNumber = 3;
    private uint fileSize_;
    /// <summary>
    /// The size of the photo.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint FileSize {
      get { return fileSize_; }
      set {
        fileSize_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 4;
    private uint height_;
    /// <summary>
    /// The height of the photo, in pixels.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 5;
    private uint width_;
    /// <summary>
    /// The width of the photo, in pixels.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "caption" field.</summary>
    public const int CaptionFieldNumber = 6;
    private global::Harmony.Chat.V1.FormattedText caption_;
    /// <summary>
    /// The photo's caption.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.FormattedText Caption {
      get { return caption_; }
      set {
        caption_ = value;
      }
    }

    /// <summary>Field number for the "minithumbnail" field.</summary>
    public const int MinithumbnailFieldNumber = 7;
    private global::Harmony.Chat.V1.Minithumbnail minithumbnail_;
    /// <summary>
    /// A thumbnail representing the photo.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Minithumbnail Minithumbnail {
      get { return minithumbnail_; }
      set {
        minithumbnail_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Photo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Photo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Hmc != other.Hmc) return false;
      if (Name != other.Name) return false;
      if (FileSize != other.FileSize) return false;
      if (Height != other.Height) return false;
      if (Width != other.Width) return false;
      if (!object.Equals(Caption, other.Caption)) return false;
      if (!object.Equals(Minithumbnail, other.Minithumbnail)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Hmc.Length != 0) hash ^= Hmc.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (FileSize != 0) hash ^= FileSize.GetHashCode();
      if (Height != 0) hash ^= Height.GetHashCode();
      if (Width != 0) hash ^= Width.GetHashCode();
      if (caption_ != null) hash ^= Caption.GetHashCode();
      if (minithumbnail_ != null) hash ^= Minithumbnail.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Hmc.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Hmc);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (FileSize != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(FileSize);
      }
      if (Height != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Height);
      }
      if (Width != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Width);
      }
      if (caption_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Caption);
      }
      if (minithumbnail_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Minithumbnail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Hmc.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Hmc);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (FileSize != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(FileSize);
      }
      if (Height != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Height);
      }
      if (Width != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Width);
      }
      if (caption_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Caption);
      }
      if (minithumbnail_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Minithumbnail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Hmc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hmc);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (FileSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FileSize);
      }
      if (Height != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Height);
      }
      if (Width != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Width);
      }
      if (caption_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Caption);
      }
      if (minithumbnail_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Minithumbnail);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Photo other) {
      if (other == null) {
        return;
      }
      if (other.Hmc.Length != 0) {
        Hmc = other.Hmc;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.FileSize != 0) {
        FileSize = other.FileSize;
      }
      if (other.Height != 0) {
        Height = other.Height;
      }
      if (other.Width != 0) {
        Width = other.Width;
      }
      if (other.caption_ != null) {
        if (caption_ == null) {
          Caption = new global::Harmony.Chat.V1.FormattedText();
        }
        Caption.MergeFrom(other.Caption);
      }
      if (other.minithumbnail_ != null) {
        if (minithumbnail_ == null) {
          Minithumbnail = new global::Harmony.Chat.V1.Minithumbnail();
        }
        Minithumbnail.MergeFrom(other.Minithumbnail);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Hmc = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            FileSize = input.ReadUInt32();
            break;
          }
          case 32: {
            Height = input.ReadUInt32();
            break;
          }
          case 40: {
            Width = input.ReadUInt32();
            break;
          }
          case 50: {
            if (caption_ == null) {
              Caption = new global::Harmony.Chat.V1.FormattedText();
            }
            input.ReadMessage(Caption);
            break;
          }
          case 58: {
            if (minithumbnail_ == null) {
              Minithumbnail = new global::Harmony.Chat.V1.Minithumbnail();
            }
            input.ReadMessage(Minithumbnail);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Hmc = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            FileSize = input.ReadUInt32();
            break;
          }
          case 32: {
            Height = input.ReadUInt32();
            break;
          }
          case 40: {
            Width = input.ReadUInt32();
            break;
          }
          case 50: {
            if (caption_ == null) {
              Caption = new global::Harmony.Chat.V1.FormattedText();
            }
            input.ReadMessage(Caption);
            break;
          }
          case 58: {
            if (minithumbnail_ == null) {
              Minithumbnail = new global::Harmony.Chat.V1.Minithumbnail();
            }
            input.ReadMessage(Minithumbnail);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Object representing a generic message attachment.
  /// </summary>
  public sealed partial class Attachment : pb::IMessage<Attachment>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Attachment> _parser = new pb::MessageParser<Attachment>(() => new Attachment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Attachment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attachment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attachment(Attachment other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      mimetype_ = other.mimetype_;
      size_ = other.size_;
      caption_ = other.caption_ != null ? other.caption_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attachment Clone() {
      return new Attachment(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// File ID of this attachment.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// Filename of this attachment.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mimetype" field.</summary>
    public const int MimetypeFieldNumber = 3;
    private string mimetype_ = "";
    /// <summary>
    /// Mimetype of this attachment.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mimetype {
      get { return mimetype_; }
      set {
        mimetype_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 4;
    private uint size_;
    /// <summary>
    /// Size of this attachment.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    /// <summary>Field number for the "caption" field.</summary>
    public const int CaptionFieldNumber = 5;
    private global::Harmony.Chat.V1.FormattedText caption_;
    /// <summary>
    /// Caption of this attachment.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.FormattedText Caption {
      get { return caption_; }
      set {
        caption_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Attachment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Attachment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Mimetype != other.Mimetype) return false;
      if (Size != other.Size) return false;
      if (!object.Equals(Caption, other.Caption)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Mimetype.Length != 0) hash ^= Mimetype.GetHashCode();
      if (Size != 0) hash ^= Size.GetHashCode();
      if (caption_ != null) hash ^= Caption.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Mimetype.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Mimetype);
      }
      if (Size != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Size);
      }
      if (caption_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Caption);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Mimetype.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Mimetype);
      }
      if (Size != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Size);
      }
      if (caption_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Caption);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Mimetype.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mimetype);
      }
      if (Size != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Size);
      }
      if (caption_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Caption);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Attachment other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Mimetype.Length != 0) {
        Mimetype = other.Mimetype;
      }
      if (other.Size != 0) {
        Size = other.Size;
      }
      if (other.caption_ != null) {
        if (caption_ == null) {
          Caption = new global::Harmony.Chat.V1.FormattedText();
        }
        Caption.MergeFrom(other.Caption);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Mimetype = input.ReadString();
            break;
          }
          case 32: {
            Size = input.ReadUInt32();
            break;
          }
          case 42: {
            if (caption_ == null) {
              Caption = new global::Harmony.Chat.V1.FormattedText();
            }
            input.ReadMessage(Caption);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Mimetype = input.ReadString();
            break;
          }
          case 32: {
            Size = input.ReadUInt32();
            break;
          }
          case 42: {
            if (caption_ == null) {
              Caption = new global::Harmony.Chat.V1.FormattedText();
            }
            input.ReadMessage(Caption);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Object representing a message's content.
  /// </summary>
  public sealed partial class Content : pb::IMessage<Content>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Content> _parser = new pb::MessageParser<Content>(() => new Content());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Content> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Content() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Content(Content other) : this() {
      switch (other.ContentCase) {
        case ContentOneofCase.TextMessage:
          TextMessage = other.TextMessage.Clone();
          break;
        case ContentOneofCase.EmbedMessage:
          EmbedMessage = other.EmbedMessage.Clone();
          break;
        case ContentOneofCase.AttachmentMessage:
          AttachmentMessage = other.AttachmentMessage.Clone();
          break;
        case ContentOneofCase.PhotoMessage:
          PhotoMessage = other.PhotoMessage.Clone();
          break;
        case ContentOneofCase.InviteRejected:
          InviteRejected = other.InviteRejected.Clone();
          break;
        case ContentOneofCase.InviteAccepted:
          InviteAccepted = other.InviteAccepted.Clone();
          break;
        case ContentOneofCase.RoomUpgradedToGuild:
          RoomUpgradedToGuild = other.RoomUpgradedToGuild.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Content Clone() {
      return new Content(this);
    }

    /// <summary>Field number for the "text_message" field.</summary>
    public const int TextMessageFieldNumber = 1;
    /// <summary>
    /// Text content.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Content.Types.TextContent TextMessage {
      get { return contentCase_ == ContentOneofCase.TextMessage ? (global::Harmony.Chat.V1.Content.Types.TextContent) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.TextMessage;
      }
    }

    /// <summary>Field number for the "embed_message" field.</summary>
    public const int EmbedMessageFieldNumber = 2;
    /// <summary>
    /// Embed content.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Content.Types.EmbedContent EmbedMessage {
      get { return contentCase_ == ContentOneofCase.EmbedMessage ? (global::Harmony.Chat.V1.Content.Types.EmbedContent) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.EmbedMessage;
      }
    }

    /// <summary>Field number for the "attachment_message" field.</summary>
    public const int AttachmentMessageFieldNumber = 3;
    /// <summary>
    /// Attachment content.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Content.Types.AttachmentContent AttachmentMessage {
      get { return contentCase_ == ContentOneofCase.AttachmentMessage ? (global::Harmony.Chat.V1.Content.Types.AttachmentContent) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.AttachmentMessage;
      }
    }

    /// <summary>Field number for the "photo_message" field.</summary>
    public const int PhotoMessageFieldNumber = 4;
    /// <summary>
    /// Photo content.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Content.Types.PhotoContent PhotoMessage {
      get { return contentCase_ == ContentOneofCase.PhotoMessage ? (global::Harmony.Chat.V1.Content.Types.PhotoContent) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.PhotoMessage;
      }
    }

    /// <summary>Field number for the "invite_rejected" field.</summary>
    public const int InviteRejectedFieldNumber = 5;
    /// <summary>
    /// A user rejected an invite.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Content.Types.InviteRejected InviteRejected {
      get { return contentCase_ == ContentOneofCase.InviteRejected ? (global::Harmony.Chat.V1.Content.Types.InviteRejected) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.InviteRejected;
      }
    }

    /// <summary>Field number for the "invite_accepted" field.</summary>
    public const int InviteAcceptedFieldNumber = 6;
    /// <summary>
    /// A user accepted an invite.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Content.Types.InviteAccepted InviteAccepted {
      get { return contentCase_ == ContentOneofCase.InviteAccepted ? (global::Harmony.Chat.V1.Content.Types.InviteAccepted) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.InviteAccepted;
      }
    }

    /// <summary>Field number for the "room_upgraded_to_guild" field.</summary>
    public const int RoomUpgradedToGuildFieldNumber = 7;
    /// <summary>
    /// A user upgraded a guild from "room" to "normal".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Content.Types.RoomUpgradedToGuild RoomUpgradedToGuild {
      get { return contentCase_ == ContentOneofCase.RoomUpgradedToGuild ? (global::Harmony.Chat.V1.Content.Types.RoomUpgradedToGuild) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.RoomUpgradedToGuild;
      }
    }

    private object content_;
    /// <summary>Enum of possible cases for the "content" oneof.</summary>
    public enum ContentOneofCase {
      None = 0,
      TextMessage = 1,
      EmbedMessage = 2,
      AttachmentMessage = 3,
      PhotoMessage = 4,
      InviteRejected = 5,
      InviteAccepted = 6,
      RoomUpgradedToGuild = 7,
    }
    private ContentOneofCase contentCase_ = ContentOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentOneofCase ContentCase {
      get { return contentCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContent() {
      contentCase_ = ContentOneofCase.None;
      content_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Content);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Content other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TextMessage, other.TextMessage)) return false;
      if (!object.Equals(EmbedMessage, other.EmbedMessage)) return false;
      if (!object.Equals(AttachmentMessage, other.AttachmentMessage)) return false;
      if (!object.Equals(PhotoMessage, other.PhotoMessage)) return false;
      if (!object.Equals(InviteRejected, other.InviteRejected)) return false;
      if (!object.Equals(InviteAccepted, other.InviteAccepted)) return false;
      if (!object.Equals(RoomUpgradedToGuild, other.RoomUpgradedToGuild)) return false;
      if (ContentCase != other.ContentCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (contentCase_ == ContentOneofCase.TextMessage) hash ^= TextMessage.GetHashCode();
      if (contentCase_ == ContentOneofCase.EmbedMessage) hash ^= EmbedMessage.GetHashCode();
      if (contentCase_ == ContentOneofCase.AttachmentMessage) hash ^= AttachmentMessage.GetHashCode();
      if (contentCase_ == ContentOneofCase.PhotoMessage) hash ^= PhotoMessage.GetHashCode();
      if (contentCase_ == ContentOneofCase.InviteRejected) hash ^= InviteRejected.GetHashCode();
      if (contentCase_ == ContentOneofCase.InviteAccepted) hash ^= InviteAccepted.GetHashCode();
      if (contentCase_ == ContentOneofCase.RoomUpgradedToGuild) hash ^= RoomUpgradedToGuild.GetHashCode();
      hash ^= (int) contentCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (contentCase_ == ContentOneofCase.TextMessage) {
        output.WriteRawTag(10);
        output.WriteMessage(TextMessage);
      }
      if (contentCase_ == ContentOneofCase.EmbedMessage) {
        output.WriteRawTag(18);
        output.WriteMessage(EmbedMessage);
      }
      if (contentCase_ == ContentOneofCase.AttachmentMessage) {
        output.WriteRawTag(26);
        output.WriteMessage(AttachmentMessage);
      }
      if (contentCase_ == ContentOneofCase.PhotoMessage) {
        output.WriteRawTag(34);
        output.WriteMessage(PhotoMessage);
      }
      if (contentCase_ == ContentOneofCase.InviteRejected) {
        output.WriteRawTag(42);
        output.WriteMessage(InviteRejected);
      }
      if (contentCase_ == ContentOneofCase.InviteAccepted) {
        output.WriteRawTag(50);
        output.WriteMessage(InviteAccepted);
      }
      if (contentCase_ == ContentOneofCase.RoomUpgradedToGuild) {
        output.WriteRawTag(58);
        output.WriteMessage(RoomUpgradedToGuild);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (contentCase_ == ContentOneofCase.TextMessage) {
        output.WriteRawTag(10);
        output.WriteMessage(TextMessage);
      }
      if (contentCase_ == ContentOneofCase.EmbedMessage) {
        output.WriteRawTag(18);
        output.WriteMessage(EmbedMessage);
      }
      if (contentCase_ == ContentOneofCase.AttachmentMessage) {
        output.WriteRawTag(26);
        output.WriteMessage(AttachmentMessage);
      }
      if (contentCase_ == ContentOneofCase.PhotoMessage) {
        output.WriteRawTag(34);
        output.WriteMessage(PhotoMessage);
      }
      if (contentCase_ == ContentOneofCase.InviteRejected) {
        output.WriteRawTag(42);
        output.WriteMessage(InviteRejected);
      }
      if (contentCase_ == ContentOneofCase.InviteAccepted) {
        output.WriteRawTag(50);
        output.WriteMessage(InviteAccepted);
      }
      if (contentCase_ == ContentOneofCase.RoomUpgradedToGuild) {
        output.WriteRawTag(58);
        output.WriteMessage(RoomUpgradedToGuild);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (contentCase_ == ContentOneofCase.TextMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TextMessage);
      }
      if (contentCase_ == ContentOneofCase.EmbedMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EmbedMessage);
      }
      if (contentCase_ == ContentOneofCase.AttachmentMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AttachmentMessage);
      }
      if (contentCase_ == ContentOneofCase.PhotoMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PhotoMessage);
      }
      if (contentCase_ == ContentOneofCase.InviteRejected) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InviteRejected);
      }
      if (contentCase_ == ContentOneofCase.InviteAccepted) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InviteAccepted);
      }
      if (contentCase_ == ContentOneofCase.RoomUpgradedToGuild) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomUpgradedToGuild);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Content other) {
      if (other == null) {
        return;
      }
      switch (other.ContentCase) {
        case ContentOneofCase.TextMessage:
          if (TextMessage == null) {
            TextMessage = new global::Harmony.Chat.V1.Content.Types.TextContent();
          }
          TextMessage.MergeFrom(other.TextMessage);
          break;
        case ContentOneofCase.EmbedMessage:
          if (EmbedMessage == null) {
            EmbedMessage = new global::Harmony.Chat.V1.Content.Types.EmbedContent();
          }
          EmbedMessage.MergeFrom(other.EmbedMessage);
          break;
        case ContentOneofCase.AttachmentMessage:
          if (AttachmentMessage == null) {
            AttachmentMessage = new global::Harmony.Chat.V1.Content.Types.AttachmentContent();
          }
          AttachmentMessage.MergeFrom(other.AttachmentMessage);
          break;
        case ContentOneofCase.PhotoMessage:
          if (PhotoMessage == null) {
            PhotoMessage = new global::Harmony.Chat.V1.Content.Types.PhotoContent();
          }
          PhotoMessage.MergeFrom(other.PhotoMessage);
          break;
        case ContentOneofCase.InviteRejected:
          if (InviteRejected == null) {
            InviteRejected = new global::Harmony.Chat.V1.Content.Types.InviteRejected();
          }
          InviteRejected.MergeFrom(other.InviteRejected);
          break;
        case ContentOneofCase.InviteAccepted:
          if (InviteAccepted == null) {
            InviteAccepted = new global::Harmony.Chat.V1.Content.Types.InviteAccepted();
          }
          InviteAccepted.MergeFrom(other.InviteAccepted);
          break;
        case ContentOneofCase.RoomUpgradedToGuild:
          if (RoomUpgradedToGuild == null) {
            RoomUpgradedToGuild = new global::Harmony.Chat.V1.Content.Types.RoomUpgradedToGuild();
          }
          RoomUpgradedToGuild.MergeFrom(other.RoomUpgradedToGuild);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Harmony.Chat.V1.Content.Types.TextContent subBuilder = new global::Harmony.Chat.V1.Content.Types.TextContent();
            if (contentCase_ == ContentOneofCase.TextMessage) {
              subBuilder.MergeFrom(TextMessage);
            }
            input.ReadMessage(subBuilder);
            TextMessage = subBuilder;
            break;
          }
          case 18: {
            global::Harmony.Chat.V1.Content.Types.EmbedContent subBuilder = new global::Harmony.Chat.V1.Content.Types.EmbedContent();
            if (contentCase_ == ContentOneofCase.EmbedMessage) {
              subBuilder.MergeFrom(EmbedMessage);
            }
            input.ReadMessage(subBuilder);
            EmbedMessage = subBuilder;
            break;
          }
          case 26: {
            global::Harmony.Chat.V1.Content.Types.AttachmentContent subBuilder = new global::Harmony.Chat.V1.Content.Types.AttachmentContent();
            if (contentCase_ == ContentOneofCase.AttachmentMessage) {
              subBuilder.MergeFrom(AttachmentMessage);
            }
            input.ReadMessage(subBuilder);
            AttachmentMessage = subBuilder;
            break;
          }
          case 34: {
            global::Harmony.Chat.V1.Content.Types.PhotoContent subBuilder = new global::Harmony.Chat.V1.Content.Types.PhotoContent();
            if (contentCase_ == ContentOneofCase.PhotoMessage) {
              subBuilder.MergeFrom(PhotoMessage);
            }
            input.ReadMessage(subBuilder);
            PhotoMessage = subBuilder;
            break;
          }
          case 42: {
            global::Harmony.Chat.V1.Content.Types.InviteRejected subBuilder = new global::Harmony.Chat.V1.Content.Types.InviteRejected();
            if (contentCase_ == ContentOneofCase.InviteRejected) {
              subBuilder.MergeFrom(InviteRejected);
            }
            input.ReadMessage(subBuilder);
            InviteRejected = subBuilder;
            break;
          }
          case 50: {
            global::Harmony.Chat.V1.Content.Types.InviteAccepted subBuilder = new global::Harmony.Chat.V1.Content.Types.InviteAccepted();
            if (contentCase_ == ContentOneofCase.InviteAccepted) {
              subBuilder.MergeFrom(InviteAccepted);
            }
            input.ReadMessage(subBuilder);
            InviteAccepted = subBuilder;
            break;
          }
          case 58: {
            global::Harmony.Chat.V1.Content.Types.RoomUpgradedToGuild subBuilder = new global::Harmony.Chat.V1.Content.Types.RoomUpgradedToGuild();
            if (contentCase_ == ContentOneofCase.RoomUpgradedToGuild) {
              subBuilder.MergeFrom(RoomUpgradedToGuild);
            }
            input.ReadMessage(subBuilder);
            RoomUpgradedToGuild = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Harmony.Chat.V1.Content.Types.TextContent subBuilder = new global::Harmony.Chat.V1.Content.Types.TextContent();
            if (contentCase_ == ContentOneofCase.TextMessage) {
              subBuilder.MergeFrom(TextMessage);
            }
            input.ReadMessage(subBuilder);
            TextMessage = subBuilder;
            break;
          }
          case 18: {
            global::Harmony.Chat.V1.Content.Types.EmbedContent subBuilder = new global::Harmony.Chat.V1.Content.Types.EmbedContent();
            if (contentCase_ == ContentOneofCase.EmbedMessage) {
              subBuilder.MergeFrom(EmbedMessage);
            }
            input.ReadMessage(subBuilder);
            EmbedMessage = subBuilder;
            break;
          }
          case 26: {
            global::Harmony.Chat.V1.Content.Types.AttachmentContent subBuilder = new global::Harmony.Chat.V1.Content.Types.AttachmentContent();
            if (contentCase_ == ContentOneofCase.AttachmentMessage) {
              subBuilder.MergeFrom(AttachmentMessage);
            }
            input.ReadMessage(subBuilder);
            AttachmentMessage = subBuilder;
            break;
          }
          case 34: {
            global::Harmony.Chat.V1.Content.Types.PhotoContent subBuilder = new global::Harmony.Chat.V1.Content.Types.PhotoContent();
            if (contentCase_ == ContentOneofCase.PhotoMessage) {
              subBuilder.MergeFrom(PhotoMessage);
            }
            input.ReadMessage(subBuilder);
            PhotoMessage = subBuilder;
            break;
          }
          case 42: {
            global::Harmony.Chat.V1.Content.Types.InviteRejected subBuilder = new global::Harmony.Chat.V1.Content.Types.InviteRejected();
            if (contentCase_ == ContentOneofCase.InviteRejected) {
              subBuilder.MergeFrom(InviteRejected);
            }
            input.ReadMessage(subBuilder);
            InviteRejected = subBuilder;
            break;
          }
          case 50: {
            global::Harmony.Chat.V1.Content.Types.InviteAccepted subBuilder = new global::Harmony.Chat.V1.Content.Types.InviteAccepted();
            if (contentCase_ == ContentOneofCase.InviteAccepted) {
              subBuilder.MergeFrom(InviteAccepted);
            }
            input.ReadMessage(subBuilder);
            InviteAccepted = subBuilder;
            break;
          }
          case 58: {
            global::Harmony.Chat.V1.Content.Types.RoomUpgradedToGuild subBuilder = new global::Harmony.Chat.V1.Content.Types.RoomUpgradedToGuild();
            if (contentCase_ == ContentOneofCase.RoomUpgradedToGuild) {
              subBuilder.MergeFrom(RoomUpgradedToGuild);
            }
            input.ReadMessage(subBuilder);
            RoomUpgradedToGuild = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Content message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Object representing text content.
      /// </summary>
      public sealed partial class TextContent : pb::IMessage<TextContent>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TextContent> _parser = new pb::MessageParser<TextContent>(() => new TextContent());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TextContent> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Harmony.Chat.V1.Content.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TextContent() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TextContent(TextContent other) : this() {
          content_ = other.content_ != null ? other.content_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TextContent Clone() {
          return new TextContent(this);
        }

        /// <summary>Field number for the "content" field.</summary>
        public const int ContentFieldNumber = 1;
        private global::Harmony.Chat.V1.FormattedText content_;
        /// <summary>
        /// Text content.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Harmony.Chat.V1.FormattedText Content {
          get { return content_; }
          set {
            content_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TextContent);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TextContent other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Content, other.Content)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (content_ != null) hash ^= Content.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (content_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Content);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (content_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Content);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (content_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Content);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TextContent other) {
          if (other == null) {
            return;
          }
          if (other.content_ != null) {
            if (content_ == null) {
              Content = new global::Harmony.Chat.V1.FormattedText();
            }
            Content.MergeFrom(other.Content);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (content_ == null) {
                  Content = new global::Harmony.Chat.V1.FormattedText();
                }
                input.ReadMessage(Content);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (content_ == null) {
                  Content = new global::Harmony.Chat.V1.FormattedText();
                }
                input.ReadMessage(Content);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Object representing embed content.
      /// </summary>
      public sealed partial class EmbedContent : pb::IMessage<EmbedContent>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<EmbedContent> _parser = new pb::MessageParser<EmbedContent>(() => new EmbedContent());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EmbedContent> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Harmony.Chat.V1.Content.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EmbedContent() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EmbedContent(EmbedContent other) : this() {
          embeds_ = other.embeds_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EmbedContent Clone() {
          return new EmbedContent(this);
        }

        /// <summary>Field number for the "embeds" field.</summary>
        public const int EmbedsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Harmony.Chat.V1.Embed> _repeated_embeds_codec
            = pb::FieldCodec.ForMessage(10, global::Harmony.Chat.V1.Embed.Parser);
        private readonly pbc::RepeatedField<global::Harmony.Chat.V1.Embed> embeds_ = new pbc::RepeatedField<global::Harmony.Chat.V1.Embed>();
        /// <summary>
        /// Embed content.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Harmony.Chat.V1.Embed> Embeds {
          get { return embeds_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as EmbedContent);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EmbedContent other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!embeds_.Equals(other.embeds_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= embeds_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          embeds_.WriteTo(output, _repeated_embeds_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          embeds_.WriteTo(ref output, _repeated_embeds_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += embeds_.CalculateSize(_repeated_embeds_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EmbedContent other) {
          if (other == null) {
            return;
          }
          embeds_.Add(other.embeds_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                embeds_.AddEntriesFrom(input, _repeated_embeds_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                embeds_.AddEntriesFrom(ref input, _repeated_embeds_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Object representing attachment content.
      /// </summary>
      public sealed partial class AttachmentContent : pb::IMessage<AttachmentContent>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<AttachmentContent> _parser = new pb::MessageParser<AttachmentContent>(() => new AttachmentContent());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AttachmentContent> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Harmony.Chat.V1.Content.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AttachmentContent() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AttachmentContent(AttachmentContent other) : this() {
          files_ = other.files_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AttachmentContent Clone() {
          return new AttachmentContent(this);
        }

        /// <summary>Field number for the "files" field.</summary>
        public const int FilesFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Harmony.Chat.V1.Attachment> _repeated_files_codec
            = pb::FieldCodec.ForMessage(10, global::Harmony.Chat.V1.Attachment.Parser);
        private readonly pbc::RepeatedField<global::Harmony.Chat.V1.Attachment> files_ = new pbc::RepeatedField<global::Harmony.Chat.V1.Attachment>();
        /// <summary>
        /// A list of attachments.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Harmony.Chat.V1.Attachment> Files {
          get { return files_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AttachmentContent);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AttachmentContent other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!files_.Equals(other.files_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= files_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          files_.WriteTo(output, _repeated_files_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          files_.WriteTo(ref output, _repeated_files_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += files_.CalculateSize(_repeated_files_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AttachmentContent other) {
          if (other == null) {
            return;
          }
          files_.Add(other.files_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                files_.AddEntriesFrom(input, _repeated_files_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                files_.AddEntriesFrom(ref input, _repeated_files_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Object representing photo content.
      /// </summary>
      public sealed partial class PhotoContent : pb::IMessage<PhotoContent>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PhotoContent> _parser = new pb::MessageParser<PhotoContent>(() => new PhotoContent());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PhotoContent> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Harmony.Chat.V1.Content.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PhotoContent() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PhotoContent(PhotoContent other) : this() {
          photos_ = other.photos_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PhotoContent Clone() {
          return new PhotoContent(this);
        }

        /// <summary>Field number for the "photos" field.</summary>
        public const int PhotosFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Harmony.Chat.V1.Photo> _repeated_photos_codec
            = pb::FieldCodec.ForMessage(10, global::Harmony.Chat.V1.Photo.Parser);
        private readonly pbc::RepeatedField<global::Harmony.Chat.V1.Photo> photos_ = new pbc::RepeatedField<global::Harmony.Chat.V1.Photo>();
        /// <summary>
        /// A list of photos.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Harmony.Chat.V1.Photo> Photos {
          get { return photos_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PhotoContent);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PhotoContent other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!photos_.Equals(other.photos_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= photos_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          photos_.WriteTo(output, _repeated_photos_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          photos_.WriteTo(ref output, _repeated_photos_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += photos_.CalculateSize(_repeated_photos_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PhotoContent other) {
          if (other == null) {
            return;
          }
          photos_.Add(other.photos_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                photos_.AddEntriesFrom(input, _repeated_photos_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                photos_.AddEntriesFrom(ref input, _repeated_photos_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Represents a user rejecting an invite.
      ///
      /// This can only be used by servers themselves. Servers should reject
      /// messages with this content if they are sent by a user.
      /// </summary>
      public sealed partial class InviteRejected : pb::IMessage<InviteRejected>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<InviteRejected> _parser = new pb::MessageParser<InviteRejected>(() => new InviteRejected());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<InviteRejected> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Harmony.Chat.V1.Content.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InviteRejected() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InviteRejected(InviteRejected other) : this() {
          inviteeId_ = other.inviteeId_;
          inviterId_ = other.inviterId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InviteRejected Clone() {
          return new InviteRejected(this);
        }

        /// <summary>Field number for the "invitee_id" field.</summary>
        public const int InviteeIdFieldNumber = 1;
        private ulong inviteeId_;
        /// <summary>
        /// User ID of the invitee.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong InviteeId {
          get { return inviteeId_; }
          set {
            inviteeId_ = value;
          }
        }

        /// <summary>Field number for the "inviter_id" field.</summary>
        public const int InviterIdFieldNumber = 2;
        private ulong inviterId_;
        /// <summary>
        /// User ID of the inviter.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong InviterId {
          get { return inviterId_; }
          set {
            inviterId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as InviteRejected);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(InviteRejected other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (InviteeId != other.InviteeId) return false;
          if (InviterId != other.InviterId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (InviteeId != 0UL) hash ^= InviteeId.GetHashCode();
          if (InviterId != 0UL) hash ^= InviterId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (InviteeId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(InviteeId);
          }
          if (InviterId != 0UL) {
            output.WriteRawTag(16);
            output.WriteUInt64(InviterId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (InviteeId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(InviteeId);
          }
          if (InviterId != 0UL) {
            output.WriteRawTag(16);
            output.WriteUInt64(InviterId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (InviteeId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(InviteeId);
          }
          if (InviterId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(InviterId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(InviteRejected other) {
          if (other == null) {
            return;
          }
          if (other.InviteeId != 0UL) {
            InviteeId = other.InviteeId;
          }
          if (other.InviterId != 0UL) {
            InviterId = other.InviterId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                InviteeId = input.ReadUInt64();
                break;
              }
              case 16: {
                InviterId = input.ReadUInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                InviteeId = input.ReadUInt64();
                break;
              }
              case 16: {
                InviterId = input.ReadUInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Represents a user accepting an invite.
      ///
      /// This can only be used by servers themselves. Servers should reject
      /// messages with this content if they are sent by a user.
      /// </summary>
      public sealed partial class InviteAccepted : pb::IMessage<InviteAccepted>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<InviteAccepted> _parser = new pb::MessageParser<InviteAccepted>(() => new InviteAccepted());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<InviteAccepted> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Harmony.Chat.V1.Content.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InviteAccepted() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InviteAccepted(InviteAccepted other) : this() {
          inviteeId_ = other.inviteeId_;
          inviterId_ = other.inviterId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InviteAccepted Clone() {
          return new InviteAccepted(this);
        }

        /// <summary>Field number for the "invitee_id" field.</summary>
        public const int InviteeIdFieldNumber = 1;
        private ulong inviteeId_;
        /// <summary>
        /// User ID of the invitee.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong InviteeId {
          get { return inviteeId_; }
          set {
            inviteeId_ = value;
          }
        }

        /// <summary>Field number for the "inviter_id" field.</summary>
        public const int InviterIdFieldNumber = 2;
        private ulong inviterId_;
        /// <summary>
        /// User ID of the inviter.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong InviterId {
          get { return inviterId_; }
          set {
            inviterId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as InviteAccepted);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(InviteAccepted other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (InviteeId != other.InviteeId) return false;
          if (InviterId != other.InviterId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (InviteeId != 0UL) hash ^= InviteeId.GetHashCode();
          if (InviterId != 0UL) hash ^= InviterId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (InviteeId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(InviteeId);
          }
          if (InviterId != 0UL) {
            output.WriteRawTag(16);
            output.WriteUInt64(InviterId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (InviteeId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(InviteeId);
          }
          if (InviterId != 0UL) {
            output.WriteRawTag(16);
            output.WriteUInt64(InviterId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (InviteeId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(InviteeId);
          }
          if (InviterId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(InviterId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(InviteAccepted other) {
          if (other == null) {
            return;
          }
          if (other.InviteeId != 0UL) {
            InviteeId = other.InviteeId;
          }
          if (other.InviterId != 0UL) {
            InviterId = other.InviterId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                InviteeId = input.ReadUInt64();
                break;
              }
              case 16: {
                InviterId = input.ReadUInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                InviteeId = input.ReadUInt64();
                break;
              }
              case 16: {
                InviterId = input.ReadUInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Represents a guild upgrade from "room" to "normal".
      ///
      /// This can only be used by servers themselves. Servers should reject
      /// messages with this content if they are sent by a user.
      /// </summary>
      public sealed partial class RoomUpgradedToGuild : pb::IMessage<RoomUpgradedToGuild>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RoomUpgradedToGuild> _parser = new pb::MessageParser<RoomUpgradedToGuild>(() => new RoomUpgradedToGuild());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RoomUpgradedToGuild> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Harmony.Chat.V1.Content.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RoomUpgradedToGuild() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RoomUpgradedToGuild(RoomUpgradedToGuild other) : this() {
          upgradedBy_ = other.upgradedBy_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RoomUpgradedToGuild Clone() {
          return new RoomUpgradedToGuild(this);
        }

        /// <summary>Field number for the "upgraded_by" field.</summary>
        public const int UpgradedByFieldNumber = 1;
        private ulong upgradedBy_;
        /// <summary>
        /// User ID of the user that upgraded the guild.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong UpgradedBy {
          get { return upgradedBy_; }
          set {
            upgradedBy_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RoomUpgradedToGuild);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RoomUpgradedToGuild other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (UpgradedBy != other.UpgradedBy) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (UpgradedBy != 0UL) hash ^= UpgradedBy.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (UpgradedBy != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(UpgradedBy);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (UpgradedBy != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(UpgradedBy);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (UpgradedBy != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UpgradedBy);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RoomUpgradedToGuild other) {
          if (other == null) {
            return;
          }
          if (other.UpgradedBy != 0UL) {
            UpgradedBy = other.UpgradedBy;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                UpgradedBy = input.ReadUInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                UpgradedBy = input.ReadUInt64();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Object representing a reaction.
  /// </summary>
  public sealed partial class Reaction : pb::IMessage<Reaction>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Reaction> _parser = new pb::MessageParser<Reaction>(() => new Reaction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Reaction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Reaction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Reaction(Reaction other) : this() {
      emote_ = other.emote_ != null ? other.emote_.Clone() : null;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Reaction Clone() {
      return new Reaction(this);
    }

    /// <summary>Field number for the "emote" field.</summary>
    public const int EmoteFieldNumber = 1;
    private global::Harmony.Emote.V1.Emote emote_;
    /// <summary>
    /// Emote data for this reaction.
    ///
    /// Emote's image ID is used as an identifier for unique reactions.
    /// Emotes with the same names should be "deduplicated" by a client, by suffixing
    /// their names with `~1`, `~2` and so on.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Emote.V1.Emote Emote {
      get { return emote_; }
      set {
        emote_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private uint count_;
    /// <summary>
    /// How many reactions this reaction has.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Reaction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Reaction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Emote, other.Emote)) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (emote_ != null) hash ^= Emote.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (emote_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Emote);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (emote_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Emote);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (emote_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Emote);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Reaction other) {
      if (other == null) {
        return;
      }
      if (other.emote_ != null) {
        if (emote_ == null) {
          Emote = new global::Harmony.Emote.V1.Emote();
        }
        Emote.MergeFrom(other.Emote);
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (emote_ == null) {
              Emote = new global::Harmony.Emote.V1.Emote();
            }
            input.ReadMessage(Emote);
            break;
          }
          case 16: {
            Count = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (emote_ == null) {
              Emote = new global::Harmony.Emote.V1.Emote();
            }
            input.ReadMessage(Emote);
            break;
          }
          case 16: {
            Count = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A format for text
  /// </summary>
  public sealed partial class Format : pb::IMessage<Format>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Format> _parser = new pb::MessageParser<Format>(() => new Format());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Format> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Format() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Format(Format other) : this() {
      start_ = other.start_;
      length_ = other.length_;
      switch (other.FormatCase) {
        case FormatOneofCase.Bold:
          Bold = other.Bold.Clone();
          break;
        case FormatOneofCase.Italic:
          Italic = other.Italic.Clone();
          break;
        case FormatOneofCase.Underline:
          Underline = other.Underline.Clone();
          break;
        case FormatOneofCase.Monospace:
          Monospace = other.Monospace.Clone();
          break;
        case FormatOneofCase.Superscript:
          Superscript = other.Superscript.Clone();
          break;
        case FormatOneofCase.Subscript:
          Subscript = other.Subscript.Clone();
          break;
        case FormatOneofCase.CodeBlock:
          CodeBlock = other.CodeBlock.Clone();
          break;
        case FormatOneofCase.UserMention:
          UserMention = other.UserMention.Clone();
          break;
        case FormatOneofCase.RoleMention:
          RoleMention = other.RoleMention.Clone();
          break;
        case FormatOneofCase.ChannelMention:
          ChannelMention = other.ChannelMention.Clone();
          break;
        case FormatOneofCase.GuildMention:
          GuildMention = other.GuildMention.Clone();
          break;
        case FormatOneofCase.Emoji:
          Emoji = other.Emoji.Clone();
          break;
        case FormatOneofCase.Color:
          Color = other.Color.Clone();
          break;
        case FormatOneofCase.Localization:
          Localization = other.Localization.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Format Clone() {
      return new Format(this);
    }

    /// <summary>Field number for the "start" field.</summary>
    public const int StartFieldNumber = 1;
    private uint start_;
    /// <summary>
    /// where the format begins to apply to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Start {
      get { return start_; }
      set {
        start_ = value;
      }
    }

    /// <summary>Field number for the "length" field.</summary>
    public const int LengthFieldNumber = 2;
    private uint length_;
    /// <summary>
    /// how many characters the format is
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Length {
      get { return length_; }
      set {
        length_ = value;
      }
    }

    /// <summary>Field number for the "bold" field.</summary>
    public const int BoldFieldNumber = 3;
    /// <summary>
    /// a text format for bold text
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Format.Types.Bold Bold {
      get { return formatCase_ == FormatOneofCase.Bold ? (global::Harmony.Chat.V1.Format.Types.Bold) format_ : null; }
      set {
        format_ = value;
        formatCase_ = value == null ? FormatOneofCase.None : FormatOneofCase.Bold;
      }
    }

    /// <summary>Field number for the "italic" field.</summary>
    public const int ItalicFieldNumber = 4;
    /// <summary>
    /// a text format for italic text
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Format.Types.Italic Italic {
      get { return formatCase_ == FormatOneofCase.Italic ? (global::Harmony.Chat.V1.Format.Types.Italic) format_ : null; }
      set {
        format_ = value;
        formatCase_ = value == null ? FormatOneofCase.None : FormatOneofCase.Italic;
      }
    }

    /// <summary>Field number for the "underline" field.</summary>
    public const int UnderlineFieldNumber = 5;
    /// <summary>
    /// a text format for underline text
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Format.Types.Underline Underline {
      get { return formatCase_ == FormatOneofCase.Underline ? (global::Harmony.Chat.V1.Format.Types.Underline) format_ : null; }
      set {
        format_ = value;
        formatCase_ = value == null ? FormatOneofCase.None : FormatOneofCase.Underline;
      }
    }

    /// <summary>Field number for the "monospace" field.</summary>
    public const int MonospaceFieldNumber = 6;
    /// <summary>
    /// a text format for monospace text
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Format.Types.Monospace Monospace {
      get { return formatCase_ == FormatOneofCase.Monospace ? (global::Harmony.Chat.V1.Format.Types.Monospace) format_ : null; }
      set {
        format_ = value;
        formatCase_ = value == null ? FormatOneofCase.None : FormatOneofCase.Monospace;
      }
    }

    /// <summary>Field number for the "superscript" field.</summary>
    public const int SuperscriptFieldNumber = 7;
    /// <summary>
    /// a text format for superscript text
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Format.Types.Superscript Superscript {
      get { return formatCase_ == FormatOneofCase.Superscript ? (global::Harmony.Chat.V1.Format.Types.Superscript) format_ : null; }
      set {
        format_ = value;
        formatCase_ = value == null ? FormatOneofCase.None : FormatOneofCase.Superscript;
      }
    }

    /// <summary>Field number for the "subscript" field.</summary>
    public const int SubscriptFieldNumber = 8;
    /// <summary>
    /// a text format for subscript text
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Format.Types.Subscript Subscript {
      get { return formatCase_ == FormatOneofCase.Subscript ? (global::Harmony.Chat.V1.Format.Types.Subscript) format_ : null; }
      set {
        format_ = value;
        formatCase_ = value == null ? FormatOneofCase.None : FormatOneofCase.Subscript;
      }
    }

    /// <summary>Field number for the "code_block" field.</summary>
    public const int CodeBlockFieldNumber = 9;
    /// <summary>
    /// a text format for a codeblock
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Format.Types.CodeBlock CodeBlock {
      get { return formatCase_ == FormatOneofCase.CodeBlock ? (global::Harmony.Chat.V1.Format.Types.CodeBlock) format_ : null; }
      set {
        format_ = value;
        formatCase_ = value == null ? FormatOneofCase.None : FormatOneofCase.CodeBlock;
      }
    }

    /// <summary>Field number for the "user_mention" field.</summary>
    public const int UserMentionFieldNumber = 10;
    /// <summary>
    /// a text format for a user mention
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Format.Types.UserMention UserMention {
      get { return formatCase_ == FormatOneofCase.UserMention ? (global::Harmony.Chat.V1.Format.Types.UserMention) format_ : null; }
      set {
        format_ = value;
        formatCase_ = value == null ? FormatOneofCase.None : FormatOneofCase.UserMention;
      }
    }

    /// <summary>Field number for the "role_mention" field.</summary>
    public const int RoleMentionFieldNumber = 11;
    /// <summary>
    /// a text format for a role mention
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Format.Types.RoleMention RoleMention {
      get { return formatCase_ == FormatOneofCase.RoleMention ? (global::Harmony.Chat.V1.Format.Types.RoleMention) format_ : null; }
      set {
        format_ = value;
        formatCase_ = value == null ? FormatOneofCase.None : FormatOneofCase.RoleMention;
      }
    }

    /// <summary>Field number for the "channel_mention" field.</summary>
    public const int ChannelMentionFieldNumber = 12;
    /// <summary>
    /// a text format for a channel mention
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Format.Types.ChannelMention ChannelMention {
      get { return formatCase_ == FormatOneofCase.ChannelMention ? (global::Harmony.Chat.V1.Format.Types.ChannelMention) format_ : null; }
      set {
        format_ = value;
        formatCase_ = value == null ? FormatOneofCase.None : FormatOneofCase.ChannelMention;
      }
    }

    /// <summary>Field number for the "guild_mention" field.</summary>
    public const int GuildMentionFieldNumber = 13;
    /// <summary>
    /// a text format for a guild mention
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Format.Types.GuildMention GuildMention {
      get { return formatCase_ == FormatOneofCase.GuildMention ? (global::Harmony.Chat.V1.Format.Types.GuildMention) format_ : null; }
      set {
        format_ = value;
        formatCase_ = value == null ? FormatOneofCase.None : FormatOneofCase.GuildMention;
      }
    }

    /// <summary>Field number for the "emoji" field.</summary>
    public const int EmojiFieldNumber = 14;
    /// <summary>
    /// a text format for an emoji
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Format.Types.Emoji Emoji {
      get { return formatCase_ == FormatOneofCase.Emoji ? (global::Harmony.Chat.V1.Format.Types.Emoji) format_ : null; }
      set {
        format_ = value;
        formatCase_ = value == null ? FormatOneofCase.None : FormatOneofCase.Emoji;
      }
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 15;
    /// <summary>
    /// a text format for coloured text
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Format.Types.Color Color {
      get { return formatCase_ == FormatOneofCase.Color ? (global::Harmony.Chat.V1.Format.Types.Color) format_ : null; }
      set {
        format_ = value;
        formatCase_ = value == null ? FormatOneofCase.None : FormatOneofCase.Color;
      }
    }

    /// <summary>Field number for the "localization" field.</summary>
    public const int LocalizationFieldNumber = 16;
    /// <summary>
    /// a text format for localization
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Format.Types.Localization Localization {
      get { return formatCase_ == FormatOneofCase.Localization ? (global::Harmony.Chat.V1.Format.Types.Localization) format_ : null; }
      set {
        format_ = value;
        formatCase_ = value == null ? FormatOneofCase.None : FormatOneofCase.Localization;
      }
    }

    private object format_;
    /// <summary>Enum of possible cases for the "format" oneof.</summary>
    public enum FormatOneofCase {
      None = 0,
      Bold = 3,
      Italic = 4,
      Underline = 5,
      Monospace = 6,
      Superscript = 7,
      Subscript = 8,
      CodeBlock = 9,
      UserMention = 10,
      RoleMention = 11,
      ChannelMention = 12,
      GuildMention = 13,
      Emoji = 14,
      Color = 15,
      Localization = 16,
    }
    private FormatOneofCase formatCase_ = FormatOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FormatOneofCase FormatCase {
      get { return formatCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFormat() {
      formatCase_ = FormatOneofCase.None;
      format_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Format);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Format other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Start != other.Start) return false;
      if (Length != other.Length) return false;
      if (!object.Equals(Bold, other.Bold)) return false;
      if (!object.Equals(Italic, other.Italic)) return false;
      if (!object.Equals(Underline, other.Underline)) return false;
      if (!object.Equals(Monospace, other.Monospace)) return false;
      if (!object.Equals(Superscript, other.Superscript)) return false;
      if (!object.Equals(Subscript, other.Subscript)) return false;
      if (!object.Equals(CodeBlock, other.CodeBlock)) return false;
      if (!object.Equals(UserMention, other.UserMention)) return false;
      if (!object.Equals(RoleMention, other.RoleMention)) return false;
      if (!object.Equals(ChannelMention, other.ChannelMention)) return false;
      if (!object.Equals(GuildMention, other.GuildMention)) return false;
      if (!object.Equals(Emoji, other.Emoji)) return false;
      if (!object.Equals(Color, other.Color)) return false;
      if (!object.Equals(Localization, other.Localization)) return false;
      if (FormatCase != other.FormatCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Start != 0) hash ^= Start.GetHashCode();
      if (Length != 0) hash ^= Length.GetHashCode();
      if (formatCase_ == FormatOneofCase.Bold) hash ^= Bold.GetHashCode();
      if (formatCase_ == FormatOneofCase.Italic) hash ^= Italic.GetHashCode();
      if (formatCase_ == FormatOneofCase.Underline) hash ^= Underline.GetHashCode();
      if (formatCase_ == FormatOneofCase.Monospace) hash ^= Monospace.GetHashCode();
      if (formatCase_ == FormatOneofCase.Superscript) hash ^= Superscript.GetHashCode();
      if (formatCase_ == FormatOneofCase.Subscript) hash ^= Subscript.GetHashCode();
      if (formatCase_ == FormatOneofCase.CodeBlock) hash ^= CodeBlock.GetHashCode();
      if (formatCase_ == FormatOneofCase.UserMention) hash ^= UserMention.GetHashCode();
      if (formatCase_ == FormatOneofCase.RoleMention) hash ^= RoleMention.GetHashCode();
      if (formatCase_ == FormatOneofCase.ChannelMention) hash ^= ChannelMention.GetHashCode();
      if (formatCase_ == FormatOneofCase.GuildMention) hash ^= GuildMention.GetHashCode();
      if (formatCase_ == FormatOneofCase.Emoji) hash ^= Emoji.GetHashCode();
      if (formatCase_ == FormatOneofCase.Color) hash ^= Color.GetHashCode();
      if (formatCase_ == FormatOneofCase.Localization) hash ^= Localization.GetHashCode();
      hash ^= (int) formatCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Start != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Start);
      }
      if (Length != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Length);
      }
      if (formatCase_ == FormatOneofCase.Bold) {
        output.WriteRawTag(26);
        output.WriteMessage(Bold);
      }
      if (formatCase_ == FormatOneofCase.Italic) {
        output.WriteRawTag(34);
        output.WriteMessage(Italic);
      }
      if (formatCase_ == FormatOneofCase.Underline) {
        output.WriteRawTag(42);
        output.WriteMessage(Underline);
      }
      if (formatCase_ == FormatOneofCase.Monospace) {
        output.WriteRawTag(50);
        output.WriteMessage(Monospace);
      }
      if (formatCase_ == FormatOneofCase.Superscript) {
        output.WriteRawTag(58);
        output.WriteMessage(Superscript);
      }
      if (formatCase_ == FormatOneofCase.Subscript) {
        output.WriteRawTag(66);
        output.WriteMessage(Subscript);
      }
      if (formatCase_ == FormatOneofCase.CodeBlock) {
        output.WriteRawTag(74);
        output.WriteMessage(CodeBlock);
      }
      if (formatCase_ == FormatOneofCase.UserMention) {
        output.WriteRawTag(82);
        output.WriteMessage(UserMention);
      }
      if (formatCase_ == FormatOneofCase.RoleMention) {
        output.WriteRawTag(90);
        output.WriteMessage(RoleMention);
      }
      if (formatCase_ == FormatOneofCase.ChannelMention) {
        output.WriteRawTag(98);
        output.WriteMessage(ChannelMention);
      }
      if (formatCase_ == FormatOneofCase.GuildMention) {
        output.WriteRawTag(106);
        output.WriteMessage(GuildMention);
      }
      if (formatCase_ == FormatOneofCase.Emoji) {
        output.WriteRawTag(114);
        output.WriteMessage(Emoji);
      }
      if (formatCase_ == FormatOneofCase.Color) {
        output.WriteRawTag(122);
        output.WriteMessage(Color);
      }
      if (formatCase_ == FormatOneofCase.Localization) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Localization);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Start != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Start);
      }
      if (Length != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Length);
      }
      if (formatCase_ == FormatOneofCase.Bold) {
        output.WriteRawTag(26);
        output.WriteMessage(Bold);
      }
      if (formatCase_ == FormatOneofCase.Italic) {
        output.WriteRawTag(34);
        output.WriteMessage(Italic);
      }
      if (formatCase_ == FormatOneofCase.Underline) {
        output.WriteRawTag(42);
        output.WriteMessage(Underline);
      }
      if (formatCase_ == FormatOneofCase.Monospace) {
        output.WriteRawTag(50);
        output.WriteMessage(Monospace);
      }
      if (formatCase_ == FormatOneofCase.Superscript) {
        output.WriteRawTag(58);
        output.WriteMessage(Superscript);
      }
      if (formatCase_ == FormatOneofCase.Subscript) {
        output.WriteRawTag(66);
        output.WriteMessage(Subscript);
      }
      if (formatCase_ == FormatOneofCase.CodeBlock) {
        output.WriteRawTag(74);
        output.WriteMessage(CodeBlock);
      }
      if (formatCase_ == FormatOneofCase.UserMention) {
        output.WriteRawTag(82);
        output.WriteMessage(UserMention);
      }
      if (formatCase_ == FormatOneofCase.RoleMention) {
        output.WriteRawTag(90);
        output.WriteMessage(RoleMention);
      }
      if (formatCase_ == FormatOneofCase.ChannelMention) {
        output.WriteRawTag(98);
        output.WriteMessage(ChannelMention);
      }
      if (formatCase_ == FormatOneofCase.GuildMention) {
        output.WriteRawTag(106);
        output.WriteMessage(GuildMention);
      }
      if (formatCase_ == FormatOneofCase.Emoji) {
        output.WriteRawTag(114);
        output.WriteMessage(Emoji);
      }
      if (formatCase_ == FormatOneofCase.Color) {
        output.WriteRawTag(122);
        output.WriteMessage(Color);
      }
      if (formatCase_ == FormatOneofCase.Localization) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Localization);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Start != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Start);
      }
      if (Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Length);
      }
      if (formatCase_ == FormatOneofCase.Bold) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bold);
      }
      if (formatCase_ == FormatOneofCase.Italic) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Italic);
      }
      if (formatCase_ == FormatOneofCase.Underline) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Underline);
      }
      if (formatCase_ == FormatOneofCase.Monospace) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Monospace);
      }
      if (formatCase_ == FormatOneofCase.Superscript) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Superscript);
      }
      if (formatCase_ == FormatOneofCase.Subscript) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Subscript);
      }
      if (formatCase_ == FormatOneofCase.CodeBlock) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CodeBlock);
      }
      if (formatCase_ == FormatOneofCase.UserMention) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMention);
      }
      if (formatCase_ == FormatOneofCase.RoleMention) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoleMention);
      }
      if (formatCase_ == FormatOneofCase.ChannelMention) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChannelMention);
      }
      if (formatCase_ == FormatOneofCase.GuildMention) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GuildMention);
      }
      if (formatCase_ == FormatOneofCase.Emoji) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Emoji);
      }
      if (formatCase_ == FormatOneofCase.Color) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Color);
      }
      if (formatCase_ == FormatOneofCase.Localization) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Localization);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Format other) {
      if (other == null) {
        return;
      }
      if (other.Start != 0) {
        Start = other.Start;
      }
      if (other.Length != 0) {
        Length = other.Length;
      }
      switch (other.FormatCase) {
        case FormatOneofCase.Bold:
          if (Bold == null) {
            Bold = new global::Harmony.Chat.V1.Format.Types.Bold();
          }
          Bold.MergeFrom(other.Bold);
          break;
        case FormatOneofCase.Italic:
          if (Italic == null) {
            Italic = new global::Harmony.Chat.V1.Format.Types.Italic();
          }
          Italic.MergeFrom(other.Italic);
          break;
        case FormatOneofCase.Underline:
          if (Underline == null) {
            Underline = new global::Harmony.Chat.V1.Format.Types.Underline();
          }
          Underline.MergeFrom(other.Underline);
          break;
        case FormatOneofCase.Monospace:
          if (Monospace == null) {
            Monospace = new global::Harmony.Chat.V1.Format.Types.Monospace();
          }
          Monospace.MergeFrom(other.Monospace);
          break;
        case FormatOneofCase.Superscript:
          if (Superscript == null) {
            Superscript = new global::Harmony.Chat.V1.Format.Types.Superscript();
          }
          Superscript.MergeFrom(other.Superscript);
          break;
        case FormatOneofCase.Subscript:
          if (Subscript == null) {
            Subscript = new global::Harmony.Chat.V1.Format.Types.Subscript();
          }
          Subscript.MergeFrom(other.Subscript);
          break;
        case FormatOneofCase.CodeBlock:
          if (CodeBlock == null) {
            CodeBlock = new global::Harmony.Chat.V1.Format.Types.CodeBlock();
          }
          CodeBlock.MergeFrom(other.CodeBlock);
          break;
        case FormatOneofCase.UserMention:
          if (UserMention == null) {
            UserMention = new global::Harmony.Chat.V1.Format.Types.UserMention();
          }
          UserMention.MergeFrom(other.UserMention);
          break;
        case FormatOneofCase.RoleMention:
          if (RoleMention == null) {
            RoleMention = new global::Harmony.Chat.V1.Format.Types.RoleMention();
          }
          RoleMention.MergeFrom(other.RoleMention);
          break;
        case FormatOneofCase.ChannelMention:
          if (ChannelMention == null) {
            ChannelMention = new global::Harmony.Chat.V1.Format.Types.ChannelMention();
          }
          ChannelMention.MergeFrom(other.ChannelMention);
          break;
        case FormatOneofCase.GuildMention:
          if (GuildMention == null) {
            GuildMention = new global::Harmony.Chat.V1.Format.Types.GuildMention();
          }
          GuildMention.MergeFrom(other.GuildMention);
          break;
        case FormatOneofCase.Emoji:
          if (Emoji == null) {
            Emoji = new global::Harmony.Chat.V1.Format.Types.Emoji();
          }
          Emoji.MergeFrom(other.Emoji);
          break;
        case FormatOneofCase.Color:
          if (Color == null) {
            Color = new global::Harmony.Chat.V1.Format.Types.Color();
          }
          Color.MergeFrom(other.Color);
          break;
        case FormatOneofCase.Localization:
          if (Localization == null) {
            Localization = new global::Harmony.Chat.V1.Format.Types.Localization();
          }
          Localization.MergeFrom(other.Localization);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Start = input.ReadUInt32();
            break;
          }
          case 16: {
            Length = input.ReadUInt32();
            break;
          }
          case 26: {
            global::Harmony.Chat.V1.Format.Types.Bold subBuilder = new global::Harmony.Chat.V1.Format.Types.Bold();
            if (formatCase_ == FormatOneofCase.Bold) {
              subBuilder.MergeFrom(Bold);
            }
            input.ReadMessage(subBuilder);
            Bold = subBuilder;
            break;
          }
          case 34: {
            global::Harmony.Chat.V1.Format.Types.Italic subBuilder = new global::Harmony.Chat.V1.Format.Types.Italic();
            if (formatCase_ == FormatOneofCase.Italic) {
              subBuilder.MergeFrom(Italic);
            }
            input.ReadMessage(subBuilder);
            Italic = subBuilder;
            break;
          }
          case 42: {
            global::Harmony.Chat.V1.Format.Types.Underline subBuilder = new global::Harmony.Chat.V1.Format.Types.Underline();
            if (formatCase_ == FormatOneofCase.Underline) {
              subBuilder.MergeFrom(Underline);
            }
            input.ReadMessage(subBuilder);
            Underline = subBuilder;
            break;
          }
          case 50: {
            global::Harmony.Chat.V1.Format.Types.Monospace subBuilder = new global::Harmony.Chat.V1.Format.Types.Monospace();
            if (formatCase_ == FormatOneofCase.Monospace) {
              subBuilder.MergeFrom(Monospace);
            }
            input.ReadMessage(subBuilder);
            Monospace = subBuilder;
            break;
          }
          case 58: {
            global::Harmony.Chat.V1.Format.Types.Superscript subBuilder = new global::Harmony.Chat.V1.Format.Types.Superscript();
            if (formatCase_ == FormatOneofCase.Superscript) {
              subBuilder.MergeFrom(Superscript);
            }
            input.ReadMessage(subBuilder);
            Superscript = subBuilder;
            break;
          }
          case 66: {
            global::Harmony.Chat.V1.Format.Types.Subscript subBuilder = new global::Harmony.Chat.V1.Format.Types.Subscript();
            if (formatCase_ == FormatOneofCase.Subscript) {
              subBuilder.MergeFrom(Subscript);
            }
            input.ReadMessage(subBuilder);
            Subscript = subBuilder;
            break;
          }
          case 74: {
            global::Harmony.Chat.V1.Format.Types.CodeBlock subBuilder = new global::Harmony.Chat.V1.Format.Types.CodeBlock();
            if (formatCase_ == FormatOneofCase.CodeBlock) {
              subBuilder.MergeFrom(CodeBlock);
            }
            input.ReadMessage(subBuilder);
            CodeBlock = subBuilder;
            break;
          }
          case 82: {
            global::Harmony.Chat.V1.Format.Types.UserMention subBuilder = new global::Harmony.Chat.V1.Format.Types.UserMention();
            if (formatCase_ == FormatOneofCase.UserMention) {
              subBuilder.MergeFrom(UserMention);
            }
            input.ReadMessage(subBuilder);
            UserMention = subBuilder;
            break;
          }
          case 90: {
            global::Harmony.Chat.V1.Format.Types.RoleMention subBuilder = new global::Harmony.Chat.V1.Format.Types.RoleMention();
            if (formatCase_ == FormatOneofCase.RoleMention) {
              subBuilder.MergeFrom(RoleMention);
            }
            input.ReadMessage(subBuilder);
            RoleMention = subBuilder;
            break;
          }
          case 98: {
            global::Harmony.Chat.V1.Format.Types.ChannelMention subBuilder = new global::Harmony.Chat.V1.Format.Types.ChannelMention();
            if (formatCase_ == FormatOneofCase.ChannelMention) {
              subBuilder.MergeFrom(ChannelMention);
            }
            input.ReadMessage(subBuilder);
            ChannelMention = subBuilder;
            break;
          }
          case 106: {
            global::Harmony.Chat.V1.Format.Types.GuildMention subBuilder = new global::Harmony.Chat.V1.Format.Types.GuildMention();
            if (formatCase_ == FormatOneofCase.GuildMention) {
              subBuilder.MergeFrom(GuildMention);
            }
            input.ReadMessage(subBuilder);
            GuildMention = subBuilder;
            break;
          }
          case 114: {
            global::Harmony.Chat.V1.Format.Types.Emoji subBuilder = new global::Harmony.Chat.V1.Format.Types.Emoji();
            if (formatCase_ == FormatOneofCase.Emoji) {
              subBuilder.MergeFrom(Emoji);
            }
            input.ReadMessage(subBuilder);
            Emoji = subBuilder;
            break;
          }
          case 122: {
            global::Harmony.Chat.V1.Format.Types.Color subBuilder = new global::Harmony.Chat.V1.Format.Types.Color();
            if (formatCase_ == FormatOneofCase.Color) {
              subBuilder.MergeFrom(Color);
            }
            input.ReadMessage(subBuilder);
            Color = subBuilder;
            break;
          }
          case 130: {
            global::Harmony.Chat.V1.Format.Types.Localization subBuilder = new global::Harmony.Chat.V1.Format.Types.Localization();
            if (formatCase_ == FormatOneofCase.Localization) {
              subBuilder.MergeFrom(Localization);
            }
            input.ReadMessage(subBuilder);
            Localization = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Start = input.ReadUInt32();
            break;
          }
          case 16: {
            Length = input.ReadUInt32();
            break;
          }
          case 26: {
            global::Harmony.Chat.V1.Format.Types.Bold subBuilder = new global::Harmony.Chat.V1.Format.Types.Bold();
            if (formatCase_ == FormatOneofCase.Bold) {
              subBuilder.MergeFrom(Bold);
            }
            input.ReadMessage(subBuilder);
            Bold = subBuilder;
            break;
          }
          case 34: {
            global::Harmony.Chat.V1.Format.Types.Italic subBuilder = new global::Harmony.Chat.V1.Format.Types.Italic();
            if (formatCase_ == FormatOneofCase.Italic) {
              subBuilder.MergeFrom(Italic);
            }
            input.ReadMessage(subBuilder);
            Italic = subBuilder;
            break;
          }
          case 42: {
            global::Harmony.Chat.V1.Format.Types.Underline subBuilder = new global::Harmony.Chat.V1.Format.Types.Underline();
            if (formatCase_ == FormatOneofCase.Underline) {
              subBuilder.MergeFrom(Underline);
            }
            input.ReadMessage(subBuilder);
            Underline = subBuilder;
            break;
          }
          case 50: {
            global::Harmony.Chat.V1.Format.Types.Monospace subBuilder = new global::Harmony.Chat.V1.Format.Types.Monospace();
            if (formatCase_ == FormatOneofCase.Monospace) {
              subBuilder.MergeFrom(Monospace);
            }
            input.ReadMessage(subBuilder);
            Monospace = subBuilder;
            break;
          }
          case 58: {
            global::Harmony.Chat.V1.Format.Types.Superscript subBuilder = new global::Harmony.Chat.V1.Format.Types.Superscript();
            if (formatCase_ == FormatOneofCase.Superscript) {
              subBuilder.MergeFrom(Superscript);
            }
            input.ReadMessage(subBuilder);
            Superscript = subBuilder;
            break;
          }
          case 66: {
            global::Harmony.Chat.V1.Format.Types.Subscript subBuilder = new global::Harmony.Chat.V1.Format.Types.Subscript();
            if (formatCase_ == FormatOneofCase.Subscript) {
              subBuilder.MergeFrom(Subscript);
            }
            input.ReadMessage(subBuilder);
            Subscript = subBuilder;
            break;
          }
          case 74: {
            global::Harmony.Chat.V1.Format.Types.CodeBlock subBuilder = new global::Harmony.Chat.V1.Format.Types.CodeBlock();
            if (formatCase_ == FormatOneofCase.CodeBlock) {
              subBuilder.MergeFrom(CodeBlock);
            }
            input.ReadMessage(subBuilder);
            CodeBlock = subBuilder;
            break;
          }
          case 82: {
            global::Harmony.Chat.V1.Format.Types.UserMention subBuilder = new global::Harmony.Chat.V1.Format.Types.UserMention();
            if (formatCase_ == FormatOneofCase.UserMention) {
              subBuilder.MergeFrom(UserMention);
            }
            input.ReadMessage(subBuilder);
            UserMention = subBuilder;
            break;
          }
          case 90: {
            global::Harmony.Chat.V1.Format.Types.RoleMention subBuilder = new global::Harmony.Chat.V1.Format.Types.RoleMention();
            if (formatCase_ == FormatOneofCase.RoleMention) {
              subBuilder.MergeFrom(RoleMention);
            }
            input.ReadMessage(subBuilder);
            RoleMention = subBuilder;
            break;
          }
          case 98: {
            global::Harmony.Chat.V1.Format.Types.ChannelMention subBuilder = new global::Harmony.Chat.V1.Format.Types.ChannelMention();
            if (formatCase_ == FormatOneofCase.ChannelMention) {
              subBuilder.MergeFrom(ChannelMention);
            }
            input.ReadMessage(subBuilder);
            ChannelMention = subBuilder;
            break;
          }
          case 106: {
            global::Harmony.Chat.V1.Format.Types.GuildMention subBuilder = new global::Harmony.Chat.V1.Format.Types.GuildMention();
            if (formatCase_ == FormatOneofCase.GuildMention) {
              subBuilder.MergeFrom(GuildMention);
            }
            input.ReadMessage(subBuilder);
            GuildMention = subBuilder;
            break;
          }
          case 114: {
            global::Harmony.Chat.V1.Format.Types.Emoji subBuilder = new global::Harmony.Chat.V1.Format.Types.Emoji();
            if (formatCase_ == FormatOneofCase.Emoji) {
              subBuilder.MergeFrom(Emoji);
            }
            input.ReadMessage(subBuilder);
            Emoji = subBuilder;
            break;
          }
          case 122: {
            global::Harmony.Chat.V1.Format.Types.Color subBuilder = new global::Harmony.Chat.V1.Format.Types.Color();
            if (formatCase_ == FormatOneofCase.Color) {
              subBuilder.MergeFrom(Color);
            }
            input.ReadMessage(subBuilder);
            Color = subBuilder;
            break;
          }
          case 130: {
            global::Harmony.Chat.V1.Format.Types.Localization subBuilder = new global::Harmony.Chat.V1.Format.Types.Localization();
            if (formatCase_ == FormatOneofCase.Localization) {
              subBuilder.MergeFrom(Localization);
            }
            input.ReadMessage(subBuilder);
            Localization = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Format message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Bold text
      /// </summary>
      public sealed partial class Bold : pb::IMessage<Bold>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Bold> _parser = new pb::MessageParser<Bold>(() => new Bold());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Bold> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Harmony.Chat.V1.Format.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Bold() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Bold(Bold other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Bold Clone() {
          return new Bold(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Bold);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Bold other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Bold other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Italic text
      /// </summary>
      public sealed partial class Italic : pb::IMessage<Italic>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Italic> _parser = new pb::MessageParser<Italic>(() => new Italic());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Italic> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Harmony.Chat.V1.Format.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Italic() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Italic(Italic other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Italic Clone() {
          return new Italic(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Italic);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Italic other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Italic other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Underlined text
      /// </summary>
      public sealed partial class Underline : pb::IMessage<Underline>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Underline> _parser = new pb::MessageParser<Underline>(() => new Underline());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Underline> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Harmony.Chat.V1.Format.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Underline() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Underline(Underline other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Underline Clone() {
          return new Underline(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Underline);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Underline other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Underline other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Monospace text
      /// </summary>
      public sealed partial class Monospace : pb::IMessage<Monospace>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Monospace> _parser = new pb::MessageParser<Monospace>(() => new Monospace());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Monospace> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Harmony.Chat.V1.Format.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Monospace() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Monospace(Monospace other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Monospace Clone() {
          return new Monospace(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Monospace);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Monospace other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Monospace other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Superscript text
      /// </summary>
      public sealed partial class Superscript : pb::IMessage<Superscript>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Superscript> _parser = new pb::MessageParser<Superscript>(() => new Superscript());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Superscript> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Harmony.Chat.V1.Format.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Superscript() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Superscript(Superscript other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Superscript Clone() {
          return new Superscript(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Superscript);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Superscript other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Superscript other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Subscript text
      /// </summary>
      public sealed partial class Subscript : pb::IMessage<Subscript>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Subscript> _parser = new pb::MessageParser<Subscript>(() => new Subscript());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Subscript> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Harmony.Chat.V1.Format.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Subscript() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Subscript(Subscript other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Subscript Clone() {
          return new Subscript(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Subscript);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Subscript other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Subscript other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      /// <summary>
      /// A larger codeblock, with a programming language specified
      /// Clients should ideally not bound the width of codeblock messages,
      /// possibly scrolling the codeblock horizontally separately from the
      /// rest of the message
      /// </summary>
      public sealed partial class CodeBlock : pb::IMessage<CodeBlock>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CodeBlock> _parser = new pb::MessageParser<CodeBlock>(() => new CodeBlock());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CodeBlock> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Harmony.Chat.V1.Format.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CodeBlock() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CodeBlock(CodeBlock other) : this() {
          language_ = other.language_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CodeBlock Clone() {
          return new CodeBlock(this);
        }

        /// <summary>Field number for the "language" field.</summary>
        public const int LanguageFieldNumber = 1;
        private string language_ = "";
        /// <summary>
        /// programming language of the code block
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Language {
          get { return language_; }
          set {
            language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CodeBlock);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CodeBlock other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Language != other.Language) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Language.Length != 0) hash ^= Language.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Language.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Language);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Language.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Language);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Language.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CodeBlock other) {
          if (other == null) {
            return;
          }
          if (other.Language.Length != 0) {
            Language = other.Language;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Language = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Language = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Mention of a user (on the current homeserver)
      /// </summary>
      public sealed partial class UserMention : pb::IMessage<UserMention>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<UserMention> _parser = new pb::MessageParser<UserMention>(() => new UserMention());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<UserMention> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Harmony.Chat.V1.Format.Descriptor.NestedTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UserMention() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UserMention(UserMention other) : this() {
          userId_ = other.userId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UserMention Clone() {
          return new UserMention(this);
        }

        /// <summary>Field number for the "user_id" field.</summary>
        public const int UserIdFieldNumber = 1;
        private ulong userId_;
        /// <summary>
        /// user_id of the user being mentioned
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong UserId {
          get { return userId_; }
          set {
            userId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as UserMention);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(UserMention other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (UserId != other.UserId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (UserId != 0UL) hash ^= UserId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (UserId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(UserId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (UserId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(UserId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (UserId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(UserMention other) {
          if (other == null) {
            return;
          }
          if (other.UserId != 0UL) {
            UserId = other.UserId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                UserId = input.ReadUInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                UserId = input.ReadUInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Mention of a role (on the current guild)
      /// </summary>
      public sealed partial class RoleMention : pb::IMessage<RoleMention>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RoleMention> _parser = new pb::MessageParser<RoleMention>(() => new RoleMention());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RoleMention> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Harmony.Chat.V1.Format.Descriptor.NestedTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RoleMention() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RoleMention(RoleMention other) : this() {
          roleId_ = other.roleId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RoleMention Clone() {
          return new RoleMention(this);
        }

        /// <summary>Field number for the "role_id" field.</summary>
        public const int RoleIdFieldNumber = 1;
        private ulong roleId_;
        /// <summary>
        /// the role being mentioned
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong RoleId {
          get { return roleId_; }
          set {
            roleId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RoleMention);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RoleMention other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (RoleId != other.RoleId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (RoleId != 0UL) hash ^= RoleId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (RoleId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(RoleId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (RoleId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(RoleId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (RoleId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RoleId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RoleMention other) {
          if (other == null) {
            return;
          }
          if (other.RoleId != 0UL) {
            RoleId = other.RoleId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                RoleId = input.ReadUInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                RoleId = input.ReadUInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Mention of a channel (on the current guild)
      /// </summary>
      public sealed partial class ChannelMention : pb::IMessage<ChannelMention>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ChannelMention> _parser = new pb::MessageParser<ChannelMention>(() => new ChannelMention());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ChannelMention> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Harmony.Chat.V1.Format.Descriptor.NestedTypes[9]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ChannelMention() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ChannelMention(ChannelMention other) : this() {
          channelId_ = other.channelId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ChannelMention Clone() {
          return new ChannelMention(this);
        }

        /// <summary>Field number for the "channel_id" field.</summary>
        public const int ChannelIdFieldNumber = 1;
        private ulong channelId_;
        /// <summary>
        /// the channel being mentioned
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong ChannelId {
          get { return channelId_; }
          set {
            channelId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ChannelMention);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ChannelMention other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ChannelId != other.ChannelId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ChannelId != 0UL) hash ^= ChannelId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ChannelId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(ChannelId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ChannelId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(ChannelId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ChannelId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ChannelId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ChannelMention other) {
          if (other == null) {
            return;
          }
          if (other.ChannelId != 0UL) {
            ChannelId = other.ChannelId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ChannelId = input.ReadUInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ChannelId = input.ReadUInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Mention of a guild
      /// </summary>
      public sealed partial class GuildMention : pb::IMessage<GuildMention>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<GuildMention> _parser = new pb::MessageParser<GuildMention>(() => new GuildMention());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<GuildMention> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Harmony.Chat.V1.Format.Descriptor.NestedTypes[10]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GuildMention() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GuildMention(GuildMention other) : this() {
          guildId_ = other.guildId_;
          homeserver_ = other.homeserver_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GuildMention Clone() {
          return new GuildMention(this);
        }

        /// <summary>Field number for the "guild_id" field.</summary>
        public const int GuildIdFieldNumber = 1;
        private ulong guildId_;
        /// <summary>
        /// the guild being mentioned
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong GuildId {
          get { return guildId_; }
          set {
            guildId_ = value;
          }
        }

        /// <summary>Field number for the "homeserver" field.</summary>
        public const int HomeserverFieldNumber = 2;
        private string homeserver_ = "";
        /// <summary>
        /// which homeserver it belongs to
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Homeserver {
          get { return homeserver_; }
          set {
            homeserver_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as GuildMention);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(GuildMention other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (GuildId != other.GuildId) return false;
          if (Homeserver != other.Homeserver) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (GuildId != 0UL) hash ^= GuildId.GetHashCode();
          if (Homeserver.Length != 0) hash ^= Homeserver.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (GuildId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(GuildId);
          }
          if (Homeserver.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Homeserver);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (GuildId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(GuildId);
          }
          if (Homeserver.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Homeserver);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (GuildId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GuildId);
          }
          if (Homeserver.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Homeserver);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(GuildMention other) {
          if (other == null) {
            return;
          }
          if (other.GuildId != 0UL) {
            GuildId = other.GuildId;
          }
          if (other.Homeserver.Length != 0) {
            Homeserver = other.Homeserver;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                GuildId = input.ReadUInt64();
                break;
              }
              case 18: {
                Homeserver = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                GuildId = input.ReadUInt64();
                break;
              }
              case 18: {
                Homeserver = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// An emoji
      /// </summary>
      public sealed partial class Emoji : pb::IMessage<Emoji>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Emoji> _parser = new pb::MessageParser<Emoji>(() => new Emoji());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Emoji> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Harmony.Chat.V1.Format.Descriptor.NestedTypes[11]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Emoji() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Emoji(Emoji other) : this() {
          imageHmc_ = other.imageHmc_;
          packId_ = other.packId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Emoji Clone() {
          return new Emoji(this);
        }

        /// <summary>Field number for the "image_hmc" field.</summary>
        public const int ImageHmcFieldNumber = 1;
        private string imageHmc_ = "";
        /// <summary>
        /// The HMC URL of the emoji
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ImageHmc {
          get { return imageHmc_; }
          set {
            imageHmc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "pack_id" field.</summary>
        public const int PackIdFieldNumber = 2;
        private ulong packId_;
        /// <summary>
        /// The ID of the emoji pack the emoji is from
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong PackId {
          get { return packId_; }
          set {
            packId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Emoji);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Emoji other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ImageHmc != other.ImageHmc) return false;
          if (PackId != other.PackId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ImageHmc.Length != 0) hash ^= ImageHmc.GetHashCode();
          if (PackId != 0UL) hash ^= PackId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ImageHmc.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(ImageHmc);
          }
          if (PackId != 0UL) {
            output.WriteRawTag(16);
            output.WriteUInt64(PackId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ImageHmc.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(ImageHmc);
          }
          if (PackId != 0UL) {
            output.WriteRawTag(16);
            output.WriteUInt64(PackId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ImageHmc.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageHmc);
          }
          if (PackId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PackId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Emoji other) {
          if (other == null) {
            return;
          }
          if (other.ImageHmc.Length != 0) {
            ImageHmc = other.ImageHmc;
          }
          if (other.PackId != 0UL) {
            PackId = other.PackId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                ImageHmc = input.ReadString();
                break;
              }
              case 16: {
                PackId = input.ReadUInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                ImageHmc = input.ReadString();
                break;
              }
              case 16: {
                PackId = input.ReadUInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Colour modification
      /// </summary>
      public sealed partial class Color : pb::IMessage<Color>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Color> _parser = new pb::MessageParser<Color>(() => new Color());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Color> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Harmony.Chat.V1.Format.Descriptor.NestedTypes[12]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Color() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Color(Color other) : this() {
          kind_ = other.kind_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Color Clone() {
          return new Color(this);
        }

        /// <summary>Field number for the "kind" field.</summary>
        public const int KindFieldNumber = 1;
        private global::Harmony.Chat.V1.Format.Types.Color.Types.Kind kind_ = global::Harmony.Chat.V1.Format.Types.Color.Types.Kind.DimUnspecified;
        /// <summary>
        /// The kind of colour modification to apply
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Harmony.Chat.V1.Format.Types.Color.Types.Kind Kind {
          get { return kind_; }
          set {
            kind_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Color);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Color other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Kind != other.Kind) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Kind != global::Harmony.Chat.V1.Format.Types.Color.Types.Kind.DimUnspecified) hash ^= Kind.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Kind != global::Harmony.Chat.V1.Format.Types.Color.Types.Kind.DimUnspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Kind);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Kind != global::Harmony.Chat.V1.Format.Types.Color.Types.Kind.DimUnspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Kind);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Kind != global::Harmony.Chat.V1.Format.Types.Color.Types.Kind.DimUnspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Kind);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Color other) {
          if (other == null) {
            return;
          }
          if (other.Kind != global::Harmony.Chat.V1.Format.Types.Color.Types.Kind.DimUnspecified) {
            Kind = other.Kind;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Kind = (global::Harmony.Chat.V1.Format.Types.Color.Types.Kind) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Kind = (global::Harmony.Chat.V1.Format.Types.Color.Types.Kind) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Color message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// The kind of colour modification to apply
          /// </summary>
          public enum Kind {
            /// <summary>
            /// Dimmed colour
            /// </summary>
            [pbr::OriginalName("KIND_DIM_UNSPECIFIED")] DimUnspecified = 0,
            /// <summary>
            /// Brightened colour
            /// </summary>
            [pbr::OriginalName("KIND_BRIGHT")] Bright = 1,
            /// <summary>
            /// Negative colour (usually red)
            /// </summary>
            [pbr::OriginalName("KIND_NEGATIVE")] Negative = 2,
            /// <summary>
            /// Positive colour (usually green)
            /// </summary>
            [pbr::OriginalName("KIND_POSITIVE")] Positive = 3,
            /// <summary>
            /// Informational colour (usually blue)
            /// </summary>
            [pbr::OriginalName("KIND_INFO")] Info = 4,
            /// <summary>
            /// Warning colour (usually yellow-orange)
            /// </summary>
            [pbr::OriginalName("KIND_WARNING")] Warning = 5,
          }

        }
        #endregion

      }

      /// <summary>
      /// Replace a part of the text with the text matching the i18n code.
      /// If i18n code was not found, keep the original text.
      /// </summary>
      public sealed partial class Localization : pb::IMessage<Localization>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Localization> _parser = new pb::MessageParser<Localization>(() => new Localization());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Localization> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Harmony.Chat.V1.Format.Descriptor.NestedTypes[13]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Localization() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Localization(Localization other) : this() {
          i18NCode_ = other.i18NCode_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Localization Clone() {
          return new Localization(this);
        }

        /// <summary>Field number for the "i18n_code" field.</summary>
        public const int I18NCodeFieldNumber = 1;
        private string i18NCode_ = "";
        /// <summary>
        /// i18n code for the text.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string I18NCode {
          get { return i18NCode_; }
          set {
            i18NCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Localization);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Localization other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (I18NCode != other.I18NCode) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (I18NCode.Length != 0) hash ^= I18NCode.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (I18NCode.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(I18NCode);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (I18NCode.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(I18NCode);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (I18NCode.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(I18NCode);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Localization other) {
          if (other == null) {
            return;
          }
          if (other.I18NCode.Length != 0) {
            I18NCode = other.I18NCode;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                I18NCode = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                I18NCode = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Formatted text
  /// </summary>
  public sealed partial class FormattedText : pb::IMessage<FormattedText>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FormattedText> _parser = new pb::MessageParser<FormattedText>(() => new FormattedText());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FormattedText> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FormattedText() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FormattedText(FormattedText other) : this() {
      text_ = other.text_;
      format_ = other.format_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FormattedText Clone() {
      return new FormattedText(this);
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 1;
    private string text_ = "";
    /// <summary>
    /// The textual content of a message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "format" field.</summary>
    public const int FormatFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Harmony.Chat.V1.Format> _repeated_format_codec
        = pb::FieldCodec.ForMessage(18, global::Harmony.Chat.V1.Format.Parser);
    private readonly pbc::RepeatedField<global::Harmony.Chat.V1.Format> format_ = new pbc::RepeatedField<global::Harmony.Chat.V1.Format>();
    /// <summary>
    /// The formats for a message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Harmony.Chat.V1.Format> Format {
      get { return format_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FormattedText);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FormattedText other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Text != other.Text) return false;
      if(!format_.Equals(other.format_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      hash ^= format_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      format_.WriteTo(output, _repeated_format_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      format_.WriteTo(ref output, _repeated_format_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      size += format_.CalculateSize(_repeated_format_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FormattedText other) {
      if (other == null) {
        return;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      format_.Add(other.format_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
          case 18: {
            format_.AddEntriesFrom(input, _repeated_format_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
          case 18: {
            format_.AddEntriesFrom(ref input, _repeated_format_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Object representing a message without the ID part.
  /// </summary>
  public sealed partial class Message : pb::IMessage<Message>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Message> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message(Message other) : this() {
      _hasBits0 = other._hasBits0;
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      overrides_ = other.overrides_ != null ? other.overrides_.Clone() : null;
      authorId_ = other.authorId_;
      createdAt_ = other.createdAt_;
      editedAt_ = other.editedAt_;
      inReplyTo_ = other.inReplyTo_;
      content_ = other.content_ != null ? other.content_.Clone() : null;
      reactions_ = other.reactions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message Clone() {
      return new Message(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::Harmony.Harmonytypes.V1.Metadata metadata_;
    /// <summary>
    /// Metadata of this message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Harmonytypes.V1.Metadata Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "overrides" field.</summary>
    public const int OverridesFieldNumber = 2;
    private global::Harmony.Chat.V1.Overrides overrides_;
    /// <summary>
    /// Overrides of this message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Overrides Overrides {
      get { return overrides_; }
      set {
        overrides_ = value;
      }
    }

    /// <summary>Field number for the "author_id" field.</summary>
    public const int AuthorIdFieldNumber = 3;
    private ulong authorId_;
    /// <summary>
    /// User ID of the user who sent this message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AuthorId {
      get { return authorId_; }
      set {
        authorId_ = value;
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 4;
    private ulong createdAt_;
    /// <summary>
    /// When this message was created, in miliseconds since unix epoch
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    /// <summary>Field number for the "edited_at" field.</summary>
    public const int EditedAtFieldNumber = 5;
    private ulong editedAt_;
    /// <summary>
    /// The most recent time this message was edited, in milliseconds since unix epoch
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong EditedAt {
      get { if ((_hasBits0 & 1) != 0) { return editedAt_; } else { return 0UL; } }
      set {
        _hasBits0 |= 1;
        editedAt_ = value;
      }
    }
    /// <summary>Gets whether the "edited_at" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEditedAt {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "edited_at" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEditedAt() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "in_reply_to" field.</summary>
    public const int InReplyToFieldNumber = 6;
    private ulong inReplyTo_;
    /// <summary>
    /// The message this message is a reply to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong InReplyTo {
      get { if ((_hasBits0 & 2) != 0) { return inReplyTo_; } else { return 0UL; } }
      set {
        _hasBits0 |= 2;
        inReplyTo_ = value;
      }
    }
    /// <summary>Gets whether the "in_reply_to" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInReplyTo {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "in_reply_to" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInReplyTo() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 7;
    private global::Harmony.Chat.V1.Content content_;
    /// <summary>
    /// The content of the message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Content Content {
      get { return content_; }
      set {
        content_ = value;
      }
    }

    /// <summary>Field number for the "reactions" field.</summary>
    public const int ReactionsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Harmony.Chat.V1.Reaction> _repeated_reactions_codec
        = pb::FieldCodec.ForMessage(66, global::Harmony.Chat.V1.Reaction.Parser);
    private readonly pbc::RepeatedField<global::Harmony.Chat.V1.Reaction> reactions_ = new pbc::RepeatedField<global::Harmony.Chat.V1.Reaction>();
    /// <summary>
    /// The reactions of the message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Harmony.Chat.V1.Reaction> Reactions {
      get { return reactions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Message);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Message other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Overrides, other.Overrides)) return false;
      if (AuthorId != other.AuthorId) return false;
      if (CreatedAt != other.CreatedAt) return false;
      if (EditedAt != other.EditedAt) return false;
      if (InReplyTo != other.InReplyTo) return false;
      if (!object.Equals(Content, other.Content)) return false;
      if(!reactions_.Equals(other.reactions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (overrides_ != null) hash ^= Overrides.GetHashCode();
      if (AuthorId != 0UL) hash ^= AuthorId.GetHashCode();
      if (CreatedAt != 0UL) hash ^= CreatedAt.GetHashCode();
      if (HasEditedAt) hash ^= EditedAt.GetHashCode();
      if (HasInReplyTo) hash ^= InReplyTo.GetHashCode();
      if (content_ != null) hash ^= Content.GetHashCode();
      hash ^= reactions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (overrides_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Overrides);
      }
      if (AuthorId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(AuthorId);
      }
      if (CreatedAt != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(CreatedAt);
      }
      if (HasEditedAt) {
        output.WriteRawTag(40);
        output.WriteUInt64(EditedAt);
      }
      if (HasInReplyTo) {
        output.WriteRawTag(48);
        output.WriteUInt64(InReplyTo);
      }
      if (content_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Content);
      }
      reactions_.WriteTo(output, _repeated_reactions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (overrides_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Overrides);
      }
      if (AuthorId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(AuthorId);
      }
      if (CreatedAt != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(CreatedAt);
      }
      if (HasEditedAt) {
        output.WriteRawTag(40);
        output.WriteUInt64(EditedAt);
      }
      if (HasInReplyTo) {
        output.WriteRawTag(48);
        output.WriteUInt64(InReplyTo);
      }
      if (content_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Content);
      }
      reactions_.WriteTo(ref output, _repeated_reactions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (overrides_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Overrides);
      }
      if (AuthorId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AuthorId);
      }
      if (CreatedAt != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CreatedAt);
      }
      if (HasEditedAt) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EditedAt);
      }
      if (HasInReplyTo) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(InReplyTo);
      }
      if (content_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Content);
      }
      size += reactions_.CalculateSize(_repeated_reactions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Message other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::Harmony.Harmonytypes.V1.Metadata();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.overrides_ != null) {
        if (overrides_ == null) {
          Overrides = new global::Harmony.Chat.V1.Overrides();
        }
        Overrides.MergeFrom(other.Overrides);
      }
      if (other.AuthorId != 0UL) {
        AuthorId = other.AuthorId;
      }
      if (other.CreatedAt != 0UL) {
        CreatedAt = other.CreatedAt;
      }
      if (other.HasEditedAt) {
        EditedAt = other.EditedAt;
      }
      if (other.HasInReplyTo) {
        InReplyTo = other.InReplyTo;
      }
      if (other.content_ != null) {
        if (content_ == null) {
          Content = new global::Harmony.Chat.V1.Content();
        }
        Content.MergeFrom(other.Content);
      }
      reactions_.Add(other.reactions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::Harmony.Harmonytypes.V1.Metadata();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (overrides_ == null) {
              Overrides = new global::Harmony.Chat.V1.Overrides();
            }
            input.ReadMessage(Overrides);
            break;
          }
          case 24: {
            AuthorId = input.ReadUInt64();
            break;
          }
          case 32: {
            CreatedAt = input.ReadUInt64();
            break;
          }
          case 40: {
            EditedAt = input.ReadUInt64();
            break;
          }
          case 48: {
            InReplyTo = input.ReadUInt64();
            break;
          }
          case 58: {
            if (content_ == null) {
              Content = new global::Harmony.Chat.V1.Content();
            }
            input.ReadMessage(Content);
            break;
          }
          case 66: {
            reactions_.AddEntriesFrom(input, _repeated_reactions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::Harmony.Harmonytypes.V1.Metadata();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (overrides_ == null) {
              Overrides = new global::Harmony.Chat.V1.Overrides();
            }
            input.ReadMessage(Overrides);
            break;
          }
          case 24: {
            AuthorId = input.ReadUInt64();
            break;
          }
          case 32: {
            CreatedAt = input.ReadUInt64();
            break;
          }
          case 40: {
            EditedAt = input.ReadUInt64();
            break;
          }
          case 48: {
            InReplyTo = input.ReadUInt64();
            break;
          }
          case 58: {
            if (content_ == null) {
              Content = new global::Harmony.Chat.V1.Content();
            }
            input.ReadMessage(Content);
            break;
          }
          case 66: {
            reactions_.AddEntriesFrom(ref input, _repeated_reactions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Object representing a message with it's ID.
  /// </summary>
  public sealed partial class MessageWithId : pb::IMessage<MessageWithId>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MessageWithId> _parser = new pb::MessageParser<MessageWithId>(() => new MessageWithId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageWithId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageWithId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageWithId(MessageWithId other) : this() {
      messageId_ = other.messageId_;
      message_ = other.message_ != null ? other.message_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageWithId Clone() {
      return new MessageWithId(this);
    }

    /// <summary>Field number for the "message_id" field.</summary>
    public const int MessageIdFieldNumber = 1;
    private ulong messageId_;
    /// <summary>
    /// ID of the message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MessageId {
      get { return messageId_; }
      set {
        messageId_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private global::Harmony.Chat.V1.Message message_;
    /// <summary>
    /// The message data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Message Message {
      get { return message_; }
      set {
        message_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageWithId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageWithId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MessageId != other.MessageId) return false;
      if (!object.Equals(Message, other.Message)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MessageId != 0UL) hash ^= MessageId.GetHashCode();
      if (message_ != null) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MessageId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(MessageId);
      }
      if (message_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MessageId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(MessageId);
      }
      if (message_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MessageId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MessageId);
      }
      if (message_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageWithId other) {
      if (other == null) {
        return;
      }
      if (other.MessageId != 0UL) {
        MessageId = other.MessageId;
      }
      if (other.message_ != null) {
        if (message_ == null) {
          Message = new global::Harmony.Chat.V1.Message();
        }
        Message.MergeFrom(other.Message);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MessageId = input.ReadUInt64();
            break;
          }
          case 18: {
            if (message_ == null) {
              Message = new global::Harmony.Chat.V1.Message();
            }
            input.ReadMessage(Message);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MessageId = input.ReadUInt64();
            break;
          }
          case 18: {
            if (message_ == null) {
              Message = new global::Harmony.Chat.V1.Message();
            }
            input.ReadMessage(Message);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used in the `GetChannelMessages` endpoint.
  /// </summary>
  public sealed partial class GetChannelMessagesRequest : pb::IMessage<GetChannelMessagesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetChannelMessagesRequest> _parser = new pb::MessageParser<GetChannelMessagesRequest>(() => new GetChannelMessagesRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetChannelMessagesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetChannelMessagesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetChannelMessagesRequest(GetChannelMessagesRequest other) : this() {
      _hasBits0 = other._hasBits0;
      guildId_ = other.guildId_;
      channelId_ = other.channelId_;
      messageId_ = other.messageId_;
      direction_ = other.direction_;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetChannelMessagesRequest Clone() {
      return new GetChannelMessagesRequest(this);
    }

    /// <summary>Field number for the "guild_id" field.</summary>
    public const int GuildIdFieldNumber = 1;
    private ulong guildId_;
    /// <summary>
    /// Guild ID of the guild that has the channel.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong GuildId {
      get { return guildId_; }
      set {
        guildId_ = value;
      }
    }

    /// <summary>Field number for the "channel_id" field.</summary>
    public const int ChannelIdFieldNumber = 2;
    private ulong channelId_;
    /// <summary>
    /// Channel ID of the channel to get messages from.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ChannelId {
      get { return channelId_; }
      set {
        channelId_ = value;
      }
    }

    /// <summary>Field number for the "message_id" field.</summary>
    public const int MessageIdFieldNumber = 3;
    private ulong messageId_;
    /// <summary>
    /// The ID of the message that will be used as an "anchor" point to figure out
    /// where to get the messages.
    /// If not specified, the `direction` will be ignored and the newest messages
    /// will be returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MessageId {
      get { if ((_hasBits0 & 1) != 0) { return messageId_; } else { return 0UL; } }
      set {
        _hasBits0 |= 1;
        messageId_ = value;
      }
    }
    /// <summary>Gets whether the "message_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessageId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "message_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessageId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 4;
    private global::Harmony.Chat.V1.GetChannelMessagesRequest.Types.Direction direction_;
    /// <summary>
    /// On which direction to get the messages.
    ///
    /// - By default, it is "before", which means you will get messages before the
    /// `message_id` message.
    /// - If it is "around", you will get the messages around the `message_id`
    /// message. This will include the `message_id` message itself, as the middle
    /// item of the list returned.
    /// - If it is "after", you will get the messages after the `message_id`
    /// message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.GetChannelMessagesRequest.Types.Direction Direction {
      get { if ((_hasBits0 & 2) != 0) { return direction_; } else { return global::Harmony.Chat.V1.GetChannelMessagesRequest.Types.Direction.BeforeUnspecified; } }
      set {
        _hasBits0 |= 2;
        direction_ = value;
      }
    }
    /// <summary>Gets whether the "direction" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDirection {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "direction" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDirection() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 5;
    private uint count_;
    /// <summary>
    /// How many messages to get.
    ///
    /// - If `0`, a recommended message count to return is 25. If the direction is
    /// "around", the recommended value is 12.
    /// - If the direction to get the messages is "around", this count will not be
    /// the *total* count of messages to return, but instead the count of messages
    /// to return *for each direction*, before and after.
    /// - Servers should enforce their own maximum limit, and clamp this value to
    /// the limit.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Count {
      get { if ((_hasBits0 & 4) != 0) { return count_; } else { return 0; } }
      set {
        _hasBits0 |= 4;
        count_ = value;
      }
    }
    /// <summary>Gets whether the "count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCount {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCount() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetChannelMessagesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetChannelMessagesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GuildId != other.GuildId) return false;
      if (ChannelId != other.ChannelId) return false;
      if (MessageId != other.MessageId) return false;
      if (Direction != other.Direction) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GuildId != 0UL) hash ^= GuildId.GetHashCode();
      if (ChannelId != 0UL) hash ^= ChannelId.GetHashCode();
      if (HasMessageId) hash ^= MessageId.GetHashCode();
      if (HasDirection) hash ^= Direction.GetHashCode();
      if (HasCount) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GuildId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(GuildId);
      }
      if (ChannelId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ChannelId);
      }
      if (HasMessageId) {
        output.WriteRawTag(24);
        output.WriteUInt64(MessageId);
      }
      if (HasDirection) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Direction);
      }
      if (HasCount) {
        output.WriteRawTag(40);
        output.WriteUInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GuildId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(GuildId);
      }
      if (ChannelId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ChannelId);
      }
      if (HasMessageId) {
        output.WriteRawTag(24);
        output.WriteUInt64(MessageId);
      }
      if (HasDirection) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Direction);
      }
      if (HasCount) {
        output.WriteRawTag(40);
        output.WriteUInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GuildId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GuildId);
      }
      if (ChannelId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ChannelId);
      }
      if (HasMessageId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MessageId);
      }
      if (HasDirection) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Direction);
      }
      if (HasCount) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetChannelMessagesRequest other) {
      if (other == null) {
        return;
      }
      if (other.GuildId != 0UL) {
        GuildId = other.GuildId;
      }
      if (other.ChannelId != 0UL) {
        ChannelId = other.ChannelId;
      }
      if (other.HasMessageId) {
        MessageId = other.MessageId;
      }
      if (other.HasDirection) {
        Direction = other.Direction;
      }
      if (other.HasCount) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GuildId = input.ReadUInt64();
            break;
          }
          case 16: {
            ChannelId = input.ReadUInt64();
            break;
          }
          case 24: {
            MessageId = input.ReadUInt64();
            break;
          }
          case 32: {
            Direction = (global::Harmony.Chat.V1.GetChannelMessagesRequest.Types.Direction) input.ReadEnum();
            break;
          }
          case 40: {
            Count = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GuildId = input.ReadUInt64();
            break;
          }
          case 16: {
            ChannelId = input.ReadUInt64();
            break;
          }
          case 24: {
            MessageId = input.ReadUInt64();
            break;
          }
          case 32: {
            Direction = (global::Harmony.Chat.V1.GetChannelMessagesRequest.Types.Direction) input.ReadEnum();
            break;
          }
          case 40: {
            Count = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the GetChannelMessagesRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The direction relative to the `message_id` message to get messages from.
      /// </summary>
      public enum Direction {
        /// <summary>
        /// Get messages before the anchor.
        /// </summary>
        [pbr::OriginalName("DIRECTION_BEFORE_UNSPECIFIED")] BeforeUnspecified = 0,
        /// <summary>
        /// Get messages around the anchor, including the anchor.
        /// </summary>
        [pbr::OriginalName("DIRECTION_AROUND")] Around = 1,
        /// <summary>
        /// Get messages after the anchor.
        /// </summary>
        [pbr::OriginalName("DIRECTION_AFTER")] After = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// Used in the `GetChannelMessages` endpoint.
  /// </summary>
  public sealed partial class GetChannelMessagesResponse : pb::IMessage<GetChannelMessagesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetChannelMessagesResponse> _parser = new pb::MessageParser<GetChannelMessagesResponse>(() => new GetChannelMessagesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetChannelMessagesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetChannelMessagesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetChannelMessagesResponse(GetChannelMessagesResponse other) : this() {
      reachedTop_ = other.reachedTop_;
      reachedBottom_ = other.reachedBottom_;
      messages_ = other.messages_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetChannelMessagesResponse Clone() {
      return new GetChannelMessagesResponse(this);
    }

    /// <summary>Field number for the "reached_top" field.</summary>
    public const int ReachedTopFieldNumber = 1;
    private bool reachedTop_;
    /// <summary>
    /// Has reached the top (first message) of the message history.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ReachedTop {
      get { return reachedTop_; }
      set {
        reachedTop_ = value;
      }
    }

    /// <summary>Field number for the "reached_bottom" field.</summary>
    public const int ReachedBottomFieldNumber = 2;
    private bool reachedBottom_;
    /// <summary>
    /// Has reached the bottom (last message) of the message history.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ReachedBottom {
      get { return reachedBottom_; }
      set {
        reachedBottom_ = value;
      }
    }

    /// <summary>Field number for the "messages" field.</summary>
    public const int MessagesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Harmony.Chat.V1.MessageWithId> _repeated_messages_codec
        = pb::FieldCodec.ForMessage(26, global::Harmony.Chat.V1.MessageWithId.Parser);
    private readonly pbc::RepeatedField<global::Harmony.Chat.V1.MessageWithId> messages_ = new pbc::RepeatedField<global::Harmony.Chat.V1.MessageWithId>();
    /// <summary>
    /// The messages requested.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Harmony.Chat.V1.MessageWithId> Messages {
      get { return messages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetChannelMessagesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetChannelMessagesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReachedTop != other.ReachedTop) return false;
      if (ReachedBottom != other.ReachedBottom) return false;
      if(!messages_.Equals(other.messages_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReachedTop != false) hash ^= ReachedTop.GetHashCode();
      if (ReachedBottom != false) hash ^= ReachedBottom.GetHashCode();
      hash ^= messages_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ReachedTop != false) {
        output.WriteRawTag(8);
        output.WriteBool(ReachedTop);
      }
      if (ReachedBottom != false) {
        output.WriteRawTag(16);
        output.WriteBool(ReachedBottom);
      }
      messages_.WriteTo(output, _repeated_messages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ReachedTop != false) {
        output.WriteRawTag(8);
        output.WriteBool(ReachedTop);
      }
      if (ReachedBottom != false) {
        output.WriteRawTag(16);
        output.WriteBool(ReachedBottom);
      }
      messages_.WriteTo(ref output, _repeated_messages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReachedTop != false) {
        size += 1 + 1;
      }
      if (ReachedBottom != false) {
        size += 1 + 1;
      }
      size += messages_.CalculateSize(_repeated_messages_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetChannelMessagesResponse other) {
      if (other == null) {
        return;
      }
      if (other.ReachedTop != false) {
        ReachedTop = other.ReachedTop;
      }
      if (other.ReachedBottom != false) {
        ReachedBottom = other.ReachedBottom;
      }
      messages_.Add(other.messages_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReachedTop = input.ReadBool();
            break;
          }
          case 16: {
            ReachedBottom = input.ReadBool();
            break;
          }
          case 26: {
            messages_.AddEntriesFrom(input, _repeated_messages_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ReachedTop = input.ReadBool();
            break;
          }
          case 16: {
            ReachedBottom = input.ReadBool();
            break;
          }
          case 26: {
            messages_.AddEntriesFrom(ref input, _repeated_messages_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used in the `GetMessage` endpoint.
  /// </summary>
  public sealed partial class GetMessageRequest : pb::IMessage<GetMessageRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetMessageRequest> _parser = new pb::MessageParser<GetMessageRequest>(() => new GetMessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMessageRequest(GetMessageRequest other) : this() {
      guildId_ = other.guildId_;
      channelId_ = other.channelId_;
      messageId_ = other.messageId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMessageRequest Clone() {
      return new GetMessageRequest(this);
    }

    /// <summary>Field number for the "guild_id" field.</summary>
    public const int GuildIdFieldNumber = 1;
    private ulong guildId_;
    /// <summary>
    /// Guild ID of the guild where the channel is.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong GuildId {
      get { return guildId_; }
      set {
        guildId_ = value;
      }
    }

    /// <summary>Field number for the "channel_id" field.</summary>
    public const int ChannelIdFieldNumber = 2;
    private ulong channelId_;
    /// <summary>
    /// Channel ID of the channel where the message is.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ChannelId {
      get { return channelId_; }
      set {
        channelId_ = value;
      }
    }

    /// <summary>Field number for the "message_id" field.</summary>
    public const int MessageIdFieldNumber = 3;
    private ulong messageId_;
    /// <summary>
    /// Message ID of the message you want to get.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MessageId {
      get { return messageId_; }
      set {
        messageId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GuildId != other.GuildId) return false;
      if (ChannelId != other.ChannelId) return false;
      if (MessageId != other.MessageId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GuildId != 0UL) hash ^= GuildId.GetHashCode();
      if (ChannelId != 0UL) hash ^= ChannelId.GetHashCode();
      if (MessageId != 0UL) hash ^= MessageId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GuildId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(GuildId);
      }
      if (ChannelId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ChannelId);
      }
      if (MessageId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(MessageId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GuildId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(GuildId);
      }
      if (ChannelId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ChannelId);
      }
      if (MessageId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(MessageId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GuildId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GuildId);
      }
      if (ChannelId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ChannelId);
      }
      if (MessageId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MessageId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.GuildId != 0UL) {
        GuildId = other.GuildId;
      }
      if (other.ChannelId != 0UL) {
        ChannelId = other.ChannelId;
      }
      if (other.MessageId != 0UL) {
        MessageId = other.MessageId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GuildId = input.ReadUInt64();
            break;
          }
          case 16: {
            ChannelId = input.ReadUInt64();
            break;
          }
          case 24: {
            MessageId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GuildId = input.ReadUInt64();
            break;
          }
          case 16: {
            ChannelId = input.ReadUInt64();
            break;
          }
          case 24: {
            MessageId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used in the `GetMessage` endpoint.
  /// </summary>
  public sealed partial class GetMessageResponse : pb::IMessage<GetMessageResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetMessageResponse> _parser = new pb::MessageParser<GetMessageResponse>(() => new GetMessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMessageResponse(GetMessageResponse other) : this() {
      message_ = other.message_ != null ? other.message_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMessageResponse Clone() {
      return new GetMessageResponse(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private global::Harmony.Chat.V1.Message message_;
    /// <summary>
    /// The message requested.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Message Message {
      get { return message_; }
      set {
        message_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Message, other.Message)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (message_ != null) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (message_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (message_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (message_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.message_ != null) {
        if (message_ == null) {
          Message = new global::Harmony.Chat.V1.Message();
        }
        Message.MergeFrom(other.Message);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (message_ == null) {
              Message = new global::Harmony.Chat.V1.Message();
            }
            input.ReadMessage(Message);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (message_ == null) {
              Message = new global::Harmony.Chat.V1.Message();
            }
            input.ReadMessage(Message);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used in the `DeleteMessage` endpoint.
  /// </summary>
  public sealed partial class DeleteMessageRequest : pb::IMessage<DeleteMessageRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteMessageRequest> _parser = new pb::MessageParser<DeleteMessageRequest>(() => new DeleteMessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteMessageRequest(DeleteMessageRequest other) : this() {
      guildId_ = other.guildId_;
      channelId_ = other.channelId_;
      messageId_ = other.messageId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteMessageRequest Clone() {
      return new DeleteMessageRequest(this);
    }

    /// <summary>Field number for the "guild_id" field.</summary>
    public const int GuildIdFieldNumber = 1;
    private ulong guildId_;
    /// <summary>
    /// Guild ID of the guild where the channel is.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong GuildId {
      get { return guildId_; }
      set {
        guildId_ = value;
      }
    }

    /// <summary>Field number for the "channel_id" field.</summary>
    public const int ChannelIdFieldNumber = 2;
    private ulong channelId_;
    /// <summary>
    /// Channel ID of the channel where the message is.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ChannelId {
      get { return channelId_; }
      set {
        channelId_ = value;
      }
    }

    /// <summary>Field number for the "message_id" field.</summary>
    public const int MessageIdFieldNumber = 3;
    private ulong messageId_;
    /// <summary>
    /// Message ID of the message you want to delete.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MessageId {
      get { return messageId_; }
      set {
        messageId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GuildId != other.GuildId) return false;
      if (ChannelId != other.ChannelId) return false;
      if (MessageId != other.MessageId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GuildId != 0UL) hash ^= GuildId.GetHashCode();
      if (ChannelId != 0UL) hash ^= ChannelId.GetHashCode();
      if (MessageId != 0UL) hash ^= MessageId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GuildId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(GuildId);
      }
      if (ChannelId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ChannelId);
      }
      if (MessageId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(MessageId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GuildId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(GuildId);
      }
      if (ChannelId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ChannelId);
      }
      if (MessageId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(MessageId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GuildId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GuildId);
      }
      if (ChannelId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ChannelId);
      }
      if (MessageId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MessageId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.GuildId != 0UL) {
        GuildId = other.GuildId;
      }
      if (other.ChannelId != 0UL) {
        ChannelId = other.ChannelId;
      }
      if (other.MessageId != 0UL) {
        MessageId = other.MessageId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GuildId = input.ReadUInt64();
            break;
          }
          case 16: {
            ChannelId = input.ReadUInt64();
            break;
          }
          case 24: {
            MessageId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GuildId = input.ReadUInt64();
            break;
          }
          case 16: {
            ChannelId = input.ReadUInt64();
            break;
          }
          case 24: {
            MessageId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used in the `DeleteMessage` endpoint.
  /// </summary>
  public sealed partial class DeleteMessageResponse : pb::IMessage<DeleteMessageResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteMessageResponse> _parser = new pb::MessageParser<DeleteMessageResponse>(() => new DeleteMessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteMessageResponse(DeleteMessageResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteMessageResponse Clone() {
      return new DeleteMessageResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteMessageResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used in the `TriggerAction` endpoint.
  /// </summary>
  public sealed partial class TriggerActionRequest : pb::IMessage<TriggerActionRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TriggerActionRequest> _parser = new pb::MessageParser<TriggerActionRequest>(() => new TriggerActionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TriggerActionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriggerActionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriggerActionRequest(TriggerActionRequest other) : this() {
      guildId_ = other.guildId_;
      channelId_ = other.channelId_;
      messageId_ = other.messageId_;
      payload_ = other.payload_ != null ? other.payload_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriggerActionRequest Clone() {
      return new TriggerActionRequest(this);
    }

    /// <summary>Field number for the "guild_id" field.</summary>
    public const int GuildIdFieldNumber = 1;
    private ulong guildId_;
    /// <summary>
    /// Guild ID of the guild where the channel is.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong GuildId {
      get { return guildId_; }
      set {
        guildId_ = value;
      }
    }

    /// <summary>Field number for the "channel_id" field.</summary>
    public const int ChannelIdFieldNumber = 2;
    private ulong channelId_;
    /// <summary>
    /// Channel ID of the channel where the message is.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ChannelId {
      get { return channelId_; }
      set {
        channelId_ = value;
      }
    }

    /// <summary>Field number for the "message_id" field.</summary>
    public const int MessageIdFieldNumber = 3;
    private ulong messageId_;
    /// <summary>
    /// Message ID of the message you want to trigger an action in.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MessageId {
      get { return messageId_; }
      set {
        messageId_ = value;
      }
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 4;
    private global::Harmony.Chat.V1.ActionPayload payload_;
    /// <summary>
    /// Payload of action data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.ActionPayload Payload {
      get { return payload_; }
      set {
        payload_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TriggerActionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TriggerActionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GuildId != other.GuildId) return false;
      if (ChannelId != other.ChannelId) return false;
      if (MessageId != other.MessageId) return false;
      if (!object.Equals(Payload, other.Payload)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GuildId != 0UL) hash ^= GuildId.GetHashCode();
      if (ChannelId != 0UL) hash ^= ChannelId.GetHashCode();
      if (MessageId != 0UL) hash ^= MessageId.GetHashCode();
      if (payload_ != null) hash ^= Payload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GuildId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(GuildId);
      }
      if (ChannelId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ChannelId);
      }
      if (MessageId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(MessageId);
      }
      if (payload_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GuildId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(GuildId);
      }
      if (ChannelId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ChannelId);
      }
      if (MessageId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(MessageId);
      }
      if (payload_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GuildId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GuildId);
      }
      if (ChannelId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ChannelId);
      }
      if (MessageId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MessageId);
      }
      if (payload_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Payload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TriggerActionRequest other) {
      if (other == null) {
        return;
      }
      if (other.GuildId != 0UL) {
        GuildId = other.GuildId;
      }
      if (other.ChannelId != 0UL) {
        ChannelId = other.ChannelId;
      }
      if (other.MessageId != 0UL) {
        MessageId = other.MessageId;
      }
      if (other.payload_ != null) {
        if (payload_ == null) {
          Payload = new global::Harmony.Chat.V1.ActionPayload();
        }
        Payload.MergeFrom(other.Payload);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GuildId = input.ReadUInt64();
            break;
          }
          case 16: {
            ChannelId = input.ReadUInt64();
            break;
          }
          case 24: {
            MessageId = input.ReadUInt64();
            break;
          }
          case 34: {
            if (payload_ == null) {
              Payload = new global::Harmony.Chat.V1.ActionPayload();
            }
            input.ReadMessage(Payload);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GuildId = input.ReadUInt64();
            break;
          }
          case 16: {
            ChannelId = input.ReadUInt64();
            break;
          }
          case 24: {
            MessageId = input.ReadUInt64();
            break;
          }
          case 34: {
            if (payload_ == null) {
              Payload = new global::Harmony.Chat.V1.ActionPayload();
            }
            input.ReadMessage(Payload);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used in the `TriggerAction` endpoint.
  /// </summary>
  public sealed partial class TriggerActionResponse : pb::IMessage<TriggerActionResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TriggerActionResponse> _parser = new pb::MessageParser<TriggerActionResponse>(() => new TriggerActionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TriggerActionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriggerActionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriggerActionResponse(TriggerActionResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriggerActionResponse Clone() {
      return new TriggerActionResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TriggerActionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TriggerActionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TriggerActionResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used in the `SendMessage` endpoint.
  /// </summary>
  public sealed partial class SendMessageRequest : pb::IMessage<SendMessageRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SendMessageRequest> _parser = new pb::MessageParser<SendMessageRequest>(() => new SendMessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMessageRequest(SendMessageRequest other) : this() {
      _hasBits0 = other._hasBits0;
      guildId_ = other.guildId_;
      channelId_ = other.channelId_;
      content_ = other.content_ != null ? other.content_.Clone() : null;
      echoId_ = other.echoId_;
      overrides_ = other.overrides_ != null ? other.overrides_.Clone() : null;
      inReplyTo_ = other.inReplyTo_;
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMessageRequest Clone() {
      return new SendMessageRequest(this);
    }

    /// <summary>Field number for the "guild_id" field.</summary>
    public const int GuildIdFieldNumber = 1;
    private ulong guildId_;
    /// <summary>
    /// Guild ID of the guild where the channel is.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong GuildId {
      get { return guildId_; }
      set {
        guildId_ = value;
      }
    }

    /// <summary>Field number for the "channel_id" field.</summary>
    public const int ChannelIdFieldNumber = 2;
    private ulong channelId_;
    /// <summary>
    /// Channel ID of the channel you want to send a message in.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ChannelId {
      get { return channelId_; }
      set {
        channelId_ = value;
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 3;
    private global::Harmony.Chat.V1.Content content_;
    /// <summary>
    /// Content of the new message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Content Content {
      get { return content_; }
      set {
        content_ = value;
      }
    }

    /// <summary>Field number for the "echo_id" field.</summary>
    public const int EchoIdFieldNumber = 4;
    private ulong echoId_;
    /// <summary>
    /// Echo ID of the new message. This can be used by clients to
    /// determine whether a message is sent.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong EchoId {
      get { if ((_hasBits0 & 1) != 0) { return echoId_; } else { return 0UL; } }
      set {
        _hasBits0 |= 1;
        echoId_ = value;
      }
    }
    /// <summary>Gets whether the "echo_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEchoId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "echo_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEchoId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "overrides" field.</summary>
    public const int OverridesFieldNumber = 6;
    private global::Harmony.Chat.V1.Overrides overrides_;
    /// <summary>
    /// The overrides of this new message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.Overrides Overrides {
      get { return overrides_; }
      set {
        overrides_ = value;
      }
    }

    /// <summary>Field number for the "in_reply_to" field.</summary>
    public const int InReplyToFieldNumber = 7;
    private ulong inReplyTo_;
    /// <summary>
    /// The message this new message is a reply to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong InReplyTo {
      get { if ((_hasBits0 & 2) != 0) { return inReplyTo_; } else { return 0UL; } }
      set {
        _hasBits0 |= 2;
        inReplyTo_ = value;
      }
    }
    /// <summary>Gets whether the "in_reply_to" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInReplyTo {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "in_reply_to" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInReplyTo() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 5;
    private global::Harmony.Harmonytypes.V1.Metadata metadata_;
    /// <summary>
    /// The metadata of this new message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Harmonytypes.V1.Metadata Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GuildId != other.GuildId) return false;
      if (ChannelId != other.ChannelId) return false;
      if (!object.Equals(Content, other.Content)) return false;
      if (EchoId != other.EchoId) return false;
      if (!object.Equals(Overrides, other.Overrides)) return false;
      if (InReplyTo != other.InReplyTo) return false;
      if (!object.Equals(Metadata, other.Metadata)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GuildId != 0UL) hash ^= GuildId.GetHashCode();
      if (ChannelId != 0UL) hash ^= ChannelId.GetHashCode();
      if (content_ != null) hash ^= Content.GetHashCode();
      if (HasEchoId) hash ^= EchoId.GetHashCode();
      if (overrides_ != null) hash ^= Overrides.GetHashCode();
      if (HasInReplyTo) hash ^= InReplyTo.GetHashCode();
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GuildId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(GuildId);
      }
      if (ChannelId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ChannelId);
      }
      if (content_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Content);
      }
      if (HasEchoId) {
        output.WriteRawTag(32);
        output.WriteUInt64(EchoId);
      }
      if (metadata_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Metadata);
      }
      if (overrides_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Overrides);
      }
      if (HasInReplyTo) {
        output.WriteRawTag(56);
        output.WriteUInt64(InReplyTo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GuildId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(GuildId);
      }
      if (ChannelId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ChannelId);
      }
      if (content_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Content);
      }
      if (HasEchoId) {
        output.WriteRawTag(32);
        output.WriteUInt64(EchoId);
      }
      if (metadata_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Metadata);
      }
      if (overrides_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Overrides);
      }
      if (HasInReplyTo) {
        output.WriteRawTag(56);
        output.WriteUInt64(InReplyTo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GuildId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GuildId);
      }
      if (ChannelId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ChannelId);
      }
      if (content_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Content);
      }
      if (HasEchoId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EchoId);
      }
      if (overrides_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Overrides);
      }
      if (HasInReplyTo) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(InReplyTo);
      }
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.GuildId != 0UL) {
        GuildId = other.GuildId;
      }
      if (other.ChannelId != 0UL) {
        ChannelId = other.ChannelId;
      }
      if (other.content_ != null) {
        if (content_ == null) {
          Content = new global::Harmony.Chat.V1.Content();
        }
        Content.MergeFrom(other.Content);
      }
      if (other.HasEchoId) {
        EchoId = other.EchoId;
      }
      if (other.overrides_ != null) {
        if (overrides_ == null) {
          Overrides = new global::Harmony.Chat.V1.Overrides();
        }
        Overrides.MergeFrom(other.Overrides);
      }
      if (other.HasInReplyTo) {
        InReplyTo = other.InReplyTo;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::Harmony.Harmonytypes.V1.Metadata();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GuildId = input.ReadUInt64();
            break;
          }
          case 16: {
            ChannelId = input.ReadUInt64();
            break;
          }
          case 26: {
            if (content_ == null) {
              Content = new global::Harmony.Chat.V1.Content();
            }
            input.ReadMessage(Content);
            break;
          }
          case 32: {
            EchoId = input.ReadUInt64();
            break;
          }
          case 42: {
            if (metadata_ == null) {
              Metadata = new global::Harmony.Harmonytypes.V1.Metadata();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 50: {
            if (overrides_ == null) {
              Overrides = new global::Harmony.Chat.V1.Overrides();
            }
            input.ReadMessage(Overrides);
            break;
          }
          case 56: {
            InReplyTo = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GuildId = input.ReadUInt64();
            break;
          }
          case 16: {
            ChannelId = input.ReadUInt64();
            break;
          }
          case 26: {
            if (content_ == null) {
              Content = new global::Harmony.Chat.V1.Content();
            }
            input.ReadMessage(Content);
            break;
          }
          case 32: {
            EchoId = input.ReadUInt64();
            break;
          }
          case 42: {
            if (metadata_ == null) {
              Metadata = new global::Harmony.Harmonytypes.V1.Metadata();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 50: {
            if (overrides_ == null) {
              Overrides = new global::Harmony.Chat.V1.Overrides();
            }
            input.ReadMessage(Overrides);
            break;
          }
          case 56: {
            InReplyTo = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used in the `SendMessage` endpoint.
  /// </summary>
  public sealed partial class SendMessageResponse : pb::IMessage<SendMessageResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SendMessageResponse> _parser = new pb::MessageParser<SendMessageResponse>(() => new SendMessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMessageResponse(SendMessageResponse other) : this() {
      messageId_ = other.messageId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMessageResponse Clone() {
      return new SendMessageResponse(this);
    }

    /// <summary>Field number for the "message_id" field.</summary>
    public const int MessageIdFieldNumber = 1;
    private ulong messageId_;
    /// <summary>
    /// Message ID of the message sent.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MessageId {
      get { return messageId_; }
      set {
        messageId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MessageId != other.MessageId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MessageId != 0UL) hash ^= MessageId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MessageId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(MessageId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MessageId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(MessageId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MessageId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MessageId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.MessageId != 0UL) {
        MessageId = other.MessageId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MessageId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MessageId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used in the `UpdateMessageText` endpoint.
  /// </summary>
  public sealed partial class UpdateMessageTextRequest : pb::IMessage<UpdateMessageTextRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateMessageTextRequest> _parser = new pb::MessageParser<UpdateMessageTextRequest>(() => new UpdateMessageTextRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateMessageTextRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMessageTextRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMessageTextRequest(UpdateMessageTextRequest other) : this() {
      guildId_ = other.guildId_;
      channelId_ = other.channelId_;
      messageId_ = other.messageId_;
      newContent_ = other.newContent_ != null ? other.newContent_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMessageTextRequest Clone() {
      return new UpdateMessageTextRequest(this);
    }

    /// <summary>Field number for the "guild_id" field.</summary>
    public const int GuildIdFieldNumber = 1;
    private ulong guildId_;
    /// <summary>
    /// Guild ID of the guild where the channel is.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong GuildId {
      get { return guildId_; }
      set {
        guildId_ = value;
      }
    }

    /// <summary>Field number for the "channel_id" field.</summary>
    public const int ChannelIdFieldNumber = 2;
    private ulong channelId_;
    /// <summary>
    /// Channel ID of the channel where the message is.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ChannelId {
      get { return channelId_; }
      set {
        channelId_ = value;
      }
    }

    /// <summary>Field number for the "message_id" field.</summary>
    public const int MessageIdFieldNumber = 3;
    private ulong messageId_;
    /// <summary>
    /// Message ID of the message you want to edit the text of.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MessageId {
      get { return messageId_; }
      set {
        messageId_ = value;
      }
    }

    /// <summary>Field number for the "new_content" field.</summary>
    public const int NewContentFieldNumber = 4;
    private global::Harmony.Chat.V1.FormattedText newContent_;
    /// <summary>
    /// New content for this message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Chat.V1.FormattedText NewContent {
      get { return newContent_; }
      set {
        newContent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateMessageTextRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateMessageTextRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GuildId != other.GuildId) return false;
      if (ChannelId != other.ChannelId) return false;
      if (MessageId != other.MessageId) return false;
      if (!object.Equals(NewContent, other.NewContent)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GuildId != 0UL) hash ^= GuildId.GetHashCode();
      if (ChannelId != 0UL) hash ^= ChannelId.GetHashCode();
      if (MessageId != 0UL) hash ^= MessageId.GetHashCode();
      if (newContent_ != null) hash ^= NewContent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GuildId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(GuildId);
      }
      if (ChannelId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ChannelId);
      }
      if (MessageId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(MessageId);
      }
      if (newContent_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(NewContent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GuildId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(GuildId);
      }
      if (ChannelId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ChannelId);
      }
      if (MessageId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(MessageId);
      }
      if (newContent_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(NewContent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GuildId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GuildId);
      }
      if (ChannelId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ChannelId);
      }
      if (MessageId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MessageId);
      }
      if (newContent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewContent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateMessageTextRequest other) {
      if (other == null) {
        return;
      }
      if (other.GuildId != 0UL) {
        GuildId = other.GuildId;
      }
      if (other.ChannelId != 0UL) {
        ChannelId = other.ChannelId;
      }
      if (other.MessageId != 0UL) {
        MessageId = other.MessageId;
      }
      if (other.newContent_ != null) {
        if (newContent_ == null) {
          NewContent = new global::Harmony.Chat.V1.FormattedText();
        }
        NewContent.MergeFrom(other.NewContent);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GuildId = input.ReadUInt64();
            break;
          }
          case 16: {
            ChannelId = input.ReadUInt64();
            break;
          }
          case 24: {
            MessageId = input.ReadUInt64();
            break;
          }
          case 34: {
            if (newContent_ == null) {
              NewContent = new global::Harmony.Chat.V1.FormattedText();
            }
            input.ReadMessage(NewContent);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GuildId = input.ReadUInt64();
            break;
          }
          case 16: {
            ChannelId = input.ReadUInt64();
            break;
          }
          case 24: {
            MessageId = input.ReadUInt64();
            break;
          }
          case 34: {
            if (newContent_ == null) {
              NewContent = new global::Harmony.Chat.V1.FormattedText();
            }
            input.ReadMessage(NewContent);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used in the `UpdateMessageText` endpoint.
  /// </summary>
  public sealed partial class UpdateMessageTextResponse : pb::IMessage<UpdateMessageTextResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateMessageTextResponse> _parser = new pb::MessageParser<UpdateMessageTextResponse>(() => new UpdateMessageTextResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateMessageTextResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMessageTextResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMessageTextResponse(UpdateMessageTextResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMessageTextResponse Clone() {
      return new UpdateMessageTextResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateMessageTextResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateMessageTextResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateMessageTextResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used in the `PinMessage` endpoint.
  /// </summary>
  public sealed partial class PinMessageRequest : pb::IMessage<PinMessageRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PinMessageRequest> _parser = new pb::MessageParser<PinMessageRequest>(() => new PinMessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PinMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PinMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PinMessageRequest(PinMessageRequest other) : this() {
      guildId_ = other.guildId_;
      channelId_ = other.channelId_;
      messageId_ = other.messageId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PinMessageRequest Clone() {
      return new PinMessageRequest(this);
    }

    /// <summary>Field number for the "guild_id" field.</summary>
    public const int GuildIdFieldNumber = 1;
    private ulong guildId_;
    /// <summary>
    /// Guild ID of the guild where the channel is.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong GuildId {
      get { return guildId_; }
      set {
        guildId_ = value;
      }
    }

    /// <summary>Field number for the "channel_id" field.</summary>
    public const int ChannelIdFieldNumber = 2;
    private ulong channelId_;
    /// <summary>
    /// Channel ID of the channel where the message is.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ChannelId {
      get { return channelId_; }
      set {
        channelId_ = value;
      }
    }

    /// <summary>Field number for the "message_id" field.</summary>
    public const int MessageIdFieldNumber = 3;
    private ulong messageId_;
    /// <summary>
    /// Message ID of the message we want to pin.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MessageId {
      get { return messageId_; }
      set {
        messageId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PinMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PinMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GuildId != other.GuildId) return false;
      if (ChannelId != other.ChannelId) return false;
      if (MessageId != other.MessageId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GuildId != 0UL) hash ^= GuildId.GetHashCode();
      if (ChannelId != 0UL) hash ^= ChannelId.GetHashCode();
      if (MessageId != 0UL) hash ^= MessageId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GuildId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(GuildId);
      }
      if (ChannelId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ChannelId);
      }
      if (MessageId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(MessageId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GuildId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(GuildId);
      }
      if (ChannelId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ChannelId);
      }
      if (MessageId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(MessageId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GuildId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GuildId);
      }
      if (ChannelId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ChannelId);
      }
      if (MessageId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MessageId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PinMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.GuildId != 0UL) {
        GuildId = other.GuildId;
      }
      if (other.ChannelId != 0UL) {
        ChannelId = other.ChannelId;
      }
      if (other.MessageId != 0UL) {
        MessageId = other.MessageId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GuildId = input.ReadUInt64();
            break;
          }
          case 16: {
            ChannelId = input.ReadUInt64();
            break;
          }
          case 24: {
            MessageId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GuildId = input.ReadUInt64();
            break;
          }
          case 16: {
            ChannelId = input.ReadUInt64();
            break;
          }
          case 24: {
            MessageId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used in the `UnpinMessage` endpoint.
  /// </summary>
  public sealed partial class PinMessageResponse : pb::IMessage<PinMessageResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PinMessageResponse> _parser = new pb::MessageParser<PinMessageResponse>(() => new PinMessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PinMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PinMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PinMessageResponse(PinMessageResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PinMessageResponse Clone() {
      return new PinMessageResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PinMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PinMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PinMessageResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used in the `UnpinMessage` endpoint.
  /// </summary>
  public sealed partial class UnpinMessageRequest : pb::IMessage<UnpinMessageRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnpinMessageRequest> _parser = new pb::MessageParser<UnpinMessageRequest>(() => new UnpinMessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnpinMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnpinMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnpinMessageRequest(UnpinMessageRequest other) : this() {
      guildId_ = other.guildId_;
      channelId_ = other.channelId_;
      messageId_ = other.messageId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnpinMessageRequest Clone() {
      return new UnpinMessageRequest(this);
    }

    /// <summary>Field number for the "guild_id" field.</summary>
    public const int GuildIdFieldNumber = 1;
    private ulong guildId_;
    /// <summary>
    /// Guild ID of the guild where the channel is.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong GuildId {
      get { return guildId_; }
      set {
        guildId_ = value;
      }
    }

    /// <summary>Field number for the "channel_id" field.</summary>
    public const int ChannelIdFieldNumber = 2;
    private ulong channelId_;
    /// <summary>
    /// Channel ID of the channel where the message is.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ChannelId {
      get { return channelId_; }
      set {
        channelId_ = value;
      }
    }

    /// <summary>Field number for the "message_id" field.</summary>
    public const int MessageIdFieldNumber = 3;
    private ulong messageId_;
    /// <summary>
    /// Message ID of the message we want to unpin.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MessageId {
      get { return messageId_; }
      set {
        messageId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnpinMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnpinMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GuildId != other.GuildId) return false;
      if (ChannelId != other.ChannelId) return false;
      if (MessageId != other.MessageId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GuildId != 0UL) hash ^= GuildId.GetHashCode();
      if (ChannelId != 0UL) hash ^= ChannelId.GetHashCode();
      if (MessageId != 0UL) hash ^= MessageId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GuildId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(GuildId);
      }
      if (ChannelId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ChannelId);
      }
      if (MessageId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(MessageId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GuildId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(GuildId);
      }
      if (ChannelId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ChannelId);
      }
      if (MessageId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(MessageId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GuildId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GuildId);
      }
      if (ChannelId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ChannelId);
      }
      if (MessageId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MessageId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnpinMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.GuildId != 0UL) {
        GuildId = other.GuildId;
      }
      if (other.ChannelId != 0UL) {
        ChannelId = other.ChannelId;
      }
      if (other.MessageId != 0UL) {
        MessageId = other.MessageId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GuildId = input.ReadUInt64();
            break;
          }
          case 16: {
            ChannelId = input.ReadUInt64();
            break;
          }
          case 24: {
            MessageId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GuildId = input.ReadUInt64();
            break;
          }
          case 16: {
            ChannelId = input.ReadUInt64();
            break;
          }
          case 24: {
            MessageId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used in the `UnpinMessage` endpoint.
  /// </summary>
  public sealed partial class UnpinMessageResponse : pb::IMessage<UnpinMessageResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnpinMessageResponse> _parser = new pb::MessageParser<UnpinMessageResponse>(() => new UnpinMessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnpinMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnpinMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnpinMessageResponse(UnpinMessageResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnpinMessageResponse Clone() {
      return new UnpinMessageResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnpinMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnpinMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnpinMessageResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used in the `GetPinnedMessages` endpoint.
  /// </summary>
  public sealed partial class GetPinnedMessagesRequest : pb::IMessage<GetPinnedMessagesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetPinnedMessagesRequest> _parser = new pb::MessageParser<GetPinnedMessagesRequest>(() => new GetPinnedMessagesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetPinnedMessagesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPinnedMessagesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPinnedMessagesRequest(GetPinnedMessagesRequest other) : this() {
      guildId_ = other.guildId_;
      channelId_ = other.channelId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPinnedMessagesRequest Clone() {
      return new GetPinnedMessagesRequest(this);
    }

    /// <summary>Field number for the "guild_id" field.</summary>
    public const int GuildIdFieldNumber = 1;
    private ulong guildId_;
    /// <summary>
    /// Guild ID of the guild where the channel is.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong GuildId {
      get { return guildId_; }
      set {
        guildId_ = value;
      }
    }

    /// <summary>Field number for the "channel_id" field.</summary>
    public const int ChannelIdFieldNumber = 2;
    private ulong channelId_;
    /// <summary>
    /// Channel ID of the channel we want to get pins of.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ChannelId {
      get { return channelId_; }
      set {
        channelId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetPinnedMessagesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetPinnedMessagesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GuildId != other.GuildId) return false;
      if (ChannelId != other.ChannelId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GuildId != 0UL) hash ^= GuildId.GetHashCode();
      if (ChannelId != 0UL) hash ^= ChannelId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GuildId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(GuildId);
      }
      if (ChannelId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ChannelId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GuildId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(GuildId);
      }
      if (ChannelId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ChannelId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GuildId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GuildId);
      }
      if (ChannelId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ChannelId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetPinnedMessagesRequest other) {
      if (other == null) {
        return;
      }
      if (other.GuildId != 0UL) {
        GuildId = other.GuildId;
      }
      if (other.ChannelId != 0UL) {
        ChannelId = other.ChannelId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GuildId = input.ReadUInt64();
            break;
          }
          case 16: {
            ChannelId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GuildId = input.ReadUInt64();
            break;
          }
          case 16: {
            ChannelId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used in the `GetPinnedMessages` endpoint.
  /// </summary>
  public sealed partial class GetPinnedMessagesResponse : pb::IMessage<GetPinnedMessagesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetPinnedMessagesResponse> _parser = new pb::MessageParser<GetPinnedMessagesResponse>(() => new GetPinnedMessagesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetPinnedMessagesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPinnedMessagesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPinnedMessagesResponse(GetPinnedMessagesResponse other) : this() {
      pinnedMessageIds_ = other.pinnedMessageIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPinnedMessagesResponse Clone() {
      return new GetPinnedMessagesResponse(this);
    }

    /// <summary>Field number for the "pinned_message_ids" field.</summary>
    public const int PinnedMessageIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<ulong> _repeated_pinnedMessageIds_codec
        = pb::FieldCodec.ForUInt64(10);
    private readonly pbc::RepeatedField<ulong> pinnedMessageIds_ = new pbc::RepeatedField<ulong>();
    /// <summary>
    /// The IDs of the pinned messages.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> PinnedMessageIds {
      get { return pinnedMessageIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetPinnedMessagesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetPinnedMessagesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!pinnedMessageIds_.Equals(other.pinnedMessageIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= pinnedMessageIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      pinnedMessageIds_.WriteTo(output, _repeated_pinnedMessageIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      pinnedMessageIds_.WriteTo(ref output, _repeated_pinnedMessageIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += pinnedMessageIds_.CalculateSize(_repeated_pinnedMessageIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetPinnedMessagesResponse other) {
      if (other == null) {
        return;
      }
      pinnedMessageIds_.Add(other.pinnedMessageIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            pinnedMessageIds_.AddEntriesFrom(input, _repeated_pinnedMessageIds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            pinnedMessageIds_.AddEntriesFrom(ref input, _repeated_pinnedMessageIds_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used in `AddReaction` endpoint.
  /// </summary>
  public sealed partial class AddReactionRequest : pb::IMessage<AddReactionRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AddReactionRequest> _parser = new pb::MessageParser<AddReactionRequest>(() => new AddReactionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddReactionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddReactionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddReactionRequest(AddReactionRequest other) : this() {
      guildId_ = other.guildId_;
      channelId_ = other.channelId_;
      messageId_ = other.messageId_;
      emote_ = other.emote_ != null ? other.emote_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddReactionRequest Clone() {
      return new AddReactionRequest(this);
    }

    /// <summary>Field number for the "guild_id" field.</summary>
    public const int GuildIdFieldNumber = 1;
    private ulong guildId_;
    /// <summary>
    /// Guild ID of the guild where the channel is.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong GuildId {
      get { return guildId_; }
      set {
        guildId_ = value;
      }
    }

    /// <summary>Field number for the "channel_id" field.</summary>
    public const int ChannelIdFieldNumber = 2;
    private ulong channelId_;
    /// <summary>
    /// Channel ID of the channel where the message is.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ChannelId {
      get { return channelId_; }
      set {
        channelId_ = value;
      }
    }

    /// <summary>Field number for the "message_id" field.</summary>
    public const int MessageIdFieldNumber = 3;
    private ulong messageId_;
    /// <summary>
    /// Message ID of the message we want to add a reaction to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MessageId {
      get { return messageId_; }
      set {
        messageId_ = value;
      }
    }

    /// <summary>Field number for the "emote" field.</summary>
    public const int EmoteFieldNumber = 4;
    private global::Harmony.Emote.V1.Emote emote_;
    /// <summary>
    /// The emote we want to react with.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Emote.V1.Emote Emote {
      get { return emote_; }
      set {
        emote_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddReactionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddReactionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GuildId != other.GuildId) return false;
      if (ChannelId != other.ChannelId) return false;
      if (MessageId != other.MessageId) return false;
      if (!object.Equals(Emote, other.Emote)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GuildId != 0UL) hash ^= GuildId.GetHashCode();
      if (ChannelId != 0UL) hash ^= ChannelId.GetHashCode();
      if (MessageId != 0UL) hash ^= MessageId.GetHashCode();
      if (emote_ != null) hash ^= Emote.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GuildId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(GuildId);
      }
      if (ChannelId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ChannelId);
      }
      if (MessageId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(MessageId);
      }
      if (emote_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Emote);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GuildId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(GuildId);
      }
      if (ChannelId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ChannelId);
      }
      if (MessageId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(MessageId);
      }
      if (emote_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Emote);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GuildId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GuildId);
      }
      if (ChannelId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ChannelId);
      }
      if (MessageId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MessageId);
      }
      if (emote_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Emote);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddReactionRequest other) {
      if (other == null) {
        return;
      }
      if (other.GuildId != 0UL) {
        GuildId = other.GuildId;
      }
      if (other.ChannelId != 0UL) {
        ChannelId = other.ChannelId;
      }
      if (other.MessageId != 0UL) {
        MessageId = other.MessageId;
      }
      if (other.emote_ != null) {
        if (emote_ == null) {
          Emote = new global::Harmony.Emote.V1.Emote();
        }
        Emote.MergeFrom(other.Emote);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GuildId = input.ReadUInt64();
            break;
          }
          case 16: {
            ChannelId = input.ReadUInt64();
            break;
          }
          case 24: {
            MessageId = input.ReadUInt64();
            break;
          }
          case 34: {
            if (emote_ == null) {
              Emote = new global::Harmony.Emote.V1.Emote();
            }
            input.ReadMessage(Emote);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GuildId = input.ReadUInt64();
            break;
          }
          case 16: {
            ChannelId = input.ReadUInt64();
            break;
          }
          case 24: {
            MessageId = input.ReadUInt64();
            break;
          }
          case 34: {
            if (emote_ == null) {
              Emote = new global::Harmony.Emote.V1.Emote();
            }
            input.ReadMessage(Emote);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used in `AddReaction` endpoint.
  /// </summary>
  public sealed partial class AddReactionResponse : pb::IMessage<AddReactionResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AddReactionResponse> _parser = new pb::MessageParser<AddReactionResponse>(() => new AddReactionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddReactionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddReactionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddReactionResponse(AddReactionResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddReactionResponse Clone() {
      return new AddReactionResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddReactionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddReactionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddReactionResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used in `RemoveReaction` endpoint.
  /// </summary>
  public sealed partial class RemoveReactionRequest : pb::IMessage<RemoveReactionRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RemoveReactionRequest> _parser = new pb::MessageParser<RemoveReactionRequest>(() => new RemoveReactionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveReactionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveReactionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveReactionRequest(RemoveReactionRequest other) : this() {
      guildId_ = other.guildId_;
      channelId_ = other.channelId_;
      messageId_ = other.messageId_;
      emote_ = other.emote_ != null ? other.emote_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveReactionRequest Clone() {
      return new RemoveReactionRequest(this);
    }

    /// <summary>Field number for the "guild_id" field.</summary>
    public const int GuildIdFieldNumber = 1;
    private ulong guildId_;
    /// <summary>
    /// Guild ID of the guild where the channel is.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong GuildId {
      get { return guildId_; }
      set {
        guildId_ = value;
      }
    }

    /// <summary>Field number for the "channel_id" field.</summary>
    public const int ChannelIdFieldNumber = 2;
    private ulong channelId_;
    /// <summary>
    /// Channel ID of the channel where the message is.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ChannelId {
      get { return channelId_; }
      set {
        channelId_ = value;
      }
    }

    /// <summary>Field number for the "message_id" field.</summary>
    public const int MessageIdFieldNumber = 3;
    private ulong messageId_;
    /// <summary>
    /// Message ID of the message we want to remove a reaction.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MessageId {
      get { return messageId_; }
      set {
        messageId_ = value;
      }
    }

    /// <summary>Field number for the "emote" field.</summary>
    public const int EmoteFieldNumber = 4;
    private global::Harmony.Emote.V1.Emote emote_;
    /// <summary>
    /// The emote we want to remove the react of.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Harmony.Emote.V1.Emote Emote {
      get { return emote_; }
      set {
        emote_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveReactionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveReactionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GuildId != other.GuildId) return false;
      if (ChannelId != other.ChannelId) return false;
      if (MessageId != other.MessageId) return false;
      if (!object.Equals(Emote, other.Emote)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GuildId != 0UL) hash ^= GuildId.GetHashCode();
      if (ChannelId != 0UL) hash ^= ChannelId.GetHashCode();
      if (MessageId != 0UL) hash ^= MessageId.GetHashCode();
      if (emote_ != null) hash ^= Emote.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GuildId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(GuildId);
      }
      if (ChannelId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ChannelId);
      }
      if (MessageId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(MessageId);
      }
      if (emote_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Emote);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GuildId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(GuildId);
      }
      if (ChannelId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ChannelId);
      }
      if (MessageId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(MessageId);
      }
      if (emote_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Emote);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GuildId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GuildId);
      }
      if (ChannelId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ChannelId);
      }
      if (MessageId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MessageId);
      }
      if (emote_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Emote);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveReactionRequest other) {
      if (other == null) {
        return;
      }
      if (other.GuildId != 0UL) {
        GuildId = other.GuildId;
      }
      if (other.ChannelId != 0UL) {
        ChannelId = other.ChannelId;
      }
      if (other.MessageId != 0UL) {
        MessageId = other.MessageId;
      }
      if (other.emote_ != null) {
        if (emote_ == null) {
          Emote = new global::Harmony.Emote.V1.Emote();
        }
        Emote.MergeFrom(other.Emote);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GuildId = input.ReadUInt64();
            break;
          }
          case 16: {
            ChannelId = input.ReadUInt64();
            break;
          }
          case 24: {
            MessageId = input.ReadUInt64();
            break;
          }
          case 34: {
            if (emote_ == null) {
              Emote = new global::Harmony.Emote.V1.Emote();
            }
            input.ReadMessage(Emote);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GuildId = input.ReadUInt64();
            break;
          }
          case 16: {
            ChannelId = input.ReadUInt64();
            break;
          }
          case 24: {
            MessageId = input.ReadUInt64();
            break;
          }
          case 34: {
            if (emote_ == null) {
              Emote = new global::Harmony.Emote.V1.Emote();
            }
            input.ReadMessage(Emote);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used in `RemoveReaction` endpoint.
  /// </summary>
  public sealed partial class RemoveReactionResponse : pb::IMessage<RemoveReactionResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RemoveReactionResponse> _parser = new pb::MessageParser<RemoveReactionResponse>(() => new RemoveReactionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveReactionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Harmony.Chat.V1.MessagesReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveReactionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveReactionResponse(RemoveReactionResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveReactionResponse Clone() {
      return new RemoveReactionResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveReactionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveReactionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveReactionResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
